@256
D=A
@SP
M=D
@Sys.init
0;JMP
(CALL)
@R15
M=D
@R13
D=M
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@R15
D=D+M
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@R14
A=M
0;JMP
(RETURNS)
@LCL
D=M
@R13
M=D
@5
D=A
@R13
A=M-D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@1
D=A
@R13
A=M-D
D=M
@THAT
M=D
@R14
A=M
0;JMP
(ADD)
@R13
M=D
@SP
A=M-1
D=M
M=0
@SP
M=M-1
A=M-1
M=M+D
@R13
A=M
0;JMP
(SUB)
@R13
M=D
@SP
A=M-1
D=M
M=0
@SP
M=M-1
A=M-1
M=M-D
@R13
A=M
0;JMP
(AND)
@R13
M=D
@SP
A=M-1
D=M
M=0
@SP
M=M-1
A=M-1
M=M&D
@R13
A=M
0;JMP
(OR)
@R13
M=D
@SP
A=M-1
D=M
M=0
@SP
M=M-1
A=M-1
M=M|D
@R13
A=M
0;JMP
(EQ)
@R13
M=D
@SP
A=M-1
D=M
M=0
@SP
M=M-1
A=M-1
D=M-D
M=-1
@FALSE
D;JNE
@R13
A=M
0;JMP
(GT)
@R13
M=D
@SP
A=M-1
D=M
M=0
@SP
M=M-1
A=M-1
D=M-D
M=-1
@FALSE
D;JLE
@R13
A=M
0;JMP
(LT)
@R13
M=D
@SP
A=M-1
D=M
M=0
@SP
M=M-1
A=M-1
D=M-D
M=-1
@FALSE
D;JGE
@R13
A=M
0;JMP
(FALSE)
@SP
A=M-1
M=0
@R13
A=M
0;JMP
(FUNCT)
@R13
M=D
@R14
D=M
(F_LOOP)
@SP
M=M+1
A=M-1
M=0
D=D-1
@F_LOOP
D;JGT
@R13
A=M
0;JMP
(IF)
@R13
M=D
@SP
A=M-1
D=M
M=0
@SP
M=M-1
@R13
A=M
0;JMP
(POP)
@R13
M=D
@SP
AM=M-1
D=M
M=0
@R13
A=M
M=D
@R14
A=M
0;JMP
(THS)
@R14
M=D
@THIS
D=A
@POP
0;JMP
(THT)
@R14
M=D
@THAT
D=A
@POP
0;JMP
//funct
(String.new)
@0
D=A
@R14
M=D
@F0
D;JEQ
D=A
@FUNCT
0;JMP
(F0)
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN1
D=A
@R13
M=D
(call_Memory.alloc)
@Memory.alloc
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN1)
//Pop point
@POP_R2
D=A
@THS
0;JMP
(POP_R2)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n3
D=A
@LT
0;JMP
(n3)
//if
@IF4
D=A
@IF
0;JMP
(IF4)
@String.newIF_TRUE0
D;JNE
//goto
@String.newIF_FALSE0
0;JMP
(String.newIF_TRUE0)
//Push C
@14
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN5
D=A
@R13
M=D
(call_Sys.error)
@Sys.error
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN5)
//Pop
@POP_R6
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R6)
(String.newIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n7
D=A
@GT
0;JMP
(n7)
//if
@IF8
D=A
@IF
0;JMP
(IF8)
@String.newIF_TRUE1
D;JNE
//goto
@String.newIF_FALSE1
0;JMP
(String.newIF_TRUE1)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN9
D=A
@R13
M=D
(call_Array.new)
@Array.new
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN9)
//Pop
@POP_R10
D=A
@R14
M=D
//THS
@1
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R10)
(String.newIF_FALSE1)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R11
D=A
@R14
M=D
//THS
@0
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R11)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R12
D=A
@R14
M=D
//THS
@2
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R12)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.dispose)
@0
D=A
@R14
M=D
@F13
D;JEQ
D=A
@FUNCT
0;JMP
(F13)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R14
D=A
@THS
0;JMP
(POP_R14)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n15
D=A
@GT
0;JMP
(n15)
//if
@IF16
D=A
@IF
0;JMP
(IF16)
@String.disposeIF_TRUE0
D;JNE
//goto
@String.disposeIF_FALSE0
0;JMP
(String.disposeIF_TRUE0)
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN17
D=A
@R13
M=D
(call_Array.dispose)
@Array.dispose
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN17)
//Pop
@POP_R18
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R18)
(String.disposeIF_FALSE0)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN19
D=A
@R13
M=D
(call_Memory.deAlloc)
@Memory.deAlloc
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN19)
//Pop
@POP_R20
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R20)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.length)
@0
D=A
@R14
M=D
@F21
D;JEQ
D=A
@FUNCT
0;JMP
(F21)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R22
D=A
@THS
0;JMP
(POP_R22)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.charAt)
@0
D=A
@R14
M=D
@F23
D;JEQ
D=A
@FUNCT
0;JMP
(F23)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R24
D=A
@THS
0;JMP
(POP_R24)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n25
D=A
@LT
0;JMP
(n25)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n26
D=A
@GT
0;JMP
(n26)
//OR
@OR_R27
D=A
@OR
0;JMP
(OR_R27)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//EQ
@n28
D=A
@EQ
0;JMP
(n28)
//OR
@OR_R29
D=A
@OR
0;JMP
(OR_R29)
//if
@IF30
D=A
@IF
0;JMP
(IF30)
@String.charAtIF_TRUE0
D;JNE
//goto
@String.charAtIF_FALSE0
0;JMP
(String.charAtIF_TRUE0)
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-1
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-1)
//Pop
@POP_R31
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R31)
(String.charAtIF_FALSE0)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R32
D=A
@ADD
0;JMP
(ADD_R32)
//Pop point
@POP_R33
D=A
@THT
0;JMP
(POP_R33)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.setCharAt)
@0
D=A
@R14
M=D
@F34
D;JEQ
D=A
@FUNCT
0;JMP
(F34)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R35
D=A
@THS
0;JMP
(POP_R35)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n36
D=A
@LT
0;JMP
(n36)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n37
D=A
@GT
0;JMP
(n37)
//OR
@OR_R38
D=A
@OR
0;JMP
(OR_R38)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//EQ
@n39
D=A
@EQ
0;JMP
(n39)
//OR
@OR_R40
D=A
@OR
0;JMP
(OR_R40)
//if
@IF41
D=A
@IF
0;JMP
(IF41)
@String.setCharAtIF_TRUE0
D;JNE
//goto
@String.setCharAtIF_FALSE0
0;JMP
(String.setCharAtIF_TRUE0)
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-2
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-2)
//Pop
@POP_R42
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R42)
(String.setCharAtIF_FALSE0)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R43
D=A
@ADD
0;JMP
(ADD_R43)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R44
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R44)
//Pop point
@POP_R45
D=A
@THT
0;JMP
(POP_R45)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R46
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R46)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.appendChar)
@0
D=A
@R14
M=D
@F47
D;JEQ
D=A
@FUNCT
0;JMP
(F47)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R48
D=A
@THS
0;JMP
(POP_R48)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//EQ
@n49
D=A
@EQ
0;JMP
(n49)
//if
@IF50
D=A
@IF
0;JMP
(IF50)
@String.appendCharIF_TRUE0
D;JNE
//goto
@String.appendCharIF_FALSE0
0;JMP
(String.appendCharIF_TRUE0)
//Push C
@17
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-3
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-3)
//Pop
@POP_R51
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R51)
(String.appendCharIF_FALSE0)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R52
D=A
@ADD
0;JMP
(ADD_R52)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R53
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R53)
//Pop point
@POP_R54
D=A
@THT
0;JMP
(POP_R54)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R55
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R55)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R56
D=A
@ADD
0;JMP
(ADD_R56)
//Pop
@POP_R57
D=A
@R14
M=D
//THS
@2
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R57)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.eraseLastChar)
@0
D=A
@R14
M=D
@F58
D;JEQ
D=A
@FUNCT
0;JMP
(F58)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R59
D=A
@THS
0;JMP
(POP_R59)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n60
D=A
@EQ
0;JMP
(n60)
//if
@IF61
D=A
@IF
0;JMP
(IF61)
@String.eraseLastCharIF_TRUE0
D;JNE
//goto
@String.eraseLastCharIF_FALSE0
0;JMP
(String.eraseLastCharIF_TRUE0)
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-4
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-4)
//Pop
@POP_R62
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R62)
(String.eraseLastCharIF_FALSE0)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R63
D=A
@SUB
0;JMP
(SUB_R63)
//Pop
@POP_R64
D=A
@R14
M=D
//THS
@2
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R64)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.intValue)
@5
D=A
@R14
M=D
@F65
D;JEQ
D=A
@FUNCT
0;JMP
(F65)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R66
D=A
@THS
0;JMP
(POP_R66)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n67
D=A
@EQ
0;JMP
(n67)
//if
@IF68
D=A
@IF
0;JMP
(IF68)
@String.intValueIF_TRUE0
D;JNE
//goto
@String.intValueIF_FALSE0
0;JMP
(String.intValueIF_TRUE0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
(String.intValueIF_FALSE0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R69
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R69)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R70
D=A
@ADD
0;JMP
(ADD_R70)
//Pop point
@POP_R71
D=A
@THT
0;JMP
(POP_R71)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@45
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n72
D=A
@EQ
0;JMP
(n72)
//if
@IF73
D=A
@IF
0;JMP
(IF73)
@String.intValueIF_TRUE1
D;JNE
//goto
@String.intValueIF_FALSE1
0;JMP
(String.intValueIF_TRUE1)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R74
D=A
@R14
M=D
//L
@4
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R74)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R75
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R75)
(String.intValueIF_FALSE1)
(String.intValueWHILE_EXP0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n76
D=A
@LT
0;JMP
(n76)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//AND
@AND_R77
D=A
@AND
0;JMP
(AND_R77)
//NOT
@SP
A=M-1
M=!M
//if
@IF78
D=A
@IF
0;JMP
(IF78)
@String.intValueWHILE_END0
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R79
D=A
@ADD
0;JMP
(ADD_R79)
//Pop point
@POP_R80
D=A
@THT
0;JMP
(POP_R80)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R81
D=A
@SUB
0;JMP
(SUB_R81)
//Pop
@POP_R82
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R82)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n83
D=A
@LT
0;JMP
(n83)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@9
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n84
D=A
@GT
0;JMP
(n84)
//OR
@OR_R85
D=A
@OR
0;JMP
(OR_R85)
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R86
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R86)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF87
D=A
@IF
0;JMP
(IF87)
@String.intValueIF_TRUE2
D;JNE
//goto
@String.intValueIF_FALSE2
0;JMP
(String.intValueIF_TRUE2)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN88
D=A
@R13
M=D
(call_Math.multiply)
@Math.multiply
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN88)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R89
D=A
@ADD
0;JMP
(ADD_R89)
//Pop
@POP_R90
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R90)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R91
D=A
@ADD
0;JMP
(ADD_R91)
//Pop
@POP_R92
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R92)
(String.intValueIF_FALSE2)
//goto
@String.intValueWHILE_EXP0
0;JMP
(String.intValueWHILE_END0)
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF93
D=A
@IF
0;JMP
(IF93)
@String.intValueIF_TRUE3
D;JNE
//goto
@String.intValueIF_FALSE3
0;JMP
(String.intValueIF_TRUE3)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//Pop
@POP_R94
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R94)
(String.intValueIF_FALSE3)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.setInt)
@4
D=A
@R14
M=D
@F95
D;JEQ
D=A
@FUNCT
0;JMP
(F95)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R96
D=A
@THS
0;JMP
(POP_R96)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n97
D=A
@EQ
0;JMP
(n97)
//if
@IF98
D=A
@IF
0;JMP
(IF98)
@String.setIntIF_TRUE0
D;JNE
//goto
@String.setIntIF_FALSE0
0;JMP
(String.setIntIF_TRUE0)
//Push C
@19
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-5
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-5)
//Pop
@POP_R99
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R99)
(String.setIntIF_FALSE0)
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-6
D=A
@R13
M=D
@call_Array.new
0;JMP
(RETURN-6)
//Pop
@POP_R100
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R100)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n101
D=A
@LT
0;JMP
(n101)
//if
@IF102
D=A
@IF
0;JMP
(IF102)
@String.setIntIF_TRUE1
D;JNE
//goto
@String.setIntIF_FALSE1
0;JMP
(String.setIntIF_TRUE1)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R103
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R103)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//Pop
@POP_R104
D=A
@R14
M=D
//A
@1
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R104)
(String.setIntIF_FALSE1)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R105
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R105)
(String.setIntWHILE_EXP0)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n106
D=A
@GT
0;JMP
(n106)
//NOT
@SP
A=M-1
M=!M
//if
@IF107
D=A
@IF
0;JMP
(IF107)
@String.setIntWHILE_END0
D;JNE
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN108
D=A
@R13
M=D
(call_Math.divide)
@Math.divide
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN108)
//Pop
@POP_R109
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R109)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R110
D=A
@ADD
0;JMP
(ADD_R110)
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-7
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-7)
//SUB
@SUB_R111
D=A
@SUB
0;JMP
(SUB_R111)
//ADD
@ADD_R112
D=A
@ADD
0;JMP
(ADD_R112)
//Pop
@POP_R113
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R113)
//Pop point
@POP_R114
D=A
@THT
0;JMP
(POP_R114)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R115
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R115)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R116
D=A
@ADD
0;JMP
(ADD_R116)
//Pop
@POP_R117
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R117)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R118
D=A
@R14
M=D
//A
@1
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R118)
//goto
@String.setIntWHILE_EXP0
0;JMP
(String.setIntWHILE_END0)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF119
D=A
@IF
0;JMP
(IF119)
@String.setIntIF_TRUE2
D;JNE
//goto
@String.setIntIF_FALSE2
0;JMP
(String.setIntIF_TRUE2)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R120
D=A
@ADD
0;JMP
(ADD_R120)
//Push C
@45
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R121
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R121)
//Pop point
@POP_R122
D=A
@THT
0;JMP
(POP_R122)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R123
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R123)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R124
D=A
@ADD
0;JMP
(ADD_R124)
//Pop
@POP_R125
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R125)
(String.setIntIF_FALSE2)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n126
D=A
@LT
0;JMP
(n126)
//if
@IF127
D=A
@IF
0;JMP
(IF127)
@String.setIntIF_TRUE3
D;JNE
//goto
@String.setIntIF_FALSE3
0;JMP
(String.setIntIF_TRUE3)
//Push C
@19
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-8
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-8)
//Pop
@POP_R128
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R128)
(String.setIntIF_FALSE3)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n129
D=A
@EQ
0;JMP
(n129)
//if
@IF130
D=A
@IF
0;JMP
(IF130)
@String.setIntIF_TRUE4
D;JNE
//goto
@String.setIntIF_FALSE4
0;JMP
(String.setIntIF_TRUE4)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R131
D=A
@ADD
0;JMP
(ADD_R131)
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R132
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R132)
//Pop point
@POP_R133
D=A
@THT
0;JMP
(POP_R133)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R134
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R134)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R135
D=A
@R14
M=D
//THS
@2
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R135)
//goto
@String.setIntIF_END4
0;JMP
(String.setIntIF_FALSE4)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R136
D=A
@R14
M=D
//THS
@2
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R136)
(String.setIntWHILE_EXP1)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n137
D=A
@LT
0;JMP
(n137)
//NOT
@SP
A=M-1
M=!M
//if
@IF138
D=A
@IF
0;JMP
(IF138)
@String.setIntWHILE_END1
D;JNE
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R139
D=A
@ADD
0;JMP
(ADD_R139)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R140
D=A
@ADD
0;JMP
(ADD_R140)
//SUB
@SUB_R141
D=A
@SUB
0;JMP
(SUB_R141)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R142
D=A
@ADD
0;JMP
(ADD_R142)
//Pop point
@POP_R143
D=A
@THT
0;JMP
(POP_R143)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R144
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R144)
//Pop point
@POP_R145
D=A
@THT
0;JMP
(POP_R145)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R146
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R146)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R147
D=A
@ADD
0;JMP
(ADD_R147)
//Pop
@POP_R148
D=A
@R14
M=D
//THS
@2
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R148)
//goto
@String.setIntWHILE_EXP1
0;JMP
(String.setIntWHILE_END1)
(String.setIntIF_END4)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-9
D=A
@R13
M=D
@call_Array.dispose
0;JMP
(RETURN-9)
//Pop
@POP_R149
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R149)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.newLine)
@0
D=A
@R14
M=D
@F150
D;JEQ
D=A
@FUNCT
0;JMP
(F150)
//Push C
@128
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.backSpace)
@0
D=A
@R14
M=D
@F151
D;JEQ
D=A
@FUNCT
0;JMP
(F151)
//Push C
@129
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.doubleQuote)
@0
D=A
@R14
M=D
@F152
D;JEQ
D=A
@FUNCT
0;JMP
(F152)
//Push C
@34
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Math.init)
@1
D=A
@R14
M=D
@F153
D;JEQ
D=A
@FUNCT
0;JMP
(F153)
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-10
D=A
@R13
M=D
@call_Array.new
0;JMP
(RETURN-10)
//Pop
@POP_R154
D=A
@R14
M=D
//S
@Math.1
D=A
@POP
0;JMP
(POP_R154)
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-11
D=A
@R13
M=D
@call_Array.new
0;JMP
(RETURN-11)
//Pop
@POP_R155
D=A
@R14
M=D
//S
@Math.0
D=A
@POP
0;JMP
(POP_R155)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R156
D=A
@ADD
0;JMP
(ADD_R156)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R157
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R157)
//Pop point
@POP_R158
D=A
@THT
0;JMP
(POP_R158)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R159
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R159)
(Math.initWHILE_EXP0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n160
D=A
@LT
0;JMP
(n160)
//NOT
@SP
A=M-1
M=!M
//if
@IF161
D=A
@IF
0;JMP
(IF161)
@Math.initWHILE_END0
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R162
D=A
@ADD
0;JMP
(ADD_R162)
//Pop
@POP_R163
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R163)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R164
D=A
@ADD
0;JMP
(ADD_R164)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R165
D=A
@SUB
0;JMP
(SUB_R165)
//Push S
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R166
D=A
@ADD
0;JMP
(ADD_R166)
//Pop point
@POP_R167
D=A
@THT
0;JMP
(POP_R167)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R168
D=A
@SUB
0;JMP
(SUB_R168)
//Push S
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R169
D=A
@ADD
0;JMP
(ADD_R169)
//Pop point
@POP_R170
D=A
@THT
0;JMP
(POP_R170)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R171
D=A
@ADD
0;JMP
(ADD_R171)
//Pop
@POP_R172
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R172)
//Pop point
@POP_R173
D=A
@THT
0;JMP
(POP_R173)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R174
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R174)
//goto
@Math.initWHILE_EXP0
0;JMP
(Math.initWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Math.abs)
@0
D=A
@R14
M=D
@F175
D;JEQ
D=A
@FUNCT
0;JMP
(F175)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n176
D=A
@LT
0;JMP
(n176)
//if
@IF177
D=A
@IF
0;JMP
(IF177)
@Math.absIF_TRUE0
D;JNE
//goto
@Math.absIF_FALSE0
0;JMP
(Math.absIF_TRUE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//Pop
@POP_R178
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R178)
(Math.absIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Math.multiply)
@5
D=A
@R14
M=D
@F179
D;JEQ
D=A
@FUNCT
0;JMP
(F179)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n180
D=A
@LT
0;JMP
(n180)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n181
D=A
@GT
0;JMP
(n181)
//AND
@AND_R182
D=A
@AND
0;JMP
(AND_R182)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n183
D=A
@GT
0;JMP
(n183)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n184
D=A
@LT
0;JMP
(n184)
//AND
@AND_R185
D=A
@AND
0;JMP
(AND_R185)
//OR
@OR_R186
D=A
@OR
0;JMP
(OR_R186)
//Pop
@POP_R187
D=A
@R14
M=D
//L
@4
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R187)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN188
D=A
@R13
M=D
(call_Math.abs)
@Math.abs
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN188)
//Pop
@POP_R189
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R189)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-12
D=A
@R13
M=D
@call_Math.abs
0;JMP
(RETURN-12)
//Pop
@POP_R190
D=A
@R14
M=D
//A
@1
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R190)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n191
D=A
@LT
0;JMP
(n191)
//if
@IF192
D=A
@IF
0;JMP
(IF192)
@Math.multiplyIF_TRUE0
D;JNE
//goto
@Math.multiplyIF_FALSE0
0;JMP
(Math.multiplyIF_TRUE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R193
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R193)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R194
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R194)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R195
D=A
@R14
M=D
//A
@1
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R195)
(Math.multiplyIF_FALSE0)
(Math.multiplyWHILE_EXP0)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R196
D=A
@SUB
0;JMP
(SUB_R196)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R197
D=A
@SUB
0;JMP
(SUB_R197)
//LT
@n198
D=A
@LT
0;JMP
(n198)
//NOT
@SP
A=M-1
M=!M
//if
@IF199
D=A
@IF
0;JMP
(IF199)
@Math.multiplyWHILE_END0
D;JNE
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R200
D=A
@ADD
0;JMP
(ADD_R200)
//Pop point
@POP_R201
D=A
@THT
0;JMP
(POP_R201)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//AND
@AND_R202
D=A
@AND
0;JMP
(AND_R202)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n203
D=A
@EQ
0;JMP
(n203)
//NOT
@SP
A=M-1
M=!M
//if
@IF204
D=A
@IF
0;JMP
(IF204)
@Math.multiplyIF_TRUE1
D;JNE
//goto
@Math.multiplyIF_FALSE1
0;JMP
(Math.multiplyIF_TRUE1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R205
D=A
@ADD
0;JMP
(ADD_R205)
//Pop
@POP_R206
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R206)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R207
D=A
@ADD
0;JMP
(ADD_R207)
//Pop point
@POP_R208
D=A
@THT
0;JMP
(POP_R208)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R209
D=A
@ADD
0;JMP
(ADD_R209)
//Pop
@POP_R210
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R210)
(Math.multiplyIF_FALSE1)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R211
D=A
@ADD
0;JMP
(ADD_R211)
//Pop
@POP_R212
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R212)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R213
D=A
@ADD
0;JMP
(ADD_R213)
//Pop
@POP_R214
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R214)
//goto
@Math.multiplyWHILE_EXP0
0;JMP
(Math.multiplyWHILE_END0)
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF215
D=A
@IF
0;JMP
(IF215)
@Math.multiplyIF_TRUE2
D;JNE
//goto
@Math.multiplyIF_FALSE2
0;JMP
(Math.multiplyIF_TRUE2)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//Pop
@POP_R216
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R216)
(Math.multiplyIF_FALSE2)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Math.divide)
@4
D=A
@R14
M=D
@F217
D;JEQ
D=A
@FUNCT
0;JMP
(F217)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n218
D=A
@EQ
0;JMP
(n218)
//if
@IF219
D=A
@IF
0;JMP
(IF219)
@Math.divideIF_TRUE0
D;JNE
//goto
@Math.divideIF_FALSE0
0;JMP
(Math.divideIF_TRUE0)
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-13
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-13)
//Pop
@POP_R220
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R220)
(Math.divideIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n221
D=A
@LT
0;JMP
(n221)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n222
D=A
@GT
0;JMP
(n222)
//AND
@AND_R223
D=A
@AND
0;JMP
(AND_R223)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n224
D=A
@GT
0;JMP
(n224)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n225
D=A
@LT
0;JMP
(n225)
//AND
@AND_R226
D=A
@AND
0;JMP
(AND_R226)
//OR
@OR_R227
D=A
@OR
0;JMP
(OR_R227)
//Pop
@POP_R228
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R228)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R229
D=A
@ADD
0;JMP
(ADD_R229)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-14
D=A
@R13
M=D
@call_Math.abs
0;JMP
(RETURN-14)
//Pop
@POP_R230
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R230)
//Pop point
@POP_R231
D=A
@THT
0;JMP
(POP_R231)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R232
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R232)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-15
D=A
@R13
M=D
@call_Math.abs
0;JMP
(RETURN-15)
//Pop
@POP_R233
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R233)
(Math.divideWHILE_EXP0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n234
D=A
@LT
0;JMP
(n234)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//AND
@AND_R235
D=A
@AND
0;JMP
(AND_R235)
//NOT
@SP
A=M-1
M=!M
//if
@IF236
D=A
@IF
0;JMP
(IF236)
@Math.divideWHILE_END0
D;JNE
//Push C
@32767
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R237
D=A
@ADD
0;JMP
(ADD_R237)
//Pop point
@POP_R238
D=A
@THT
0;JMP
(POP_R238)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R239
D=A
@SUB
0;JMP
(SUB_R239)
//SUB
@SUB_R240
D=A
@SUB
0;JMP
(SUB_R240)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R241
D=A
@ADD
0;JMP
(ADD_R241)
//Pop point
@POP_R242
D=A
@THT
0;JMP
(POP_R242)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R243
D=A
@SUB
0;JMP
(SUB_R243)
//LT
@n244
D=A
@LT
0;JMP
(n244)
//Pop
@POP_R245
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R245)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//if
@IF246
D=A
@IF
0;JMP
(IF246)
@Math.divideIF_TRUE1
D;JNE
//goto
@Math.divideIF_FALSE1
0;JMP
(Math.divideIF_TRUE1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R247
D=A
@ADD
0;JMP
(ADD_R247)
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R248
D=A
@ADD
0;JMP
(ADD_R248)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R249
D=A
@ADD
0;JMP
(ADD_R249)
//Pop point
@POP_R250
D=A
@THT
0;JMP
(POP_R250)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R251
D=A
@ADD
0;JMP
(ADD_R251)
//Pop point
@POP_R252
D=A
@THT
0;JMP
(POP_R252)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R253
D=A
@ADD
0;JMP
(ADD_R253)
//Pop
@POP_R254
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R254)
//Pop point
@POP_R255
D=A
@THT
0;JMP
(POP_R255)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R256
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R256)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R257
D=A
@ADD
0;JMP
(ADD_R257)
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R258
D=A
@ADD
0;JMP
(ADD_R258)
//Pop point
@POP_R259
D=A
@THT
0;JMP
(POP_R259)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R260
D=A
@SUB
0;JMP
(SUB_R260)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R261
D=A
@SUB
0;JMP
(SUB_R261)
//GT
@n262
D=A
@GT
0;JMP
(n262)
//Pop
@POP_R263
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R263)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//if
@IF264
D=A
@IF
0;JMP
(IF264)
@Math.divideIF_TRUE2
D;JNE
//goto
@Math.divideIF_FALSE2
0;JMP
(Math.divideIF_TRUE2)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R265
D=A
@ADD
0;JMP
(ADD_R265)
//Pop
@POP_R266
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R266)
(Math.divideIF_FALSE2)
(Math.divideIF_FALSE1)
//goto
@Math.divideWHILE_EXP0
0;JMP
(Math.divideWHILE_END0)
(Math.divideWHILE_EXP1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//GT
@n267
D=A
@GT
0;JMP
(n267)
//NOT
@SP
A=M-1
M=!M
//if
@IF268
D=A
@IF
0;JMP
(IF268)
@Math.divideWHILE_END1
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R269
D=A
@ADD
0;JMP
(ADD_R269)
//Pop point
@POP_R270
D=A
@THT
0;JMP
(POP_R270)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R271
D=A
@SUB
0;JMP
(SUB_R271)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R272
D=A
@SUB
0;JMP
(SUB_R272)
//GT
@n273
D=A
@GT
0;JMP
(n273)
//NOT
@SP
A=M-1
M=!M
//if
@IF274
D=A
@IF
0;JMP
(IF274)
@Math.divideIF_TRUE3
D;JNE
//goto
@Math.divideIF_FALSE3
0;JMP
(Math.divideIF_TRUE3)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R275
D=A
@ADD
0;JMP
(ADD_R275)
//Pop point
@POP_R276
D=A
@THT
0;JMP
(POP_R276)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R277
D=A
@ADD
0;JMP
(ADD_R277)
//Pop
@POP_R278
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R278)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R279
D=A
@ADD
0;JMP
(ADD_R279)
//Pop point
@POP_R280
D=A
@THT
0;JMP
(POP_R280)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R281
D=A
@SUB
0;JMP
(SUB_R281)
//Pop
@POP_R282
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R282)
(Math.divideIF_FALSE3)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R283
D=A
@SUB
0;JMP
(SUB_R283)
//Pop
@POP_R284
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R284)
//goto
@Math.divideWHILE_EXP1
0;JMP
(Math.divideWHILE_END1)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF285
D=A
@IF
0;JMP
(IF285)
@Math.divideIF_TRUE4
D;JNE
//goto
@Math.divideIF_FALSE4
0;JMP
(Math.divideIF_TRUE4)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//Pop
@POP_R286
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R286)
(Math.divideIF_FALSE4)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Math.sqrt)
@4
D=A
@R14
M=D
@F287
D;JEQ
D=A
@FUNCT
0;JMP
(F287)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n288
D=A
@LT
0;JMP
(n288)
//if
@IF289
D=A
@IF
0;JMP
(IF289)
@Math.sqrtIF_TRUE0
D;JNE
//goto
@Math.sqrtIF_FALSE0
0;JMP
(Math.sqrtIF_TRUE0)
//Push C
@4
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-16
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-16)
//Pop
@POP_R290
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R290)
(Math.sqrtIF_FALSE0)
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R291
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R291)
(Math.sqrtWHILE_EXP0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//GT
@n292
D=A
@GT
0;JMP
(n292)
//NOT
@SP
A=M-1
M=!M
//if
@IF293
D=A
@IF
0;JMP
(IF293)
@Math.sqrtWHILE_END0
D;JNE
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R294
D=A
@ADD
0;JMP
(ADD_R294)
//Pop point
@POP_R295
D=A
@THT
0;JMP
(POP_R295)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R296
D=A
@ADD
0;JMP
(ADD_R296)
//Pop
@POP_R297
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R297)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-17
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-17)
//Pop
@POP_R298
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R298)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n299
D=A
@GT
0;JMP
(n299)
//NOT
@SP
A=M-1
M=!M
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n300
D=A
@LT
0;JMP
(n300)
//NOT
@SP
A=M-1
M=!M
//AND
@AND_R301
D=A
@AND
0;JMP
(AND_R301)
//if
@IF302
D=A
@IF
0;JMP
(IF302)
@Math.sqrtIF_TRUE1
D;JNE
//goto
@Math.sqrtIF_FALSE1
0;JMP
(Math.sqrtIF_TRUE1)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R303
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R303)
(Math.sqrtIF_FALSE1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R304
D=A
@SUB
0;JMP
(SUB_R304)
//Pop
@POP_R305
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R305)
//goto
@Math.sqrtWHILE_EXP0
0;JMP
(Math.sqrtWHILE_END0)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Math.max)
@0
D=A
@R14
M=D
@F306
D;JEQ
D=A
@FUNCT
0;JMP
(F306)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n307
D=A
@GT
0;JMP
(n307)
//if
@IF308
D=A
@IF
0;JMP
(IF308)
@Math.maxIF_TRUE0
D;JNE
//goto
@Math.maxIF_FALSE0
0;JMP
(Math.maxIF_TRUE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R309
D=A
@R14
M=D
//A
@1
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R309)
(Math.maxIF_FALSE0)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Math.min)
@0
D=A
@R14
M=D
@F310
D;JEQ
D=A
@FUNCT
0;JMP
(F310)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n311
D=A
@LT
0;JMP
(n311)
//if
@IF312
D=A
@IF
0;JMP
(IF312)
@Math.minIF_TRUE0
D;JNE
//goto
@Math.minIF_FALSE0
0;JMP
(Math.minIF_TRUE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R313
D=A
@R14
M=D
//A
@1
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R313)
(Math.minIF_FALSE0)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Array.new)
@0
D=A
@R14
M=D
@F314
D;JEQ
D=A
@FUNCT
0;JMP
(F314)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n315
D=A
@GT
0;JMP
(n315)
//NOT
@SP
A=M-1
M=!M
//if
@IF316
D=A
@IF
0;JMP
(IF316)
@Array.newIF_TRUE0
D;JNE
//goto
@Array.newIF_FALSE0
0;JMP
(Array.newIF_TRUE0)
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-18
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-18)
//Pop
@POP_R317
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R317)
(Array.newIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-19
D=A
@R13
M=D
@call_Memory.alloc
0;JMP
(RETURN-19)
@RETURNS
0;JMP
//funct
(Array.dispose)
@0
D=A
@R14
M=D
@F318
D;JEQ
D=A
@FUNCT
0;JMP
(F318)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R319
D=A
@THS
0;JMP
(POP_R319)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-20
D=A
@R13
M=D
@call_Memory.deAlloc
0;JMP
(RETURN-20)
//Pop
@POP_R320
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R320)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Keyboard.init)
@0
D=A
@R14
M=D
@F321
D;JEQ
D=A
@FUNCT
0;JMP
(F321)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Keyboard.keyPressed)
@0
D=A
@R14
M=D
@F322
D;JEQ
D=A
@FUNCT
0;JMP
(F322)
//Push C
@24576
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN323
D=A
@R13
M=D
(call_Memory.peek)
@Memory.peek
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN323)
@RETURNS
0;JMP
//funct
(Keyboard.readChar)
@2
D=A
@R14
M=D
@F324
D;JEQ
D=A
@FUNCT
0;JMP
(F324)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN325
D=A
@R13
M=D
(call_Output.printChar)
@Output.printChar
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN325)
//Pop
@POP_R326
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R326)
(Keyboard.readCharWHILE_EXP0)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n327
D=A
@EQ
0;JMP
(n327)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n328
D=A
@GT
0;JMP
(n328)
//OR
@OR_R329
D=A
@OR
0;JMP
(OR_R329)
//NOT
@SP
A=M-1
M=!M
//if
@IF330
D=A
@IF
0;JMP
(IF330)
@Keyboard.readCharWHILE_END0
D;JNE
//call
@RETURN331
D=A
@R13
M=D
(call_Keyboard.keyPressed)
@Keyboard.keyPressed
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN331)
//Pop
@POP_R332
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R332)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n333
D=A
@GT
0;JMP
(n333)
//if
@IF334
D=A
@IF
0;JMP
(IF334)
@Keyboard.readCharIF_TRUE0
D;JNE
//goto
@Keyboard.readCharIF_FALSE0
0;JMP
(Keyboard.readCharIF_TRUE0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R335
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R335)
(Keyboard.readCharIF_FALSE0)
//goto
@Keyboard.readCharWHILE_EXP0
0;JMP
(Keyboard.readCharWHILE_END0)
//call
@RETURN336
D=A
@R13
M=D
(call_String.backSpace)
@String.backSpace
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN336)
@RETURN-21
D=A
@R13
M=D
@call_Output.printChar
0;JMP
(RETURN-21)
//Pop
@POP_R337
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R337)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-22
D=A
@R13
M=D
@call_Output.printChar
0;JMP
(RETURN-22)
//Pop
@POP_R338
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R338)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Keyboard.readLine)
@5
D=A
@R14
M=D
@F339
D;JEQ
D=A
@FUNCT
0;JMP
(F339)
//Push C
@80
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN340
D=A
@R13
M=D
(call_String.new)
@String.new
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN340)
//Pop
@POP_R341
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R341)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN342
D=A
@R13
M=D
(call_Output.printString)
@Output.printString
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN342)
//Pop
@POP_R343
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R343)
//call
@RETURN344
D=A
@R13
M=D
(call_String.newLine)
@String.newLine
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN344)
//Pop
@POP_R345
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R345)
@RETURN-23
D=A
@R13
M=D
@call_String.backSpace
0;JMP
(RETURN-23)
//Pop
@POP_R346
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R346)
(Keyboard.readLineWHILE_EXP0)
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//NOT
@SP
A=M-1
M=!M
//if
@IF347
D=A
@IF
0;JMP
(IF347)
@Keyboard.readLineWHILE_END0
D;JNE
//call
@RETURN348
D=A
@R13
M=D
(call_Keyboard.readChar)
@Keyboard.readChar
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN348)
//Pop
@POP_R349
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R349)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//EQ
@n350
D=A
@EQ
0;JMP
(n350)
//Pop
@POP_R351
D=A
@R14
M=D
//L
@4
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R351)
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//if
@IF352
D=A
@IF
0;JMP
(IF352)
@Keyboard.readLineIF_TRUE0
D;JNE
//goto
@Keyboard.readLineIF_FALSE0
0;JMP
(Keyboard.readLineIF_TRUE0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//EQ
@n353
D=A
@EQ
0;JMP
(n353)
//if
@IF354
D=A
@IF
0;JMP
(IF354)
@Keyboard.readLineIF_TRUE1
D;JNE
//goto
@Keyboard.readLineIF_FALSE1
0;JMP
(Keyboard.readLineIF_TRUE1)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN355
D=A
@R13
M=D
(call_String.eraseLastChar)
@String.eraseLastChar
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN355)
//Pop
@POP_R356
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R356)
//goto
@Keyboard.readLineIF_END1
0;JMP
(Keyboard.readLineIF_FALSE1)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN357
D=A
@R13
M=D
(call_String.appendChar)
@String.appendChar
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN357)
//Pop
@POP_R358
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R358)
(Keyboard.readLineIF_END1)
(Keyboard.readLineIF_FALSE0)
//goto
@Keyboard.readLineWHILE_EXP0
0;JMP
(Keyboard.readLineWHILE_END0)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Keyboard.readInt)
@2
D=A
@R14
M=D
@F359
D;JEQ
D=A
@FUNCT
0;JMP
(F359)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN360
D=A
@R13
M=D
(call_Keyboard.readLine)
@Keyboard.readLine
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN360)
//Pop
@POP_R361
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R361)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN362
D=A
@R13
M=D
(call_String.intValue)
@String.intValue
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN362)
//Pop
@POP_R363
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R363)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN364
D=A
@R13
M=D
(call_String.dispose)
@String.dispose
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN364)
//Pop
@POP_R365
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R365)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Sys.init)
@0
D=A
@R14
M=D
@F366
D;JEQ
D=A
@FUNCT
0;JMP
(F366)
//call
@RETURN367
D=A
@R13
M=D
(call_Memory.init)
@Memory.init
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN367)
//Pop
@POP_R368
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R368)
//call
@RETURN369
D=A
@R13
M=D
(call_Math.init)
@Math.init
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN369)
//Pop
@POP_R370
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R370)
//call
@RETURN371
D=A
@R13
M=D
(call_Screen.init)
@Screen.init
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN371)
//Pop
@POP_R372
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R372)
//call
@RETURN373
D=A
@R13
M=D
(call_Output.init)
@Output.init
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN373)
//Pop
@POP_R374
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R374)
//call
@RETURN375
D=A
@R13
M=D
(call_Keyboard.init)
@Keyboard.init
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN375)
//Pop
@POP_R376
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R376)
//call
@RETURN377
D=A
@R13
M=D
(call_Main.main)
@Main.main
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN377)
//Pop
@POP_R378
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R378)
//call
@RETURN379
D=A
@R13
M=D
(call_Sys.halt)
@Sys.halt
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN379)
//Pop
@POP_R380
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R380)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Sys.halt)
@0
D=A
@R14
M=D
@F381
D;JEQ
D=A
@FUNCT
0;JMP
(F381)
(Sys.haltWHILE_EXP0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//NOT
@SP
A=M-1
M=!M
//if
@IF382
D=A
@IF
0;JMP
(IF382)
@Sys.haltWHILE_END0
D;JNE
//goto
@Sys.haltWHILE_EXP0
0;JMP
(Sys.haltWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Sys.wait)
@1
D=A
@R14
M=D
@F383
D;JEQ
D=A
@FUNCT
0;JMP
(F383)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n384
D=A
@LT
0;JMP
(n384)
//if
@IF385
D=A
@IF
0;JMP
(IF385)
@Sys.waitIF_TRUE0
D;JNE
//goto
@Sys.waitIF_FALSE0
0;JMP
(Sys.waitIF_TRUE0)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-24
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-24)
//Pop
@POP_R386
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R386)
(Sys.waitIF_FALSE0)
(Sys.waitWHILE_EXP0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n387
D=A
@GT
0;JMP
(n387)
//NOT
@SP
A=M-1
M=!M
//if
@IF388
D=A
@IF
0;JMP
(IF388)
@Sys.waitWHILE_END0
D;JNE
//Push C
@50
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R389
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R389)
(Sys.waitWHILE_EXP1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n390
D=A
@GT
0;JMP
(n390)
//NOT
@SP
A=M-1
M=!M
//if
@IF391
D=A
@IF
0;JMP
(IF391)
@Sys.waitWHILE_END1
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R392
D=A
@SUB
0;JMP
(SUB_R392)
//Pop
@POP_R393
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R393)
//goto
@Sys.waitWHILE_EXP1
0;JMP
(Sys.waitWHILE_END1)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R394
D=A
@SUB
0;JMP
(SUB_R394)
//Pop
@POP_R395
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R395)
//goto
@Sys.waitWHILE_EXP0
0;JMP
(Sys.waitWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Sys.error)
@0
D=A
@R14
M=D
@F396
D;JEQ
D=A
@FUNCT
0;JMP
(F396)
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-25
D=A
@R13
M=D
@call_String.new
0;JMP
(RETURN-25)
//Push C
@69
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-26
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-26)
//Push C
@82
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-27
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-27)
//Push C
@82
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-28
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-28)
@RETURN-29
D=A
@R13
M=D
@call_Output.printString
0;JMP
(RETURN-29)
//Pop
@POP_R397
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R397)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN398
D=A
@R13
M=D
(call_Output.printInt)
@Output.printInt
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN398)
//Pop
@POP_R399
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R399)
@RETURN-30
D=A
@R13
M=D
@call_Sys.halt
0;JMP
(RETURN-30)
//Pop
@POP_R400
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R400)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.init)
@0
D=A
@R14
M=D
@F401
D;JEQ
D=A
@FUNCT
0;JMP
(F401)
//Push C
@16384
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R402
D=A
@R14
M=D
//S
@Output.4
D=A
@POP
0;JMP
(POP_R402)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R403
D=A
@R14
M=D
//S
@Output.2
D=A
@POP
0;JMP
(POP_R403)
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R404
D=A
@R14
M=D
//S
@Output.1
D=A
@POP
0;JMP
(POP_R404)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R405
D=A
@R14
M=D
//S
@Output.0
D=A
@POP
0;JMP
(POP_R405)
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-31
D=A
@R13
M=D
@call_String.new
0;JMP
(RETURN-31)
//Pop
@POP_R406
D=A
@R14
M=D
//S
@Output.3
D=A
@POP
0;JMP
(POP_R406)
//call
@RETURN407
D=A
@R13
M=D
(call_Output.initMap)
@Output.initMap
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN407)
//Pop
@POP_R408
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R408)
//call
@RETURN409
D=A
@R13
M=D
(call_Output.createShiftedMap)
@Output.createShiftedMap
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN409)
//Pop
@POP_R410
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R410)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.initMap)
@0
D=A
@R14
M=D
@F411
D;JEQ
D=A
@FUNCT
0;JMP
(F411)
//Push C
@127
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-32
D=A
@R13
M=D
@call_Array.new
0;JMP
(RETURN-32)
//Pop
@POP_R412
D=A
@R14
M=D
//S
@Output.5
D=A
@POP
0;JMP
(POP_R412)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN413
D=A
@R13
M=D
(call_Output.create)
@Output.create
D=A
@R14
M=D
@12
D=A
@CALL
0;JMP
(RETURN413)
//Pop
@POP_R414
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R414)
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-33
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-33)
//Pop
@POP_R415
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R415)
//Push C
@33
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-34
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-34)
//Pop
@POP_R416
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R416)
//Push C
@34
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@20
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-35
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-35)
//Pop
@POP_R417
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R417)
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-36
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-36)
//Pop
@POP_R418
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R418)
//Push C
@36
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-37
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-37)
//Pop
@POP_R419
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R419)
//Push C
@37
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@49
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-38
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-38)
//Pop
@POP_R420
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R420)
//Push C
@38
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-39
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-39)
//Pop
@POP_R421
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R421)
//Push C
@39
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-40
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-40)
//Pop
@POP_R422
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R422)
//Push C
@40
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-41
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-41)
//Pop
@POP_R423
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R423)
//Push C
@41
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-42
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-42)
//Pop
@POP_R424
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R424)
//Push C
@42
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-43
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-43)
//Pop
@POP_R425
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R425)
//Push C
@43
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-44
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-44)
//Pop
@POP_R426
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R426)
//Push C
@44
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-45
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-45)
//Pop
@POP_R427
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R427)
//Push C
@45
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-46
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-46)
//Pop
@POP_R428
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R428)
//Push C
@46
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-47
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-47)
//Pop
@POP_R429
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R429)
//Push C
@47
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-48
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-48)
//Pop
@POP_R430
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R430)
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-49
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-49)
//Pop
@POP_R431
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R431)
//Push C
@49
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@14
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-50
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-50)
//Pop
@POP_R432
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R432)
//Push C
@50
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-51
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-51)
//Pop
@POP_R433
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R433)
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-52
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-52)
//Pop
@POP_R434
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R434)
//Push C
@52
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@26
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@25
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@60
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-53
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-53)
//Pop
@POP_R435
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R435)
//Push C
@53
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-54
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-54)
//Pop
@POP_R436
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R436)
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-55
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-55)
//Pop
@POP_R437
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R437)
//Push C
@55
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@49
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-56
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-56)
//Pop
@POP_R438
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R438)
//Push C
@56
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-57
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-57)
//Pop
@POP_R439
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R439)
//Push C
@57
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@62
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@14
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-58
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-58)
//Pop
@POP_R440
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R440)
//Push C
@58
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-59
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-59)
//Pop
@POP_R441
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R441)
//Push C
@59
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-60
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-60)
//Pop
@POP_R442
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R442)
//Push C
@60
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-61
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-61)
//Pop
@POP_R443
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R443)
//Push C
@61
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-62
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-62)
//Pop
@POP_R444
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R444)
//Push C
@62
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-63
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-63)
//Pop
@POP_R445
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R445)
//Push C
@64
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@59
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@59
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@59
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-64
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-64)
//Pop
@POP_R446
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R446)
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-65
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-65)
//Pop
@POP_R447
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R447)
//Push C
@65
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-66
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-66)
//Pop
@POP_R448
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R448)
//Push C
@66
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-67
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-67)
//Pop
@POP_R449
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R449)
//Push C
@67
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-68
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-68)
//Pop
@POP_R450
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R450)
//Push C
@68
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-69
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-69)
//Pop
@POP_R451
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R451)
//Push C
@69
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-70
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-70)
//Pop
@POP_R452
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R452)
//Push C
@70
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-71
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-71)
//Pop
@POP_R453
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R453)
//Push C
@71
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@59
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@44
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-72
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-72)
//Pop
@POP_R454
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R454)
//Push C
@72
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-73
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-73)
//Pop
@POP_R455
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R455)
//Push C
@73
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-74
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-74)
//Pop
@POP_R456
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R456)
//Push C
@74
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@60
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@14
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-75
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-75)
//Pop
@POP_R457
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R457)
//Push C
@75
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-76
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-76)
//Pop
@POP_R458
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R458)
//Push C
@76
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-77
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-77)
//Pop
@POP_R459
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R459)
//Push C
@77
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@33
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-78
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-78)
//Pop
@POP_R460
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R460)
//Push C
@78
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@55
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@55
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@59
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@59
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-79
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-79)
//Pop
@POP_R461
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R461)
//Push C
@79
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-80
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-80)
//Pop
@POP_R462
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R462)
//Push C
@80
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-81
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-81)
//Pop
@POP_R463
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R463)
//Push C
@81
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@59
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-82
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-82)
//Pop
@POP_R464
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R464)
//Push C
@82
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-83
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-83)
//Pop
@POP_R465
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R465)
//Push C
@83
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-84
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-84)
//Pop
@POP_R466
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R466)
//Push C
@84
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@45
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-85
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-85)
//Pop
@POP_R467
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R467)
//Push C
@85
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-86
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-86)
//Pop
@POP_R468
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R468)
//Push C
@86
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-87
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-87)
//Pop
@POP_R469
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R469)
//Push C
@87
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-88
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-88)
//Pop
@POP_R470
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R470)
//Push C
@88
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-89
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-89)
//Pop
@POP_R471
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R471)
//Push C
@89
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-90
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-90)
//Pop
@POP_R472
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R472)
//Push C
@90
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@49
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-91
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-91)
//Pop
@POP_R473
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R473)
//Push C
@91
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-92
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-92)
//Pop
@POP_R474
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R474)
//Push C
@92
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-93
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-93)
//Pop
@POP_R475
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R475)
//Push C
@93
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-94
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-94)
//Pop
@POP_R476
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R476)
//Push C
@94
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@8
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-95
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-95)
//Pop
@POP_R477
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R477)
//Push C
@95
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-96
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-96)
//Pop
@POP_R478
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R478)
//Push C
@96
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-97
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-97)
//Pop
@POP_R479
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R479)
//Push C
@97
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@14
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-98
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-98)
//Pop
@POP_R480
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R480)
//Push C
@98
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-99
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-99)
//Pop
@POP_R481
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R481)
//Push C
@99
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-100
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-100)
//Pop
@POP_R482
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R482)
//Push C
@100
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@60
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-101
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-101)
//Pop
@POP_R483
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R483)
//Push C
@101
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-102
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-102)
//Pop
@POP_R484
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R484)
//Push C
@102
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@38
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-103
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-103)
//Pop
@POP_R485
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R485)
//Push C
@103
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@62
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-104
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-104)
//Pop
@POP_R486
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R486)
//Push C
@104
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@55
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-105
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-105)
//Pop
@POP_R487
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R487)
//Push C
@105
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@14
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-106
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-106)
//Pop
@POP_R488
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R488)
//Push C
@106
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@56
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-107
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-107)
//Pop
@POP_R489
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R489)
//Push C
@107
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-108
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-108)
//Pop
@POP_R490
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R490)
//Push C
@108
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@14
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-109
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-109)
//Pop
@POP_R491
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R491)
//Push C
@109
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@29
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@43
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@43
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@43
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@43
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-110
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-110)
//Pop
@POP_R492
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R492)
//Push C
@110
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@29
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-111
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-111)
//Pop
@POP_R493
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R493)
//Push C
@111
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-112
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-112)
//Pop
@POP_R494
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R494)
//Push C
@112
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-113
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-113)
//Pop
@POP_R495
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R495)
//Push C
@113
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@62
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-114
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-114)
//Pop
@POP_R496
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R496)
//Push C
@114
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@29
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@55
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-115
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-115)
//Pop
@POP_R497
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R497)
//Push C
@115
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-116
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-116)
//Pop
@POP_R498
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R498)
//Push C
@116
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@4
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-117
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-117)
//Pop
@POP_R499
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R499)
//Push C
@117
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-118
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-118)
//Pop
@POP_R500
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R500)
//Push C
@118
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-119
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-119)
//Pop
@POP_R501
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R501)
//Push C
@119
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-120
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-120)
//Pop
@POP_R502
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R502)
//Push C
@120
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-121
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-121)
//Pop
@POP_R503
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R503)
//Push C
@121
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@62
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-122
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-122)
//Pop
@POP_R504
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R504)
//Push C
@122
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-123
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-123)
//Pop
@POP_R505
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R505)
//Push C
@123
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@56
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@56
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-124
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-124)
//Pop
@POP_R506
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R506)
//Push C
@124
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-125
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-125)
//Pop
@POP_R507
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R507)
//Push C
@125
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@56
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-126
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-126)
//Pop
@POP_R508
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R508)
//Push C
@126
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@38
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@45
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@25
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-127
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-127)
//Pop
@POP_R509
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R509)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.create)
@1
D=A
@R14
M=D
@F510
D;JEQ
D=A
@FUNCT
0;JMP
(F510)
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-128
D=A
@R13
M=D
@call_Array.new
0;JMP
(RETURN-128)
//Pop
@POP_R511
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R511)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.5
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R512
D=A
@ADD
0;JMP
(ADD_R512)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R513
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R513)
//Pop point
@POP_R514
D=A
@THT
0;JMP
(POP_R514)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R515
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R515)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R516
D=A
@ADD
0;JMP
(ADD_R516)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R517
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R517)
//Pop point
@POP_R518
D=A
@THT
0;JMP
(POP_R518)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R519
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R519)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R520
D=A
@ADD
0;JMP
(ADD_R520)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R521
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R521)
//Pop point
@POP_R522
D=A
@THT
0;JMP
(POP_R522)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R523
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R523)
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R524
D=A
@ADD
0;JMP
(ADD_R524)
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R525
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R525)
//Pop point
@POP_R526
D=A
@THT
0;JMP
(POP_R526)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R527
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R527)
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R528
D=A
@ADD
0;JMP
(ADD_R528)
//Push A
@4
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R529
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R529)
//Pop point
@POP_R530
D=A
@THT
0;JMP
(POP_R530)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R531
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R531)
//Push C
@4
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R532
D=A
@ADD
0;JMP
(ADD_R532)
//Push A
@5
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R533
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R533)
//Pop point
@POP_R534
D=A
@THT
0;JMP
(POP_R534)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R535
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R535)
//Push C
@5
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R536
D=A
@ADD
0;JMP
(ADD_R536)
//Push A
@6
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R537
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R537)
//Pop point
@POP_R538
D=A
@THT
0;JMP
(POP_R538)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R539
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R539)
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R540
D=A
@ADD
0;JMP
(ADD_R540)
//Push A
@7
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R541
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R541)
//Pop point
@POP_R542
D=A
@THT
0;JMP
(POP_R542)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R543
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R543)
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R544
D=A
@ADD
0;JMP
(ADD_R544)
//Push A
@8
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R545
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R545)
//Pop point
@POP_R546
D=A
@THT
0;JMP
(POP_R546)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R547
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R547)
//Push C
@8
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R548
D=A
@ADD
0;JMP
(ADD_R548)
//Push A
@9
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R549
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R549)
//Pop point
@POP_R550
D=A
@THT
0;JMP
(POP_R550)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R551
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R551)
//Push C
@9
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R552
D=A
@ADD
0;JMP
(ADD_R552)
//Push A
@10
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R553
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R553)
//Pop point
@POP_R554
D=A
@THT
0;JMP
(POP_R554)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R555
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R555)
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R556
D=A
@ADD
0;JMP
(ADD_R556)
//Push A
@11
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R557
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R557)
//Pop point
@POP_R558
D=A
@THT
0;JMP
(POP_R558)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R559
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R559)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.createShiftedMap)
@4
D=A
@R14
M=D
@F560
D;JEQ
D=A
@FUNCT
0;JMP
(F560)
//Push C
@127
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-129
D=A
@R13
M=D
@call_Array.new
0;JMP
(RETURN-129)
//Pop
@POP_R561
D=A
@R14
M=D
//S
@Output.6
D=A
@POP
0;JMP
(POP_R561)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R562
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R562)
(Output.createShiftedMapWHILE_EXP0)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@127
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n563
D=A
@LT
0;JMP
(n563)
//NOT
@SP
A=M-1
M=!M
//if
@IF564
D=A
@IF
0;JMP
(IF564)
@Output.createShiftedMapWHILE_END0
D;JNE
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.5
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R565
D=A
@ADD
0;JMP
(ADD_R565)
//Pop point
@POP_R566
D=A
@THT
0;JMP
(POP_R566)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R567
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R567)
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-130
D=A
@R13
M=D
@call_Array.new
0;JMP
(RETURN-130)
//Pop
@POP_R568
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R568)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.6
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R569
D=A
@ADD
0;JMP
(ADD_R569)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R570
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R570)
//Pop point
@POP_R571
D=A
@THT
0;JMP
(POP_R571)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R572
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R572)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R573
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R573)
(Output.createShiftedMapWHILE_EXP1)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n574
D=A
@LT
0;JMP
(n574)
//NOT
@SP
A=M-1
M=!M
//if
@IF575
D=A
@IF
0;JMP
(IF575)
@Output.createShiftedMapWHILE_END1
D;JNE
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R576
D=A
@ADD
0;JMP
(ADD_R576)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R577
D=A
@ADD
0;JMP
(ADD_R577)
//Pop point
@POP_R578
D=A
@THT
0;JMP
(POP_R578)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@256
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-131
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-131)
//Pop
@POP_R579
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R579)
//Pop point
@POP_R580
D=A
@THT
0;JMP
(POP_R580)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R581
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R581)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R582
D=A
@ADD
0;JMP
(ADD_R582)
//Pop
@POP_R583
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R583)
//goto
@Output.createShiftedMapWHILE_EXP1
0;JMP
(Output.createShiftedMapWHILE_END1)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n584
D=A
@EQ
0;JMP
(n584)
//if
@IF585
D=A
@IF
0;JMP
(IF585)
@Output.createShiftedMapIF_TRUE0
D;JNE
//goto
@Output.createShiftedMapIF_FALSE0
0;JMP
(Output.createShiftedMapIF_TRUE0)
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R586
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R586)
//goto
@Output.createShiftedMapIF_END0
0;JMP
(Output.createShiftedMapIF_FALSE0)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R587
D=A
@ADD
0;JMP
(ADD_R587)
//Pop
@POP_R588
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R588)
(Output.createShiftedMapIF_END0)
//goto
@Output.createShiftedMapWHILE_EXP0
0;JMP
(Output.createShiftedMapWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.getMap)
@1
D=A
@R14
M=D
@F589
D;JEQ
D=A
@FUNCT
0;JMP
(F589)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n590
D=A
@LT
0;JMP
(n590)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@126
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n591
D=A
@GT
0;JMP
(n591)
//OR
@OR_R592
D=A
@OR
0;JMP
(OR_R592)
//if
@IF593
D=A
@IF
0;JMP
(IF593)
@Output.getMapIF_TRUE0
D;JNE
//goto
@Output.getMapIF_FALSE0
0;JMP
(Output.getMapIF_TRUE0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R594
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R594)
(Output.getMapIF_FALSE0)
//Push S
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF595
D=A
@IF
0;JMP
(IF595)
@Output.getMapIF_TRUE1
D;JNE
//goto
@Output.getMapIF_FALSE1
0;JMP
(Output.getMapIF_TRUE1)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.5
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R596
D=A
@ADD
0;JMP
(ADD_R596)
//Pop point
@POP_R597
D=A
@THT
0;JMP
(POP_R597)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R598
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R598)
//goto
@Output.getMapIF_END1
0;JMP
(Output.getMapIF_FALSE1)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.6
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R599
D=A
@ADD
0;JMP
(ADD_R599)
//Pop point
@POP_R600
D=A
@THT
0;JMP
(POP_R600)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R601
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R601)
(Output.getMapIF_END1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.drawChar)
@4
D=A
@R14
M=D
@F602
D;JEQ
D=A
@FUNCT
0;JMP
(F602)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN603
D=A
@R13
M=D
(call_Output.getMap)
@Output.getMap
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN603)
//Pop
@POP_R604
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R604)
//Push S
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R605
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R605)
(Output.drawCharWHILE_EXP0)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n606
D=A
@LT
0;JMP
(n606)
//NOT
@SP
A=M-1
M=!M
//if
@IF607
D=A
@IF
0;JMP
(IF607)
@Output.drawCharWHILE_END0
D;JNE
//Push S
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF608
D=A
@IF
0;JMP
(IF608)
@Output.drawCharIF_TRUE0
D;JNE
//goto
@Output.drawCharIF_FALSE0
0;JMP
(Output.drawCharIF_TRUE0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.4
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R609
D=A
@ADD
0;JMP
(ADD_R609)
//Pop point
@POP_R610
D=A
@THT
0;JMP
(POP_R610)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@256
D=A
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//AND
@AND_R611
D=A
@AND
0;JMP
(AND_R611)
//Pop
@POP_R612
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R612)
//goto
@Output.drawCharIF_END0
0;JMP
(Output.drawCharIF_FALSE0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.4
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R613
D=A
@ADD
0;JMP
(ADD_R613)
//Pop point
@POP_R614
D=A
@THT
0;JMP
(POP_R614)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@255
D=A
@SP
M=M+1
A=M-1
M=D
//AND
@AND_R615
D=A
@AND
0;JMP
(AND_R615)
//Pop
@POP_R616
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R616)
(Output.drawCharIF_END0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.4
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R617
D=A
@ADD
0;JMP
(ADD_R617)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R618
D=A
@ADD
0;JMP
(ADD_R618)
//Pop point
@POP_R619
D=A
@THT
0;JMP
(POP_R619)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//OR
@OR_R620
D=A
@OR
0;JMP
(OR_R620)
//Pop
@POP_R621
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R621)
//Pop point
@POP_R622
D=A
@THT
0;JMP
(POP_R622)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R623
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R623)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R624
D=A
@ADD
0;JMP
(ADD_R624)
//Pop
@POP_R625
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R625)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R626
D=A
@ADD
0;JMP
(ADD_R626)
//Pop
@POP_R627
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R627)
//goto
@Output.drawCharWHILE_EXP0
0;JMP
(Output.drawCharWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.moveCursor)
@0
D=A
@R14
M=D
@F628
D;JEQ
D=A
@FUNCT
0;JMP
(F628)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n629
D=A
@LT
0;JMP
(n629)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@22
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n630
D=A
@GT
0;JMP
(n630)
//OR
@OR_R631
D=A
@OR
0;JMP
(OR_R631)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n632
D=A
@LT
0;JMP
(n632)
//OR
@OR_R633
D=A
@OR
0;JMP
(OR_R633)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n634
D=A
@GT
0;JMP
(n634)
//OR
@OR_R635
D=A
@OR
0;JMP
(OR_R635)
//if
@IF636
D=A
@IF
0;JMP
(IF636)
@Output.moveCursorIF_TRUE0
D;JNE
//goto
@Output.moveCursorIF_FALSE0
0;JMP
(Output.moveCursorIF_TRUE0)
//Push C
@20
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-132
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-132)
//Pop
@POP_R637
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R637)
(Output.moveCursorIF_FALSE0)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-133
D=A
@R13
M=D
@call_Math.divide
0;JMP
(RETURN-133)
//Pop
@POP_R638
D=A
@R14
M=D
//S
@Output.0
D=A
@POP
0;JMP
(POP_R638)
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@352
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-134
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-134)
//ADD
@ADD_R639
D=A
@ADD
0;JMP
(ADD_R639)
//Push S
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R640
D=A
@ADD
0;JMP
(ADD_R640)
//Pop
@POP_R641
D=A
@R14
M=D
//S
@Output.1
D=A
@POP
0;JMP
(POP_R641)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-135
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-135)
//EQ
@n642
D=A
@EQ
0;JMP
(n642)
//Pop
@POP_R643
D=A
@R14
M=D
//S
@Output.2
D=A
@POP
0;JMP
(POP_R643)
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN644
D=A
@R13
M=D
(call_Output.drawChar)
@Output.drawChar
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN644)
//Pop
@POP_R645
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R645)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.printChar)
@0
D=A
@R14
M=D
@F646
D;JEQ
D=A
@FUNCT
0;JMP
(F646)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-136
D=A
@R13
M=D
@call_String.newLine
0;JMP
(RETURN-136)
//EQ
@n647
D=A
@EQ
0;JMP
(n647)
//if
@IF648
D=A
@IF
0;JMP
(IF648)
@Output.printCharIF_TRUE0
D;JNE
//goto
@Output.printCharIF_FALSE0
0;JMP
(Output.printCharIF_TRUE0)
//call
@RETURN649
D=A
@R13
M=D
(call_Output.println)
@Output.println
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN649)
//Pop
@POP_R650
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R650)
//goto
@Output.printCharIF_END0
0;JMP
(Output.printCharIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-137
D=A
@R13
M=D
@call_String.backSpace
0;JMP
(RETURN-137)
//EQ
@n651
D=A
@EQ
0;JMP
(n651)
//if
@IF652
D=A
@IF
0;JMP
(IF652)
@Output.printCharIF_TRUE1
D;JNE
//goto
@Output.printCharIF_FALSE1
0;JMP
(Output.printCharIF_TRUE1)
//call
@RETURN653
D=A
@R13
M=D
(call_Output.backSpace)
@Output.backSpace
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN653)
//Pop
@POP_R654
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R654)
//goto
@Output.printCharIF_END1
0;JMP
(Output.printCharIF_FALSE1)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-138
D=A
@R13
M=D
@call_Output.drawChar
0;JMP
(RETURN-138)
//Pop
@POP_R655
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R655)
//Push S
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//if
@IF656
D=A
@IF
0;JMP
(IF656)
@Output.printCharIF_TRUE2
D;JNE
//goto
@Output.printCharIF_FALSE2
0;JMP
(Output.printCharIF_TRUE2)
//Push S
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R657
D=A
@ADD
0;JMP
(ADD_R657)
//Pop
@POP_R658
D=A
@R14
M=D
//S
@Output.0
D=A
@POP
0;JMP
(POP_R658)
//Push S
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R659
D=A
@ADD
0;JMP
(ADD_R659)
//Pop
@POP_R660
D=A
@R14
M=D
//S
@Output.1
D=A
@POP
0;JMP
(POP_R660)
(Output.printCharIF_FALSE2)
//Push S
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n661
D=A
@EQ
0;JMP
(n661)
//if
@IF662
D=A
@IF
0;JMP
(IF662)
@Output.printCharIF_TRUE3
D;JNE
//goto
@Output.printCharIF_FALSE3
0;JMP
(Output.printCharIF_TRUE3)
@RETURN-139
D=A
@R13
M=D
@call_Output.println
0;JMP
(RETURN-139)
//Pop
@POP_R663
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R663)
//goto
@Output.printCharIF_END3
0;JMP
(Output.printCharIF_FALSE3)
//Push S
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R664
D=A
@R14
M=D
//S
@Output.2
D=A
@POP
0;JMP
(POP_R664)
(Output.printCharIF_END3)
(Output.printCharIF_END1)
(Output.printCharIF_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.printString)
@2
D=A
@R14
M=D
@F665
D;JEQ
D=A
@FUNCT
0;JMP
(F665)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN666
D=A
@R13
M=D
(call_String.length)
@String.length
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN666)
//Pop
@POP_R667
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R667)
(Output.printStringWHILE_EXP0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n668
D=A
@LT
0;JMP
(n668)
//NOT
@SP
A=M-1
M=!M
//if
@IF669
D=A
@IF
0;JMP
(IF669)
@Output.printStringWHILE_END0
D;JNE
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN670
D=A
@R13
M=D
(call_String.charAt)
@String.charAt
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN670)
@RETURN-140
D=A
@R13
M=D
@call_Output.printChar
0;JMP
(RETURN-140)
//Pop
@POP_R671
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R671)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R672
D=A
@ADD
0;JMP
(ADD_R672)
//Pop
@POP_R673
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R673)
//goto
@Output.printStringWHILE_EXP0
0;JMP
(Output.printStringWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.printInt)
@0
D=A
@R14
M=D
@F674
D;JEQ
D=A
@FUNCT
0;JMP
(F674)
//Push S
@Output.3
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN675
D=A
@R13
M=D
(call_String.setInt)
@String.setInt
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN675)
//Pop
@POP_R676
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R676)
//Push S
@Output.3
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-141
D=A
@R13
M=D
@call_Output.printString
0;JMP
(RETURN-141)
//Pop
@POP_R677
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R677)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.println)
@0
D=A
@R14
M=D
@F678
D;JEQ
D=A
@FUNCT
0;JMP
(F678)
//Push S
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@352
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R679
D=A
@ADD
0;JMP
(ADD_R679)
//Push S
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R680
D=A
@SUB
0;JMP
(SUB_R680)
//Pop
@POP_R681
D=A
@R14
M=D
//S
@Output.1
D=A
@POP
0;JMP
(POP_R681)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R682
D=A
@R14
M=D
//S
@Output.0
D=A
@POP
0;JMP
(POP_R682)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R683
D=A
@R14
M=D
//S
@Output.2
D=A
@POP
0;JMP
(POP_R683)
//Push S
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@8128
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n684
D=A
@EQ
0;JMP
(n684)
//if
@IF685
D=A
@IF
0;JMP
(IF685)
@Output.printlnIF_TRUE0
D;JNE
//goto
@Output.printlnIF_FALSE0
0;JMP
(Output.printlnIF_TRUE0)
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R686
D=A
@R14
M=D
//S
@Output.1
D=A
@POP
0;JMP
(POP_R686)
(Output.printlnIF_FALSE0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.backSpace)
@0
D=A
@R14
M=D
@F687
D;JEQ
D=A
@FUNCT
0;JMP
(F687)
//Push S
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF688
D=A
@IF
0;JMP
(IF688)
@Output.backSpaceIF_TRUE0
D;JNE
//goto
@Output.backSpaceIF_FALSE0
0;JMP
(Output.backSpaceIF_TRUE0)
//Push S
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n689
D=A
@GT
0;JMP
(n689)
//if
@IF690
D=A
@IF
0;JMP
(IF690)
@Output.backSpaceIF_TRUE1
D;JNE
//goto
@Output.backSpaceIF_FALSE1
0;JMP
(Output.backSpaceIF_TRUE1)
//Push S
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R691
D=A
@SUB
0;JMP
(SUB_R691)
//Pop
@POP_R692
D=A
@R14
M=D
//S
@Output.0
D=A
@POP
0;JMP
(POP_R692)
//Push S
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R693
D=A
@SUB
0;JMP
(SUB_R693)
//Pop
@POP_R694
D=A
@R14
M=D
//S
@Output.1
D=A
@POP
0;JMP
(POP_R694)
//goto
@Output.backSpaceIF_END1
0;JMP
(Output.backSpaceIF_FALSE1)
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R695
D=A
@R14
M=D
//S
@Output.0
D=A
@POP
0;JMP
(POP_R695)
//Push S
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n696
D=A
@EQ
0;JMP
(n696)
//if
@IF697
D=A
@IF
0;JMP
(IF697)
@Output.backSpaceIF_TRUE2
D;JNE
//goto
@Output.backSpaceIF_FALSE2
0;JMP
(Output.backSpaceIF_TRUE2)
//Push C
@8128
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R698
D=A
@R14
M=D
//S
@Output.1
D=A
@POP
0;JMP
(POP_R698)
(Output.backSpaceIF_FALSE2)
//Push S
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@321
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R699
D=A
@SUB
0;JMP
(SUB_R699)
//Pop
@POP_R700
D=A
@R14
M=D
//S
@Output.1
D=A
@POP
0;JMP
(POP_R700)
(Output.backSpaceIF_END1)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R701
D=A
@R14
M=D
//S
@Output.2
D=A
@POP
0;JMP
(POP_R701)
//goto
@Output.backSpaceIF_END0
0;JMP
(Output.backSpaceIF_FALSE0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R702
D=A
@R14
M=D
//S
@Output.2
D=A
@POP
0;JMP
(POP_R702)
(Output.backSpaceIF_END0)
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-142
D=A
@R13
M=D
@call_Output.drawChar
0;JMP
(RETURN-142)
//Pop
@POP_R703
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R703)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.init)
@1
D=A
@R14
M=D
@F704
D;JEQ
D=A
@FUNCT
0;JMP
(F704)
//Push C
@16384
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R705
D=A
@R14
M=D
//S
@Screen.1
D=A
@POP
0;JMP
(POP_R705)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R706
D=A
@R14
M=D
//S
@Screen.2
D=A
@POP
0;JMP
(POP_R706)
//Push C
@17
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-143
D=A
@R13
M=D
@call_Array.new
0;JMP
(RETURN-143)
//Pop
@POP_R707
D=A
@R14
M=D
//S
@Screen.0
D=A
@POP
0;JMP
(POP_R707)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R708
D=A
@ADD
0;JMP
(ADD_R708)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R709
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R709)
//Pop point
@POP_R710
D=A
@THT
0;JMP
(POP_R710)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R711
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R711)
(Screen.initWHILE_EXP0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n712
D=A
@LT
0;JMP
(n712)
//NOT
@SP
A=M-1
M=!M
//if
@IF713
D=A
@IF
0;JMP
(IF713)
@Screen.initWHILE_END0
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R714
D=A
@ADD
0;JMP
(ADD_R714)
//Pop
@POP_R715
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R715)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R716
D=A
@ADD
0;JMP
(ADD_R716)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R717
D=A
@SUB
0;JMP
(SUB_R717)
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R718
D=A
@ADD
0;JMP
(ADD_R718)
//Pop point
@POP_R719
D=A
@THT
0;JMP
(POP_R719)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R720
D=A
@SUB
0;JMP
(SUB_R720)
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R721
D=A
@ADD
0;JMP
(ADD_R721)
//Pop point
@POP_R722
D=A
@THT
0;JMP
(POP_R722)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R723
D=A
@ADD
0;JMP
(ADD_R723)
//Pop
@POP_R724
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R724)
//Pop point
@POP_R725
D=A
@THT
0;JMP
(POP_R725)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R726
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R726)
//goto
@Screen.initWHILE_EXP0
0;JMP
(Screen.initWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.clearScreen)
@1
D=A
@R14
M=D
@F727
D;JEQ
D=A
@FUNCT
0;JMP
(F727)
(Screen.clearScreenWHILE_EXP0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@8192
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n728
D=A
@LT
0;JMP
(n728)
//NOT
@SP
A=M-1
M=!M
//if
@IF729
D=A
@IF
0;JMP
(IF729)
@Screen.clearScreenWHILE_END0
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R730
D=A
@ADD
0;JMP
(ADD_R730)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R731
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R731)
//Pop point
@POP_R732
D=A
@THT
0;JMP
(POP_R732)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R733
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R733)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R734
D=A
@ADD
0;JMP
(ADD_R734)
//Pop
@POP_R735
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R735)
//goto
@Screen.clearScreenWHILE_EXP0
0;JMP
(Screen.clearScreenWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.updateLocation)
@0
D=A
@R14
M=D
@F736
D;JEQ
D=A
@FUNCT
0;JMP
(F736)
//Push S
@Screen.2
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF737
D=A
@IF
0;JMP
(IF737)
@Screen.updateLocationIF_TRUE0
D;JNE
//goto
@Screen.updateLocationIF_FALSE0
0;JMP
(Screen.updateLocationIF_TRUE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R738
D=A
@ADD
0;JMP
(ADD_R738)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R739
D=A
@ADD
0;JMP
(ADD_R739)
//Pop point
@POP_R740
D=A
@THT
0;JMP
(POP_R740)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//OR
@OR_R741
D=A
@OR
0;JMP
(OR_R741)
//Pop
@POP_R742
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R742)
//Pop point
@POP_R743
D=A
@THT
0;JMP
(POP_R743)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R744
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R744)
//goto
@Screen.updateLocationIF_END0
0;JMP
(Screen.updateLocationIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R745
D=A
@ADD
0;JMP
(ADD_R745)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R746
D=A
@ADD
0;JMP
(ADD_R746)
//Pop point
@POP_R747
D=A
@THT
0;JMP
(POP_R747)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//AND
@AND_R748
D=A
@AND
0;JMP
(AND_R748)
//Pop
@POP_R749
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R749)
//Pop point
@POP_R750
D=A
@THT
0;JMP
(POP_R750)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R751
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R751)
(Screen.updateLocationIF_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.setColor)
@0
D=A
@R14
M=D
@F752
D;JEQ
D=A
@FUNCT
0;JMP
(F752)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R753
D=A
@R14
M=D
//S
@Screen.2
D=A
@POP
0;JMP
(POP_R753)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.drawPixel)
@3
D=A
@R14
M=D
@F754
D;JEQ
D=A
@FUNCT
0;JMP
(F754)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n755
D=A
@LT
0;JMP
(n755)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n756
D=A
@GT
0;JMP
(n756)
//OR
@OR_R757
D=A
@OR
0;JMP
(OR_R757)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n758
D=A
@LT
0;JMP
(n758)
//OR
@OR_R759
D=A
@OR
0;JMP
(OR_R759)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@255
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n760
D=A
@GT
0;JMP
(n760)
//OR
@OR_R761
D=A
@OR
0;JMP
(OR_R761)
//if
@IF762
D=A
@IF
0;JMP
(IF762)
@Screen.drawPixelIF_TRUE0
D;JNE
//goto
@Screen.drawPixelIF_FALSE0
0;JMP
(Screen.drawPixelIF_TRUE0)
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-144
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-144)
//Pop
@POP_R763
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R763)
(Screen.drawPixelIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-145
D=A
@R13
M=D
@call_Math.divide
0;JMP
(RETURN-145)
//Pop
@POP_R764
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R764)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-146
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-146)
//SUB
@SUB_R765
D=A
@SUB
0;JMP
(SUB_R765)
//Pop
@POP_R766
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R766)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-147
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-147)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R767
D=A
@ADD
0;JMP
(ADD_R767)
//Pop
@POP_R768
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R768)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R769
D=A
@ADD
0;JMP
(ADD_R769)
//Pop point
@POP_R770
D=A
@THT
0;JMP
(POP_R770)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN771
D=A
@R13
M=D
(call_Screen.updateLocation)
@Screen.updateLocation
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN771)
//Pop
@POP_R772
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R772)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.drawConditional)
@0
D=A
@R14
M=D
@F773
D;JEQ
D=A
@FUNCT
0;JMP
(F773)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF774
D=A
@IF
0;JMP
(IF774)
@Screen.drawConditionalIF_TRUE0
D;JNE
//goto
@Screen.drawConditionalIF_FALSE0
0;JMP
(Screen.drawConditionalIF_TRUE0)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN775
D=A
@R13
M=D
(call_Screen.drawPixel)
@Screen.drawPixel
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN775)
//Pop
@POP_R776
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R776)
//goto
@Screen.drawConditionalIF_END0
0;JMP
(Screen.drawConditionalIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-148
D=A
@R13
M=D
@call_Screen.drawPixel
0;JMP
(RETURN-148)
//Pop
@POP_R777
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R777)
(Screen.drawConditionalIF_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.drawLine)
@11
D=A
@R14
M=D
@F778
D;JEQ
D=A
@FUNCT
0;JMP
(F778)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n779
D=A
@LT
0;JMP
(n779)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n780
D=A
@GT
0;JMP
(n780)
//OR
@OR_R781
D=A
@OR
0;JMP
(OR_R781)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n782
D=A
@LT
0;JMP
(n782)
//OR
@OR_R783
D=A
@OR
0;JMP
(OR_R783)
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@255
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n784
D=A
@GT
0;JMP
(n784)
//OR
@OR_R785
D=A
@OR
0;JMP
(OR_R785)
//if
@IF786
D=A
@IF
0;JMP
(IF786)
@Screen.drawLineIF_TRUE0
D;JNE
//goto
@Screen.drawLineIF_FALSE0
0;JMP
(Screen.drawLineIF_TRUE0)
//Push C
@8
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-149
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-149)
//Pop
@POP_R787
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R787)
(Screen.drawLineIF_FALSE0)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R788
D=A
@SUB
0;JMP
(SUB_R788)
@RETURN-150
D=A
@R13
M=D
@call_Math.abs
0;JMP
(RETURN-150)
//Pop
@POP_R789
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R789)
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R790
D=A
@SUB
0;JMP
(SUB_R790)
@RETURN-151
D=A
@R13
M=D
@call_Math.abs
0;JMP
(RETURN-151)
//Pop
@POP_R791
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R791)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n792
D=A
@LT
0;JMP
(n792)
//Pop
@POP_R793
D=A
@R14
M=D
//L
@6
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R793)
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n794
D=A
@LT
0;JMP
(n794)
//AND
@AND_R795
D=A
@AND
0;JMP
(AND_R795)
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n796
D=A
@LT
0;JMP
(n796)
//AND
@AND_R797
D=A
@AND
0;JMP
(AND_R797)
//OR
@OR_R798
D=A
@OR
0;JMP
(OR_R798)
//if
@IF799
D=A
@IF
0;JMP
(IF799)
@Screen.drawLineIF_TRUE1
D;JNE
//goto
@Screen.drawLineIF_FALSE1
0;JMP
(Screen.drawLineIF_TRUE1)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R800
D=A
@R14
M=D
//L
@4
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R800)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R801
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R801)
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R802
D=A
@R14
M=D
//A
@2
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R802)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R803
D=A
@R14
M=D
//L
@4
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R803)
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R804
D=A
@R14
M=D
//A
@1
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R804)
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R805
D=A
@R14
M=D
//A
@3
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R805)
(Screen.drawLineIF_FALSE1)
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF806
D=A
@IF
0;JMP
(IF806)
@Screen.drawLineIF_TRUE2
D;JNE
//goto
@Screen.drawLineIF_FALSE2
0;JMP
(Screen.drawLineIF_TRUE2)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R807
D=A
@R14
M=D
//L
@4
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R807)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R808
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R808)
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R809
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R809)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R810
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R810)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R811
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R811)
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R812
D=A
@R14
M=D
//L
@8
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R812)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n813
D=A
@GT
0;JMP
(n813)
//Pop
@POP_R814
D=A
@R14
M=D
//L
@7
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R814)
//goto
@Screen.drawLineIF_END2
0;JMP
(Screen.drawLineIF_FALSE2)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R815
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R815)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R816
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R816)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R817
D=A
@R14
M=D
//L
@8
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R817)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n818
D=A
@GT
0;JMP
(n818)
//Pop
@POP_R819
D=A
@R14
M=D
//L
@7
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R819)
(Screen.drawLineIF_END2)
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-152
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-152)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R820
D=A
@SUB
0;JMP
(SUB_R820)
//Pop
@POP_R821
D=A
@R14
M=D
//L
@5
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R821)
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-153
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-153)
//Pop
@POP_R822
D=A
@R14
M=D
//L
@9
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R822)
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R823
D=A
@SUB
0;JMP
(SUB_R823)
@RETURN-154
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-154)
//Pop
@POP_R824
D=A
@R14
M=D
//L
@10
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R824)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN825
D=A
@R13
M=D
(call_Screen.drawConditional)
@Screen.drawConditional
D=A
@R14
M=D
@3
D=A
@CALL
0;JMP
(RETURN825)
//Pop
@POP_R826
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R826)
(Screen.drawLineWHILE_EXP0)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@8
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n827
D=A
@LT
0;JMP
(n827)
//NOT
@SP
A=M-1
M=!M
//if
@IF828
D=A
@IF
0;JMP
(IF828)
@Screen.drawLineWHILE_END0
D;JNE
//Push L
@5
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n829
D=A
@LT
0;JMP
(n829)
//if
@IF830
D=A
@IF
0;JMP
(IF830)
@Screen.drawLineIF_TRUE3
D;JNE
//goto
@Screen.drawLineIF_FALSE3
0;JMP
(Screen.drawLineIF_TRUE3)
//Push L
@5
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@9
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R831
D=A
@ADD
0;JMP
(ADD_R831)
//Pop
@POP_R832
D=A
@R14
M=D
//L
@5
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R832)
//goto
@Screen.drawLineIF_END3
0;JMP
(Screen.drawLineIF_FALSE3)
//Push L
@5
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@10
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R833
D=A
@ADD
0;JMP
(ADD_R833)
//Pop
@POP_R834
D=A
@R14
M=D
//L
@5
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R834)
//Push L
@7
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF835
D=A
@IF
0;JMP
(IF835)
@Screen.drawLineIF_TRUE4
D;JNE
//goto
@Screen.drawLineIF_FALSE4
0;JMP
(Screen.drawLineIF_TRUE4)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R836
D=A
@SUB
0;JMP
(SUB_R836)
//Pop
@POP_R837
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R837)
//goto
@Screen.drawLineIF_END4
0;JMP
(Screen.drawLineIF_FALSE4)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R838
D=A
@ADD
0;JMP
(ADD_R838)
//Pop
@POP_R839
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R839)
(Screen.drawLineIF_END4)
(Screen.drawLineIF_END3)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R840
D=A
@ADD
0;JMP
(ADD_R840)
//Pop
@POP_R841
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R841)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-155
D=A
@R13
M=D
@call_Screen.drawConditional
0;JMP
(RETURN-155)
//Pop
@POP_R842
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R842)
//goto
@Screen.drawLineWHILE_EXP0
0;JMP
(Screen.drawLineWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.drawRectangle)
@9
D=A
@R14
M=D
@F843
D;JEQ
D=A
@FUNCT
0;JMP
(F843)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n844
D=A
@GT
0;JMP
(n844)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n845
D=A
@GT
0;JMP
(n845)
//OR
@OR_R846
D=A
@OR
0;JMP
(OR_R846)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n847
D=A
@LT
0;JMP
(n847)
//OR
@OR_R848
D=A
@OR
0;JMP
(OR_R848)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n849
D=A
@GT
0;JMP
(n849)
//OR
@OR_R850
D=A
@OR
0;JMP
(OR_R850)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n851
D=A
@LT
0;JMP
(n851)
//OR
@OR_R852
D=A
@OR
0;JMP
(OR_R852)
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@255
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n853
D=A
@GT
0;JMP
(n853)
//OR
@OR_R854
D=A
@OR
0;JMP
(OR_R854)
//if
@IF855
D=A
@IF
0;JMP
(IF855)
@Screen.drawRectangleIF_TRUE0
D;JNE
//goto
@Screen.drawRectangleIF_FALSE0
0;JMP
(Screen.drawRectangleIF_TRUE0)
//Push C
@9
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-156
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-156)
//Pop
@POP_R856
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R856)
(Screen.drawRectangleIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-157
D=A
@R13
M=D
@call_Math.divide
0;JMP
(RETURN-157)
//Pop
@POP_R857
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R857)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-158
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-158)
//SUB
@SUB_R858
D=A
@SUB
0;JMP
(SUB_R858)
//Pop
@POP_R859
D=A
@R14
M=D
//L
@7
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R859)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-159
D=A
@R13
M=D
@call_Math.divide
0;JMP
(RETURN-159)
//Pop
@POP_R860
D=A
@R14
M=D
//L
@4
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R860)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-160
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-160)
//SUB
@SUB_R861
D=A
@SUB
0;JMP
(SUB_R861)
//Pop
@POP_R862
D=A
@R14
M=D
//L
@8
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R862)
//Push L
@7
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R863
D=A
@ADD
0;JMP
(ADD_R863)
//Pop point
@POP_R864
D=A
@THT
0;JMP
(POP_R864)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R865
D=A
@SUB
0;JMP
(SUB_R865)
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R866
D=A
@R14
M=D
//L
@6
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R866)
//Push L
@8
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R867
D=A
@ADD
0;JMP
(ADD_R867)
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R868
D=A
@ADD
0;JMP
(ADD_R868)
//Pop point
@POP_R869
D=A
@THT
0;JMP
(POP_R869)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R870
D=A
@SUB
0;JMP
(SUB_R870)
//Pop
@POP_R871
D=A
@R14
M=D
//L
@5
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R871)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-161
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-161)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R872
D=A
@ADD
0;JMP
(ADD_R872)
//Pop
@POP_R873
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R873)
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R874
D=A
@SUB
0;JMP
(SUB_R874)
//Pop
@POP_R875
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R875)
(Screen.drawRectangleWHILE_EXP0)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n876
D=A
@GT
0;JMP
(n876)
//NOT
@SP
A=M-1
M=!M
//NOT
@SP
A=M-1
M=!M
//if
@IF877
D=A
@IF
0;JMP
(IF877)
@Screen.drawRectangleWHILE_END0
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R878
D=A
@ADD
0;JMP
(ADD_R878)
//Pop
@POP_R879
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R879)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n880
D=A
@EQ
0;JMP
(n880)
//if
@IF881
D=A
@IF
0;JMP
(IF881)
@Screen.drawRectangleIF_TRUE1
D;JNE
//goto
@Screen.drawRectangleIF_FALSE1
0;JMP
(Screen.drawRectangleIF_TRUE1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@5
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//AND
@AND_R882
D=A
@AND
0;JMP
(AND_R882)
@RETURN-162
D=A
@R13
M=D
@call_Screen.updateLocation
0;JMP
(RETURN-162)
//Pop
@POP_R883
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R883)
//goto
@Screen.drawRectangleIF_END1
0;JMP
(Screen.drawRectangleIF_FALSE1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-163
D=A
@R13
M=D
@call_Screen.updateLocation
0;JMP
(RETURN-163)
//Pop
@POP_R884
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R884)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R885
D=A
@ADD
0;JMP
(ADD_R885)
//Pop
@POP_R886
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R886)
(Screen.drawRectangleWHILE_EXP1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n887
D=A
@LT
0;JMP
(n887)
//NOT
@SP
A=M-1
M=!M
//if
@IF888
D=A
@IF
0;JMP
(IF888)
@Screen.drawRectangleWHILE_END1
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
@RETURN-164
D=A
@R13
M=D
@call_Screen.updateLocation
0;JMP
(RETURN-164)
//Pop
@POP_R889
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R889)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R890
D=A
@ADD
0;JMP
(ADD_R890)
//Pop
@POP_R891
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R891)
//goto
@Screen.drawRectangleWHILE_EXP1
0;JMP
(Screen.drawRectangleWHILE_END1)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@5
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-165
D=A
@R13
M=D
@call_Screen.updateLocation
0;JMP
(RETURN-165)
//Pop
@POP_R892
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R892)
(Screen.drawRectangleIF_END1)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R893
D=A
@ADD
0;JMP
(ADD_R893)
//Pop
@POP_R894
D=A
@R14
M=D
//A
@1
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R894)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R895
D=A
@ADD
0;JMP
(ADD_R895)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R896
D=A
@SUB
0;JMP
(SUB_R896)
//Pop
@POP_R897
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R897)
//goto
@Screen.drawRectangleWHILE_EXP0
0;JMP
(Screen.drawRectangleWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.drawHorizontal)
@11
D=A
@R14
M=D
@F898
D;JEQ
D=A
@FUNCT
0;JMP
(F898)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN899
D=A
@R13
M=D
(call_Math.min)
@Math.min
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN899)
//Pop
@POP_R900
D=A
@R14
M=D
//L
@7
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R900)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN901
D=A
@R13
M=D
(call_Math.max)
@Math.max
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN901)
//Pop
@POP_R902
D=A
@R14
M=D
//L
@8
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R902)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//GT
@n903
D=A
@GT
0;JMP
(n903)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@256
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n904
D=A
@LT
0;JMP
(n904)
//AND
@AND_R905
D=A
@AND
0;JMP
(AND_R905)
//Push L
@7
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@512
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n906
D=A
@LT
0;JMP
(n906)
//AND
@AND_R907
D=A
@AND
0;JMP
(AND_R907)
//Push L
@8
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//GT
@n908
D=A
@GT
0;JMP
(n908)
//AND
@AND_R909
D=A
@AND
0;JMP
(AND_R909)
//if
@IF910
D=A
@IF
0;JMP
(IF910)
@Screen.drawHorizontalIF_TRUE0
D;JNE
//goto
@Screen.drawHorizontalIF_FALSE0
0;JMP
(Screen.drawHorizontalIF_TRUE0)
//Push L
@7
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-166
D=A
@R13
M=D
@call_Math.max
0;JMP
(RETURN-166)
//Pop
@POP_R911
D=A
@R14
M=D
//L
@7
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R911)
//Push L
@8
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-167
D=A
@R13
M=D
@call_Math.min
0;JMP
(RETURN-167)
//Pop
@POP_R912
D=A
@R14
M=D
//L
@8
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R912)
//Push L
@7
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-168
D=A
@R13
M=D
@call_Math.divide
0;JMP
(RETURN-168)
//Pop
@POP_R913
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R913)
//Push L
@7
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-169
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-169)
//SUB
@SUB_R914
D=A
@SUB
0;JMP
(SUB_R914)
//Pop
@POP_R915
D=A
@R14
M=D
//L
@9
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R915)
//Push L
@8
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-170
D=A
@R13
M=D
@call_Math.divide
0;JMP
(RETURN-170)
//Pop
@POP_R916
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R916)
//Push L
@8
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-171
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-171)
//SUB
@SUB_R917
D=A
@SUB
0;JMP
(SUB_R917)
//Pop
@POP_R918
D=A
@R14
M=D
//L
@10
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R918)
//Push L
@9
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R919
D=A
@ADD
0;JMP
(ADD_R919)
//Pop point
@POP_R920
D=A
@THT
0;JMP
(POP_R920)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R921
D=A
@SUB
0;JMP
(SUB_R921)
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R922
D=A
@R14
M=D
//L
@5
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R922)
//Push L
@10
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R923
D=A
@ADD
0;JMP
(ADD_R923)
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R924
D=A
@ADD
0;JMP
(ADD_R924)
//Pop point
@POP_R925
D=A
@THT
0;JMP
(POP_R925)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R926
D=A
@SUB
0;JMP
(SUB_R926)
//Pop
@POP_R927
D=A
@R14
M=D
//L
@4
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R927)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-172
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-172)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R928
D=A
@ADD
0;JMP
(ADD_R928)
//Pop
@POP_R929
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R929)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R930
D=A
@SUB
0;JMP
(SUB_R930)
//Pop
@POP_R931
D=A
@R14
M=D
//L
@6
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R931)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R932
D=A
@ADD
0;JMP
(ADD_R932)
//Pop
@POP_R933
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R933)
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n934
D=A
@EQ
0;JMP
(n934)
//if
@IF935
D=A
@IF
0;JMP
(IF935)
@Screen.drawHorizontalIF_TRUE1
D;JNE
//goto
@Screen.drawHorizontalIF_FALSE1
0;JMP
(Screen.drawHorizontalIF_TRUE1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@5
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//AND
@AND_R936
D=A
@AND
0;JMP
(AND_R936)
@RETURN-173
D=A
@R13
M=D
@call_Screen.updateLocation
0;JMP
(RETURN-173)
//Pop
@POP_R937
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R937)
//goto
@Screen.drawHorizontalIF_END1
0;JMP
(Screen.drawHorizontalIF_FALSE1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@5
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-174
D=A
@R13
M=D
@call_Screen.updateLocation
0;JMP
(RETURN-174)
//Pop
@POP_R938
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R938)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R939
D=A
@ADD
0;JMP
(ADD_R939)
//Pop
@POP_R940
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R940)
(Screen.drawHorizontalWHILE_EXP0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n941
D=A
@LT
0;JMP
(n941)
//NOT
@SP
A=M-1
M=!M
//if
@IF942
D=A
@IF
0;JMP
(IF942)
@Screen.drawHorizontalWHILE_END0
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
@RETURN-175
D=A
@R13
M=D
@call_Screen.updateLocation
0;JMP
(RETURN-175)
//Pop
@POP_R943
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R943)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R944
D=A
@ADD
0;JMP
(ADD_R944)
//Pop
@POP_R945
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R945)
//goto
@Screen.drawHorizontalWHILE_EXP0
0;JMP
(Screen.drawHorizontalWHILE_END0)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-176
D=A
@R13
M=D
@call_Screen.updateLocation
0;JMP
(RETURN-176)
//Pop
@POP_R946
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R946)
(Screen.drawHorizontalIF_END1)
(Screen.drawHorizontalIF_FALSE0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.drawSymetric)
@0
D=A
@R14
M=D
@F947
D;JEQ
D=A
@FUNCT
0;JMP
(F947)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R948
D=A
@SUB
0;JMP
(SUB_R948)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R949
D=A
@ADD
0;JMP
(ADD_R949)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R950
D=A
@SUB
0;JMP
(SUB_R950)
//call
@RETURN951
D=A
@R13
M=D
(call_Screen.drawHorizontal)
@Screen.drawHorizontal
D=A
@R14
M=D
@3
D=A
@CALL
0;JMP
(RETURN951)
//Pop
@POP_R952
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R952)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R953
D=A
@ADD
0;JMP
(ADD_R953)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R954
D=A
@ADD
0;JMP
(ADD_R954)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R955
D=A
@SUB
0;JMP
(SUB_R955)
@RETURN-177
D=A
@R13
M=D
@call_Screen.drawHorizontal
0;JMP
(RETURN-177)
//Pop
@POP_R956
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R956)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R957
D=A
@SUB
0;JMP
(SUB_R957)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R958
D=A
@SUB
0;JMP
(SUB_R958)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R959
D=A
@ADD
0;JMP
(ADD_R959)
@RETURN-178
D=A
@R13
M=D
@call_Screen.drawHorizontal
0;JMP
(RETURN-178)
//Pop
@POP_R960
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R960)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R961
D=A
@ADD
0;JMP
(ADD_R961)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R962
D=A
@SUB
0;JMP
(SUB_R962)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R963
D=A
@ADD
0;JMP
(ADD_R963)
@RETURN-179
D=A
@R13
M=D
@call_Screen.drawHorizontal
0;JMP
(RETURN-179)
//Pop
@POP_R964
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R964)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.drawCircle)
@3
D=A
@R14
M=D
@F965
D;JEQ
D=A
@FUNCT
0;JMP
(F965)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n966
D=A
@LT
0;JMP
(n966)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n967
D=A
@GT
0;JMP
(n967)
//OR
@OR_R968
D=A
@OR
0;JMP
(OR_R968)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n969
D=A
@LT
0;JMP
(n969)
//OR
@OR_R970
D=A
@OR
0;JMP
(OR_R970)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@255
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n971
D=A
@GT
0;JMP
(n971)
//OR
@OR_R972
D=A
@OR
0;JMP
(OR_R972)
//if
@IF973
D=A
@IF
0;JMP
(IF973)
@Screen.drawCircleIF_TRUE0
D;JNE
//goto
@Screen.drawCircleIF_FALSE0
0;JMP
(Screen.drawCircleIF_TRUE0)
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-180
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-180)
//Pop
@POP_R974
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R974)
(Screen.drawCircleIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R975
D=A
@SUB
0;JMP
(SUB_R975)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n976
D=A
@LT
0;JMP
(n976)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R977
D=A
@ADD
0;JMP
(ADD_R977)
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n978
D=A
@GT
0;JMP
(n978)
//OR
@OR_R979
D=A
@OR
0;JMP
(OR_R979)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R980
D=A
@SUB
0;JMP
(SUB_R980)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n981
D=A
@LT
0;JMP
(n981)
//OR
@OR_R982
D=A
@OR
0;JMP
(OR_R982)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R983
D=A
@ADD
0;JMP
(ADD_R983)
//Push C
@255
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n984
D=A
@GT
0;JMP
(n984)
//OR
@OR_R985
D=A
@OR
0;JMP
(OR_R985)
//if
@IF986
D=A
@IF
0;JMP
(IF986)
@Screen.drawCircleIF_TRUE1
D;JNE
//goto
@Screen.drawCircleIF_FALSE1
0;JMP
(Screen.drawCircleIF_TRUE1)
//Push C
@13
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-181
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-181)
//Pop
@POP_R987
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R987)
(Screen.drawCircleIF_FALSE1)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R988
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R988)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R989
D=A
@SUB
0;JMP
(SUB_R989)
//Pop
@POP_R990
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R990)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN991
D=A
@R13
M=D
(call_Screen.drawSymetric)
@Screen.drawSymetric
D=A
@R14
M=D
@4
D=A
@CALL
0;JMP
(RETURN991)
//Pop
@POP_R992
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R992)
(Screen.drawCircleWHILE_EXP0)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n993
D=A
@GT
0;JMP
(n993)
//NOT
@SP
A=M-1
M=!M
//if
@IF994
D=A
@IF
0;JMP
(IF994)
@Screen.drawCircleWHILE_END0
D;JNE
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n995
D=A
@LT
0;JMP
(n995)
//if
@IF996
D=A
@IF
0;JMP
(IF996)
@Screen.drawCircleIF_TRUE2
D;JNE
//goto
@Screen.drawCircleIF_FALSE2
0;JMP
(Screen.drawCircleIF_TRUE2)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-182
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-182)
//ADD
@ADD_R997
D=A
@ADD
0;JMP
(ADD_R997)
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R998
D=A
@ADD
0;JMP
(ADD_R998)
//Pop
@POP_R999
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R999)
//goto
@Screen.drawCircleIF_END2
0;JMP
(Screen.drawCircleIF_FALSE2)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1000
D=A
@SUB
0;JMP
(SUB_R1000)
@RETURN-183
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-183)
//ADD
@ADD_R1001
D=A
@ADD
0;JMP
(ADD_R1001)
//Push C
@5
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1002
D=A
@ADD
0;JMP
(ADD_R1002)
//Pop
@POP_R1003
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1003)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1004
D=A
@SUB
0;JMP
(SUB_R1004)
//Pop
@POP_R1005
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1005)
(Screen.drawCircleIF_END2)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1006
D=A
@ADD
0;JMP
(ADD_R1006)
//Pop
@POP_R1007
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1007)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-184
D=A
@R13
M=D
@call_Screen.drawSymetric
0;JMP
(RETURN-184)
//Pop
@POP_R1008
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1008)
//goto
@Screen.drawCircleWHILE_EXP0
0;JMP
(Screen.drawCircleWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Memory.init)
@0
D=A
@R14
M=D
@F1009
D;JEQ
D=A
@FUNCT
0;JMP
(F1009)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1010
D=A
@R14
M=D
//S
@Memory.0
D=A
@POP
0;JMP
(POP_R1010)
//Push C
@2048
D=A
@SP
M=M+1
A=M-1
M=D
//Push S
@Memory.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1011
D=A
@ADD
0;JMP
(ADD_R1011)
//Push C
@14334
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1012
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1012)
//Pop point
@POP_R1013
D=A
@THT
0;JMP
(POP_R1013)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1014
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1014)
//Push C
@2049
D=A
@SP
M=M+1
A=M-1
M=D
//Push S
@Memory.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1015
D=A
@ADD
0;JMP
(ADD_R1015)
//Push C
@2050
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1016
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1016)
//Pop point
@POP_R1017
D=A
@THT
0;JMP
(POP_R1017)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1018
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1018)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Memory.peek)
@0
D=A
@R14
M=D
@F1019
D;JEQ
D=A
@FUNCT
0;JMP
(F1019)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Memory.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1020
D=A
@ADD
0;JMP
(ADD_R1020)
//Pop point
@POP_R1021
D=A
@THT
0;JMP
(POP_R1021)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Memory.poke)
@0
D=A
@R14
M=D
@F1022
D;JEQ
D=A
@FUNCT
0;JMP
(F1022)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Memory.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1023
D=A
@ADD
0;JMP
(ADD_R1023)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1024
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1024)
//Pop point
@POP_R1025
D=A
@THT
0;JMP
(POP_R1025)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1026
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1026)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Memory.alloc)
@1
D=A
@R14
M=D
@F1027
D;JEQ
D=A
@FUNCT
0;JMP
(F1027)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n1028
D=A
@LT
0;JMP
(n1028)
//if
@IF1029
D=A
@IF
0;JMP
(IF1029)
@Memory.allocIF_TRUE0
D;JNE
//goto
@Memory.allocIF_FALSE0
0;JMP
(Memory.allocIF_TRUE0)
//Push C
@5
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-185
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-185)
//Pop
@POP_R1030
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1030)
(Memory.allocIF_FALSE0)
//Push C
@2048
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1031
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1031)
(Memory.allocWHILE_EXP0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1032
D=A
@ADD
0;JMP
(ADD_R1032)
//Pop point
@POP_R1033
D=A
@THT
0;JMP
(POP_R1033)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n1034
D=A
@LT
0;JMP
(n1034)
//NOT
@SP
A=M-1
M=!M
//if
@IF1035
D=A
@IF
0;JMP
(IF1035)
@Memory.allocWHILE_END0
D;JNE
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1036
D=A
@ADD
0;JMP
(ADD_R1036)
//Pop point
@POP_R1037
D=A
@THT
0;JMP
(POP_R1037)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1038
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1038)
//goto
@Memory.allocWHILE_EXP0
0;JMP
(Memory.allocWHILE_END0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1039
D=A
@ADD
0;JMP
(ADD_R1039)
//Push C
@16379
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n1040
D=A
@GT
0;JMP
(n1040)
//if
@IF1041
D=A
@IF
0;JMP
(IF1041)
@Memory.allocIF_TRUE1
D;JNE
//goto
@Memory.allocIF_FALSE1
0;JMP
(Memory.allocIF_TRUE1)
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-186
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-186)
//Pop
@POP_R1042
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1042)
(Memory.allocIF_FALSE1)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1043
D=A
@ADD
0;JMP
(ADD_R1043)
//Pop point
@POP_R1044
D=A
@THT
0;JMP
(POP_R1044)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1045
D=A
@ADD
0;JMP
(ADD_R1045)
//GT
@n1046
D=A
@GT
0;JMP
(n1046)
//if
@IF1047
D=A
@IF
0;JMP
(IF1047)
@Memory.allocIF_TRUE2
D;JNE
//goto
@Memory.allocIF_FALSE2
0;JMP
(Memory.allocIF_TRUE2)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1048
D=A
@ADD
0;JMP
(ADD_R1048)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1049
D=A
@ADD
0;JMP
(ADD_R1049)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1050
D=A
@ADD
0;JMP
(ADD_R1050)
//Pop point
@POP_R1051
D=A
@THT
0;JMP
(POP_R1051)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1052
D=A
@SUB
0;JMP
(SUB_R1052)
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1053
D=A
@SUB
0;JMP
(SUB_R1053)
//Pop
@POP_R1054
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1054)
//Pop point
@POP_R1055
D=A
@THT
0;JMP
(POP_R1055)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1056
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1056)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1057
D=A
@ADD
0;JMP
(ADD_R1057)
//Pop point
@POP_R1058
D=A
@THT
0;JMP
(POP_R1058)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1059
D=A
@ADD
0;JMP
(ADD_R1059)
//EQ
@n1060
D=A
@EQ
0;JMP
(n1060)
//if
@IF1061
D=A
@IF
0;JMP
(IF1061)
@Memory.allocIF_TRUE3
D;JNE
//goto
@Memory.allocIF_FALSE3
0;JMP
(Memory.allocIF_TRUE3)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1062
D=A
@ADD
0;JMP
(ADD_R1062)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1063
D=A
@ADD
0;JMP
(ADD_R1063)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1064
D=A
@ADD
0;JMP
(ADD_R1064)
//Push C
@4
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1065
D=A
@ADD
0;JMP
(ADD_R1065)
//Pop
@POP_R1066
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1066)
//Pop point
@POP_R1067
D=A
@THT
0;JMP
(POP_R1067)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1068
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1068)
//goto
@Memory.allocIF_END3
0;JMP
(Memory.allocIF_FALSE3)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1069
D=A
@ADD
0;JMP
(ADD_R1069)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1070
D=A
@ADD
0;JMP
(ADD_R1070)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1071
D=A
@ADD
0;JMP
(ADD_R1071)
//Pop point
@POP_R1072
D=A
@THT
0;JMP
(POP_R1072)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1073
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1073)
//Pop point
@POP_R1074
D=A
@THT
0;JMP
(POP_R1074)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1075
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1075)
(Memory.allocIF_END3)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1076
D=A
@ADD
0;JMP
(ADD_R1076)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1077
D=A
@ADD
0;JMP
(ADD_R1077)
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1078
D=A
@ADD
0;JMP
(ADD_R1078)
//Pop
@POP_R1079
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1079)
//Pop point
@POP_R1080
D=A
@THT
0;JMP
(POP_R1080)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1081
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1081)
(Memory.allocIF_FALSE2)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1082
D=A
@ADD
0;JMP
(ADD_R1082)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1083
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1083)
//Pop point
@POP_R1084
D=A
@THT
0;JMP
(POP_R1084)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1085
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1085)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1086
D=A
@ADD
0;JMP
(ADD_R1086)
@RETURNS
0;JMP
//funct
(Memory.deAlloc)
@2
D=A
@R14
M=D
@F1087
D;JEQ
D=A
@FUNCT
0;JMP
(F1087)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1088
D=A
@SUB
0;JMP
(SUB_R1088)
//Pop
@POP_R1089
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1089)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1090
D=A
@ADD
0;JMP
(ADD_R1090)
//Pop point
@POP_R1091
D=A
@THT
0;JMP
(POP_R1091)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1092
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1092)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1093
D=A
@ADD
0;JMP
(ADD_R1093)
//Pop point
@POP_R1094
D=A
@THT
0;JMP
(POP_R1094)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1095
D=A
@EQ
0;JMP
(n1095)
//if
@IF1096
D=A
@IF
0;JMP
(IF1096)
@Memory.deAllocIF_TRUE0
D;JNE
//goto
@Memory.deAllocIF_FALSE0
0;JMP
(Memory.deAllocIF_TRUE0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1097
D=A
@ADD
0;JMP
(ADD_R1097)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1098
D=A
@ADD
0;JMP
(ADD_R1098)
//Pop point
@POP_R1099
D=A
@THT
0;JMP
(POP_R1099)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1100
D=A
@SUB
0;JMP
(SUB_R1100)
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1101
D=A
@SUB
0;JMP
(SUB_R1101)
//Pop
@POP_R1102
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1102)
//Pop point
@POP_R1103
D=A
@THT
0;JMP
(POP_R1103)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1104
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1104)
//goto
@Memory.deAllocIF_END0
0;JMP
(Memory.deAllocIF_FALSE0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1105
D=A
@ADD
0;JMP
(ADD_R1105)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1106
D=A
@ADD
0;JMP
(ADD_R1106)
//Pop point
@POP_R1107
D=A
@THT
0;JMP
(POP_R1107)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1108
D=A
@SUB
0;JMP
(SUB_R1108)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1109
D=A
@ADD
0;JMP
(ADD_R1109)
//Pop point
@POP_R1110
D=A
@THT
0;JMP
(POP_R1110)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1111
D=A
@ADD
0;JMP
(ADD_R1111)
//Pop
@POP_R1112
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1112)
//Pop point
@POP_R1113
D=A
@THT
0;JMP
(POP_R1113)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1114
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1114)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1115
D=A
@ADD
0;JMP
(ADD_R1115)
//Pop point
@POP_R1116
D=A
@THT
0;JMP
(POP_R1116)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1117
D=A
@ADD
0;JMP
(ADD_R1117)
//EQ
@n1118
D=A
@EQ
0;JMP
(n1118)
//if
@IF1119
D=A
@IF
0;JMP
(IF1119)
@Memory.deAllocIF_TRUE1
D;JNE
//goto
@Memory.deAllocIF_FALSE1
0;JMP
(Memory.deAllocIF_TRUE1)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1120
D=A
@ADD
0;JMP
(ADD_R1120)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1121
D=A
@ADD
0;JMP
(ADD_R1121)
//Pop
@POP_R1122
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1122)
//Pop point
@POP_R1123
D=A
@THT
0;JMP
(POP_R1123)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1124
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1124)
//goto
@Memory.deAllocIF_END1
0;JMP
(Memory.deAllocIF_FALSE1)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1125
D=A
@ADD
0;JMP
(ADD_R1125)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1126
D=A
@ADD
0;JMP
(ADD_R1126)
//Pop point
@POP_R1127
D=A
@THT
0;JMP
(POP_R1127)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1128
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1128)
//Pop point
@POP_R1129
D=A
@THT
0;JMP
(POP_R1129)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1130
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1130)
(Memory.deAllocIF_END1)
(Memory.deAllocIF_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
