@256
D=A
@SP
M=D
@Sys.init
0;JMP
(CALL)
@R15
M=D
@R13
D=M
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@R15
D=D+M
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@R14
A=M
0;JMP
(RETURNS)
@LCL
D=M
@R13
M=D
@5
D=A
@R13
A=M-D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@1
D=A
@R13
A=M-D
D=M
@THAT
M=D
@R14
A=M
0;JMP
(ADD)
@R13
M=D
@SP
A=M-1
D=M
M=0
@SP
M=M-1
A=M-1
M=M+D
@R13
A=M
0;JMP
(SUB)
@R13
M=D
@SP
A=M-1
D=M
M=0
@SP
M=M-1
A=M-1
M=M-D
@R13
A=M
0;JMP
(AND)
@R13
M=D
@SP
A=M-1
D=M
M=0
@SP
M=M-1
A=M-1
M=M&D
@R13
A=M
0;JMP
(OR)
@R13
M=D
@SP
A=M-1
D=M
M=0
@SP
M=M-1
A=M-1
M=M|D
@R13
A=M
0;JMP
(EQ)
@R13
M=D
@SP
A=M-1
D=M
M=0
@SP
M=M-1
A=M-1
D=M-D
M=-1
@FALSE
D;JNE
@R13
A=M
0;JMP
(GT)
@R13
M=D
@SP
A=M-1
D=M
M=0
@SP
M=M-1
A=M-1
D=M-D
M=-1
@FALSE
D;JLE
@R13
A=M
0;JMP
(LT)
@R13
M=D
@SP
A=M-1
D=M
M=0
@SP
M=M-1
A=M-1
D=M-D
M=-1
@FALSE
D;JGE
@R13
A=M
0;JMP
(FALSE)
@SP
A=M-1
M=0
@R13
A=M
0;JMP
(FUNCT)
@R13
M=D
@R14
D=M
(F_LOOP)
@SP
M=M+1
A=M-1
M=0
D=D-1
@F_LOOP
D;JGT
@R13
A=M
0;JMP
(IF)
@R13
M=D
@SP
A=M-1
D=M
M=0
@SP
M=M-1
@R13
A=M
0;JMP
(POP)
@R13
M=D
@SP
AM=M-1
D=M
M=0
@R13
A=M
M=D
@R14
A=M
0;JMP
(THS)
@R14
M=D
@THIS
D=A
@POP
0;JMP
(THT)
@R14
M=D
@THAT
D=A
@POP
0;JMP
//funct
(String.new)
@0
D=A
@R14
M=D
@F0
D;JEQ
D=A
@FUNCT
0;JMP
(F0)
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN1
D=A
@R13
M=D
(call_Memory.alloc)
@Memory.alloc
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN1)
//Pop point
@POP_R2
D=A
@THS
0;JMP
(POP_R2)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n3
D=A
@LT
0;JMP
(n3)
//if
@IF4
D=A
@IF
0;JMP
(IF4)
@String.newIF_TRUE0
D;JNE
//goto
@String.newIF_FALSE0
0;JMP
(String.newIF_TRUE0)
//Push C
@14
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN5
D=A
@R13
M=D
(call_Sys.error)
@Sys.error
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN5)
//Pop
@POP_R6
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R6)
(String.newIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n7
D=A
@GT
0;JMP
(n7)
//if
@IF8
D=A
@IF
0;JMP
(IF8)
@String.newIF_TRUE1
D;JNE
//goto
@String.newIF_FALSE1
0;JMP
(String.newIF_TRUE1)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN9
D=A
@R13
M=D
(call_Array.new)
@Array.new
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN9)
//Pop
@POP_R10
D=A
@R14
M=D
//THS
@1
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R10)
(String.newIF_FALSE1)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R11
D=A
@R14
M=D
//THS
@0
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R11)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R12
D=A
@R14
M=D
//THS
@2
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R12)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.dispose)
@0
D=A
@R14
M=D
@F13
D;JEQ
D=A
@FUNCT
0;JMP
(F13)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R14
D=A
@THS
0;JMP
(POP_R14)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n15
D=A
@GT
0;JMP
(n15)
//if
@IF16
D=A
@IF
0;JMP
(IF16)
@String.disposeIF_TRUE0
D;JNE
//goto
@String.disposeIF_FALSE0
0;JMP
(String.disposeIF_TRUE0)
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN17
D=A
@R13
M=D
(call_Array.dispose)
@Array.dispose
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN17)
//Pop
@POP_R18
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R18)
(String.disposeIF_FALSE0)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN19
D=A
@R13
M=D
(call_Memory.deAlloc)
@Memory.deAlloc
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN19)
//Pop
@POP_R20
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R20)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.length)
@0
D=A
@R14
M=D
@F21
D;JEQ
D=A
@FUNCT
0;JMP
(F21)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R22
D=A
@THS
0;JMP
(POP_R22)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.charAt)
@0
D=A
@R14
M=D
@F23
D;JEQ
D=A
@FUNCT
0;JMP
(F23)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R24
D=A
@THS
0;JMP
(POP_R24)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n25
D=A
@LT
0;JMP
(n25)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n26
D=A
@GT
0;JMP
(n26)
//OR
@OR_R27
D=A
@OR
0;JMP
(OR_R27)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//EQ
@n28
D=A
@EQ
0;JMP
(n28)
//OR
@OR_R29
D=A
@OR
0;JMP
(OR_R29)
//if
@IF30
D=A
@IF
0;JMP
(IF30)
@String.charAtIF_TRUE0
D;JNE
//goto
@String.charAtIF_FALSE0
0;JMP
(String.charAtIF_TRUE0)
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-1
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-1)
//Pop
@POP_R31
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R31)
(String.charAtIF_FALSE0)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R32
D=A
@ADD
0;JMP
(ADD_R32)
//Pop point
@POP_R33
D=A
@THT
0;JMP
(POP_R33)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.setCharAt)
@0
D=A
@R14
M=D
@F34
D;JEQ
D=A
@FUNCT
0;JMP
(F34)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R35
D=A
@THS
0;JMP
(POP_R35)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n36
D=A
@LT
0;JMP
(n36)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n37
D=A
@GT
0;JMP
(n37)
//OR
@OR_R38
D=A
@OR
0;JMP
(OR_R38)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//EQ
@n39
D=A
@EQ
0;JMP
(n39)
//OR
@OR_R40
D=A
@OR
0;JMP
(OR_R40)
//if
@IF41
D=A
@IF
0;JMP
(IF41)
@String.setCharAtIF_TRUE0
D;JNE
//goto
@String.setCharAtIF_FALSE0
0;JMP
(String.setCharAtIF_TRUE0)
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-2
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-2)
//Pop
@POP_R42
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R42)
(String.setCharAtIF_FALSE0)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R43
D=A
@ADD
0;JMP
(ADD_R43)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R44
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R44)
//Pop point
@POP_R45
D=A
@THT
0;JMP
(POP_R45)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R46
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R46)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.appendChar)
@0
D=A
@R14
M=D
@F47
D;JEQ
D=A
@FUNCT
0;JMP
(F47)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R48
D=A
@THS
0;JMP
(POP_R48)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//EQ
@n49
D=A
@EQ
0;JMP
(n49)
//if
@IF50
D=A
@IF
0;JMP
(IF50)
@String.appendCharIF_TRUE0
D;JNE
//goto
@String.appendCharIF_FALSE0
0;JMP
(String.appendCharIF_TRUE0)
//Push C
@17
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-3
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-3)
//Pop
@POP_R51
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R51)
(String.appendCharIF_FALSE0)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R52
D=A
@ADD
0;JMP
(ADD_R52)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R53
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R53)
//Pop point
@POP_R54
D=A
@THT
0;JMP
(POP_R54)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R55
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R55)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R56
D=A
@ADD
0;JMP
(ADD_R56)
//Pop
@POP_R57
D=A
@R14
M=D
//THS
@2
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R57)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.eraseLastChar)
@0
D=A
@R14
M=D
@F58
D;JEQ
D=A
@FUNCT
0;JMP
(F58)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R59
D=A
@THS
0;JMP
(POP_R59)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n60
D=A
@EQ
0;JMP
(n60)
//if
@IF61
D=A
@IF
0;JMP
(IF61)
@String.eraseLastCharIF_TRUE0
D;JNE
//goto
@String.eraseLastCharIF_FALSE0
0;JMP
(String.eraseLastCharIF_TRUE0)
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-4
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-4)
//Pop
@POP_R62
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R62)
(String.eraseLastCharIF_FALSE0)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R63
D=A
@SUB
0;JMP
(SUB_R63)
//Pop
@POP_R64
D=A
@R14
M=D
//THS
@2
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R64)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.intValue)
@5
D=A
@R14
M=D
@F65
D;JEQ
D=A
@FUNCT
0;JMP
(F65)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R66
D=A
@THS
0;JMP
(POP_R66)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n67
D=A
@EQ
0;JMP
(n67)
//if
@IF68
D=A
@IF
0;JMP
(IF68)
@String.intValueIF_TRUE0
D;JNE
//goto
@String.intValueIF_FALSE0
0;JMP
(String.intValueIF_TRUE0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
(String.intValueIF_FALSE0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R69
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R69)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R70
D=A
@ADD
0;JMP
(ADD_R70)
//Pop point
@POP_R71
D=A
@THT
0;JMP
(POP_R71)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@45
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n72
D=A
@EQ
0;JMP
(n72)
//if
@IF73
D=A
@IF
0;JMP
(IF73)
@String.intValueIF_TRUE1
D;JNE
//goto
@String.intValueIF_FALSE1
0;JMP
(String.intValueIF_TRUE1)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R74
D=A
@R14
M=D
//L
@4
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R74)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R75
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R75)
(String.intValueIF_FALSE1)
(String.intValueWHILE_EXP0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n76
D=A
@LT
0;JMP
(n76)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//AND
@AND_R77
D=A
@AND
0;JMP
(AND_R77)
//NOT
@SP
A=M-1
M=!M
//if
@IF78
D=A
@IF
0;JMP
(IF78)
@String.intValueWHILE_END0
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R79
D=A
@ADD
0;JMP
(ADD_R79)
//Pop point
@POP_R80
D=A
@THT
0;JMP
(POP_R80)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R81
D=A
@SUB
0;JMP
(SUB_R81)
//Pop
@POP_R82
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R82)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n83
D=A
@LT
0;JMP
(n83)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@9
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n84
D=A
@GT
0;JMP
(n84)
//OR
@OR_R85
D=A
@OR
0;JMP
(OR_R85)
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R86
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R86)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF87
D=A
@IF
0;JMP
(IF87)
@String.intValueIF_TRUE2
D;JNE
//goto
@String.intValueIF_FALSE2
0;JMP
(String.intValueIF_TRUE2)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN88
D=A
@R13
M=D
(call_Math.multiply)
@Math.multiply
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN88)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R89
D=A
@ADD
0;JMP
(ADD_R89)
//Pop
@POP_R90
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R90)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R91
D=A
@ADD
0;JMP
(ADD_R91)
//Pop
@POP_R92
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R92)
(String.intValueIF_FALSE2)
//goto
@String.intValueWHILE_EXP0
0;JMP
(String.intValueWHILE_END0)
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF93
D=A
@IF
0;JMP
(IF93)
@String.intValueIF_TRUE3
D;JNE
//goto
@String.intValueIF_FALSE3
0;JMP
(String.intValueIF_TRUE3)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//Pop
@POP_R94
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R94)
(String.intValueIF_FALSE3)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.setInt)
@4
D=A
@R14
M=D
@F95
D;JEQ
D=A
@FUNCT
0;JMP
(F95)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R96
D=A
@THS
0;JMP
(POP_R96)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n97
D=A
@EQ
0;JMP
(n97)
//if
@IF98
D=A
@IF
0;JMP
(IF98)
@String.setIntIF_TRUE0
D;JNE
//goto
@String.setIntIF_FALSE0
0;JMP
(String.setIntIF_TRUE0)
//Push C
@19
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-5
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-5)
//Pop
@POP_R99
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R99)
(String.setIntIF_FALSE0)
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-6
D=A
@R13
M=D
@call_Array.new
0;JMP
(RETURN-6)
//Pop
@POP_R100
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R100)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n101
D=A
@LT
0;JMP
(n101)
//if
@IF102
D=A
@IF
0;JMP
(IF102)
@String.setIntIF_TRUE1
D;JNE
//goto
@String.setIntIF_FALSE1
0;JMP
(String.setIntIF_TRUE1)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R103
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R103)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//Pop
@POP_R104
D=A
@R14
M=D
//A
@1
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R104)
(String.setIntIF_FALSE1)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R105
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R105)
(String.setIntWHILE_EXP0)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n106
D=A
@GT
0;JMP
(n106)
//NOT
@SP
A=M-1
M=!M
//if
@IF107
D=A
@IF
0;JMP
(IF107)
@String.setIntWHILE_END0
D;JNE
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN108
D=A
@R13
M=D
(call_Math.divide)
@Math.divide
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN108)
//Pop
@POP_R109
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R109)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R110
D=A
@ADD
0;JMP
(ADD_R110)
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-7
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-7)
//SUB
@SUB_R111
D=A
@SUB
0;JMP
(SUB_R111)
//ADD
@ADD_R112
D=A
@ADD
0;JMP
(ADD_R112)
//Pop
@POP_R113
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R113)
//Pop point
@POP_R114
D=A
@THT
0;JMP
(POP_R114)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R115
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R115)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R116
D=A
@ADD
0;JMP
(ADD_R116)
//Pop
@POP_R117
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R117)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R118
D=A
@R14
M=D
//A
@1
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R118)
//goto
@String.setIntWHILE_EXP0
0;JMP
(String.setIntWHILE_END0)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF119
D=A
@IF
0;JMP
(IF119)
@String.setIntIF_TRUE2
D;JNE
//goto
@String.setIntIF_FALSE2
0;JMP
(String.setIntIF_TRUE2)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R120
D=A
@ADD
0;JMP
(ADD_R120)
//Push C
@45
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R121
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R121)
//Pop point
@POP_R122
D=A
@THT
0;JMP
(POP_R122)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R123
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R123)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R124
D=A
@ADD
0;JMP
(ADD_R124)
//Pop
@POP_R125
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R125)
(String.setIntIF_FALSE2)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n126
D=A
@LT
0;JMP
(n126)
//if
@IF127
D=A
@IF
0;JMP
(IF127)
@String.setIntIF_TRUE3
D;JNE
//goto
@String.setIntIF_FALSE3
0;JMP
(String.setIntIF_TRUE3)
//Push C
@19
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-8
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-8)
//Pop
@POP_R128
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R128)
(String.setIntIF_FALSE3)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n129
D=A
@EQ
0;JMP
(n129)
//if
@IF130
D=A
@IF
0;JMP
(IF130)
@String.setIntIF_TRUE4
D;JNE
//goto
@String.setIntIF_FALSE4
0;JMP
(String.setIntIF_TRUE4)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R131
D=A
@ADD
0;JMP
(ADD_R131)
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R132
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R132)
//Pop point
@POP_R133
D=A
@THT
0;JMP
(POP_R133)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R134
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R134)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R135
D=A
@R14
M=D
//THS
@2
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R135)
//goto
@String.setIntIF_END4
0;JMP
(String.setIntIF_FALSE4)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R136
D=A
@R14
M=D
//THS
@2
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R136)
(String.setIntWHILE_EXP1)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n137
D=A
@LT
0;JMP
(n137)
//NOT
@SP
A=M-1
M=!M
//if
@IF138
D=A
@IF
0;JMP
(IF138)
@String.setIntWHILE_END1
D;JNE
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R139
D=A
@ADD
0;JMP
(ADD_R139)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R140
D=A
@ADD
0;JMP
(ADD_R140)
//SUB
@SUB_R141
D=A
@SUB
0;JMP
(SUB_R141)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R142
D=A
@ADD
0;JMP
(ADD_R142)
//Pop point
@POP_R143
D=A
@THT
0;JMP
(POP_R143)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R144
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R144)
//Pop point
@POP_R145
D=A
@THT
0;JMP
(POP_R145)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R146
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R146)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R147
D=A
@ADD
0;JMP
(ADD_R147)
//Pop
@POP_R148
D=A
@R14
M=D
//THS
@2
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R148)
//goto
@String.setIntWHILE_EXP1
0;JMP
(String.setIntWHILE_END1)
(String.setIntIF_END4)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-9
D=A
@R13
M=D
@call_Array.dispose
0;JMP
(RETURN-9)
//Pop
@POP_R149
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R149)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.newLine)
@0
D=A
@R14
M=D
@F150
D;JEQ
D=A
@FUNCT
0;JMP
(F150)
//Push C
@128
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.backSpace)
@0
D=A
@R14
M=D
@F151
D;JEQ
D=A
@FUNCT
0;JMP
(F151)
//Push C
@129
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(String.doubleQuote)
@0
D=A
@R14
M=D
@F152
D;JEQ
D=A
@FUNCT
0;JMP
(F152)
//Push C
@34
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Math.init)
@1
D=A
@R14
M=D
@F153
D;JEQ
D=A
@FUNCT
0;JMP
(F153)
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-10
D=A
@R13
M=D
@call_Array.new
0;JMP
(RETURN-10)
//Pop
@POP_R154
D=A
@R14
M=D
//S
@Math.1
D=A
@POP
0;JMP
(POP_R154)
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-11
D=A
@R13
M=D
@call_Array.new
0;JMP
(RETURN-11)
//Pop
@POP_R155
D=A
@R14
M=D
//S
@Math.0
D=A
@POP
0;JMP
(POP_R155)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R156
D=A
@ADD
0;JMP
(ADD_R156)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R157
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R157)
//Pop point
@POP_R158
D=A
@THT
0;JMP
(POP_R158)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R159
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R159)
(Math.initWHILE_EXP0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n160
D=A
@LT
0;JMP
(n160)
//NOT
@SP
A=M-1
M=!M
//if
@IF161
D=A
@IF
0;JMP
(IF161)
@Math.initWHILE_END0
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R162
D=A
@ADD
0;JMP
(ADD_R162)
//Pop
@POP_R163
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R163)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R164
D=A
@ADD
0;JMP
(ADD_R164)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R165
D=A
@SUB
0;JMP
(SUB_R165)
//Push S
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R166
D=A
@ADD
0;JMP
(ADD_R166)
//Pop point
@POP_R167
D=A
@THT
0;JMP
(POP_R167)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R168
D=A
@SUB
0;JMP
(SUB_R168)
//Push S
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R169
D=A
@ADD
0;JMP
(ADD_R169)
//Pop point
@POP_R170
D=A
@THT
0;JMP
(POP_R170)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R171
D=A
@ADD
0;JMP
(ADD_R171)
//Pop
@POP_R172
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R172)
//Pop point
@POP_R173
D=A
@THT
0;JMP
(POP_R173)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R174
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R174)
//goto
@Math.initWHILE_EXP0
0;JMP
(Math.initWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Math.abs)
@0
D=A
@R14
M=D
@F175
D;JEQ
D=A
@FUNCT
0;JMP
(F175)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n176
D=A
@LT
0;JMP
(n176)
//if
@IF177
D=A
@IF
0;JMP
(IF177)
@Math.absIF_TRUE0
D;JNE
//goto
@Math.absIF_FALSE0
0;JMP
(Math.absIF_TRUE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//Pop
@POP_R178
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R178)
(Math.absIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Math.multiply)
@5
D=A
@R14
M=D
@F179
D;JEQ
D=A
@FUNCT
0;JMP
(F179)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n180
D=A
@LT
0;JMP
(n180)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n181
D=A
@GT
0;JMP
(n181)
//AND
@AND_R182
D=A
@AND
0;JMP
(AND_R182)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n183
D=A
@GT
0;JMP
(n183)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n184
D=A
@LT
0;JMP
(n184)
//AND
@AND_R185
D=A
@AND
0;JMP
(AND_R185)
//OR
@OR_R186
D=A
@OR
0;JMP
(OR_R186)
//Pop
@POP_R187
D=A
@R14
M=D
//L
@4
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R187)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN188
D=A
@R13
M=D
(call_Math.abs)
@Math.abs
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN188)
//Pop
@POP_R189
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R189)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-12
D=A
@R13
M=D
@call_Math.abs
0;JMP
(RETURN-12)
//Pop
@POP_R190
D=A
@R14
M=D
//A
@1
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R190)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n191
D=A
@LT
0;JMP
(n191)
//if
@IF192
D=A
@IF
0;JMP
(IF192)
@Math.multiplyIF_TRUE0
D;JNE
//goto
@Math.multiplyIF_FALSE0
0;JMP
(Math.multiplyIF_TRUE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R193
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R193)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R194
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R194)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R195
D=A
@R14
M=D
//A
@1
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R195)
(Math.multiplyIF_FALSE0)
(Math.multiplyWHILE_EXP0)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R196
D=A
@SUB
0;JMP
(SUB_R196)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R197
D=A
@SUB
0;JMP
(SUB_R197)
//LT
@n198
D=A
@LT
0;JMP
(n198)
//NOT
@SP
A=M-1
M=!M
//if
@IF199
D=A
@IF
0;JMP
(IF199)
@Math.multiplyWHILE_END0
D;JNE
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R200
D=A
@ADD
0;JMP
(ADD_R200)
//Pop point
@POP_R201
D=A
@THT
0;JMP
(POP_R201)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//AND
@AND_R202
D=A
@AND
0;JMP
(AND_R202)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n203
D=A
@EQ
0;JMP
(n203)
//NOT
@SP
A=M-1
M=!M
//if
@IF204
D=A
@IF
0;JMP
(IF204)
@Math.multiplyIF_TRUE1
D;JNE
//goto
@Math.multiplyIF_FALSE1
0;JMP
(Math.multiplyIF_TRUE1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R205
D=A
@ADD
0;JMP
(ADD_R205)
//Pop
@POP_R206
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R206)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R207
D=A
@ADD
0;JMP
(ADD_R207)
//Pop point
@POP_R208
D=A
@THT
0;JMP
(POP_R208)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R209
D=A
@ADD
0;JMP
(ADD_R209)
//Pop
@POP_R210
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R210)
(Math.multiplyIF_FALSE1)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R211
D=A
@ADD
0;JMP
(ADD_R211)
//Pop
@POP_R212
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R212)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R213
D=A
@ADD
0;JMP
(ADD_R213)
//Pop
@POP_R214
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R214)
//goto
@Math.multiplyWHILE_EXP0
0;JMP
(Math.multiplyWHILE_END0)
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF215
D=A
@IF
0;JMP
(IF215)
@Math.multiplyIF_TRUE2
D;JNE
//goto
@Math.multiplyIF_FALSE2
0;JMP
(Math.multiplyIF_TRUE2)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//Pop
@POP_R216
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R216)
(Math.multiplyIF_FALSE2)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Math.divide)
@4
D=A
@R14
M=D
@F217
D;JEQ
D=A
@FUNCT
0;JMP
(F217)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n218
D=A
@EQ
0;JMP
(n218)
//if
@IF219
D=A
@IF
0;JMP
(IF219)
@Math.divideIF_TRUE0
D;JNE
//goto
@Math.divideIF_FALSE0
0;JMP
(Math.divideIF_TRUE0)
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-13
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-13)
//Pop
@POP_R220
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R220)
(Math.divideIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n221
D=A
@LT
0;JMP
(n221)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n222
D=A
@GT
0;JMP
(n222)
//AND
@AND_R223
D=A
@AND
0;JMP
(AND_R223)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n224
D=A
@GT
0;JMP
(n224)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n225
D=A
@LT
0;JMP
(n225)
//AND
@AND_R226
D=A
@AND
0;JMP
(AND_R226)
//OR
@OR_R227
D=A
@OR
0;JMP
(OR_R227)
//Pop
@POP_R228
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R228)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R229
D=A
@ADD
0;JMP
(ADD_R229)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-14
D=A
@R13
M=D
@call_Math.abs
0;JMP
(RETURN-14)
//Pop
@POP_R230
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R230)
//Pop point
@POP_R231
D=A
@THT
0;JMP
(POP_R231)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R232
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R232)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-15
D=A
@R13
M=D
@call_Math.abs
0;JMP
(RETURN-15)
//Pop
@POP_R233
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R233)
(Math.divideWHILE_EXP0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n234
D=A
@LT
0;JMP
(n234)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//AND
@AND_R235
D=A
@AND
0;JMP
(AND_R235)
//NOT
@SP
A=M-1
M=!M
//if
@IF236
D=A
@IF
0;JMP
(IF236)
@Math.divideWHILE_END0
D;JNE
//Push C
@32767
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R237
D=A
@ADD
0;JMP
(ADD_R237)
//Pop point
@POP_R238
D=A
@THT
0;JMP
(POP_R238)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R239
D=A
@SUB
0;JMP
(SUB_R239)
//SUB
@SUB_R240
D=A
@SUB
0;JMP
(SUB_R240)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R241
D=A
@ADD
0;JMP
(ADD_R241)
//Pop point
@POP_R242
D=A
@THT
0;JMP
(POP_R242)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R243
D=A
@SUB
0;JMP
(SUB_R243)
//LT
@n244
D=A
@LT
0;JMP
(n244)
//Pop
@POP_R245
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R245)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//if
@IF246
D=A
@IF
0;JMP
(IF246)
@Math.divideIF_TRUE1
D;JNE
//goto
@Math.divideIF_FALSE1
0;JMP
(Math.divideIF_TRUE1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R247
D=A
@ADD
0;JMP
(ADD_R247)
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R248
D=A
@ADD
0;JMP
(ADD_R248)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R249
D=A
@ADD
0;JMP
(ADD_R249)
//Pop point
@POP_R250
D=A
@THT
0;JMP
(POP_R250)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R251
D=A
@ADD
0;JMP
(ADD_R251)
//Pop point
@POP_R252
D=A
@THT
0;JMP
(POP_R252)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R253
D=A
@ADD
0;JMP
(ADD_R253)
//Pop
@POP_R254
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R254)
//Pop point
@POP_R255
D=A
@THT
0;JMP
(POP_R255)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R256
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R256)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R257
D=A
@ADD
0;JMP
(ADD_R257)
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R258
D=A
@ADD
0;JMP
(ADD_R258)
//Pop point
@POP_R259
D=A
@THT
0;JMP
(POP_R259)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R260
D=A
@SUB
0;JMP
(SUB_R260)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R261
D=A
@SUB
0;JMP
(SUB_R261)
//GT
@n262
D=A
@GT
0;JMP
(n262)
//Pop
@POP_R263
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R263)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//if
@IF264
D=A
@IF
0;JMP
(IF264)
@Math.divideIF_TRUE2
D;JNE
//goto
@Math.divideIF_FALSE2
0;JMP
(Math.divideIF_TRUE2)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R265
D=A
@ADD
0;JMP
(ADD_R265)
//Pop
@POP_R266
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R266)
(Math.divideIF_FALSE2)
(Math.divideIF_FALSE1)
//goto
@Math.divideWHILE_EXP0
0;JMP
(Math.divideWHILE_END0)
(Math.divideWHILE_EXP1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//GT
@n267
D=A
@GT
0;JMP
(n267)
//NOT
@SP
A=M-1
M=!M
//if
@IF268
D=A
@IF
0;JMP
(IF268)
@Math.divideWHILE_END1
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R269
D=A
@ADD
0;JMP
(ADD_R269)
//Pop point
@POP_R270
D=A
@THT
0;JMP
(POP_R270)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R271
D=A
@SUB
0;JMP
(SUB_R271)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R272
D=A
@SUB
0;JMP
(SUB_R272)
//GT
@n273
D=A
@GT
0;JMP
(n273)
//NOT
@SP
A=M-1
M=!M
//if
@IF274
D=A
@IF
0;JMP
(IF274)
@Math.divideIF_TRUE3
D;JNE
//goto
@Math.divideIF_FALSE3
0;JMP
(Math.divideIF_TRUE3)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R275
D=A
@ADD
0;JMP
(ADD_R275)
//Pop point
@POP_R276
D=A
@THT
0;JMP
(POP_R276)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R277
D=A
@ADD
0;JMP
(ADD_R277)
//Pop
@POP_R278
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R278)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R279
D=A
@ADD
0;JMP
(ADD_R279)
//Pop point
@POP_R280
D=A
@THT
0;JMP
(POP_R280)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R281
D=A
@SUB
0;JMP
(SUB_R281)
//Pop
@POP_R282
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R282)
(Math.divideIF_FALSE3)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R283
D=A
@SUB
0;JMP
(SUB_R283)
//Pop
@POP_R284
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R284)
//goto
@Math.divideWHILE_EXP1
0;JMP
(Math.divideWHILE_END1)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF285
D=A
@IF
0;JMP
(IF285)
@Math.divideIF_TRUE4
D;JNE
//goto
@Math.divideIF_FALSE4
0;JMP
(Math.divideIF_TRUE4)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//Pop
@POP_R286
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R286)
(Math.divideIF_FALSE4)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Math.sqrt)
@4
D=A
@R14
M=D
@F287
D;JEQ
D=A
@FUNCT
0;JMP
(F287)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n288
D=A
@LT
0;JMP
(n288)
//if
@IF289
D=A
@IF
0;JMP
(IF289)
@Math.sqrtIF_TRUE0
D;JNE
//goto
@Math.sqrtIF_FALSE0
0;JMP
(Math.sqrtIF_TRUE0)
//Push C
@4
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-16
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-16)
//Pop
@POP_R290
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R290)
(Math.sqrtIF_FALSE0)
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R291
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R291)
(Math.sqrtWHILE_EXP0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//GT
@n292
D=A
@GT
0;JMP
(n292)
//NOT
@SP
A=M-1
M=!M
//if
@IF293
D=A
@IF
0;JMP
(IF293)
@Math.sqrtWHILE_END0
D;JNE
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R294
D=A
@ADD
0;JMP
(ADD_R294)
//Pop point
@POP_R295
D=A
@THT
0;JMP
(POP_R295)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R296
D=A
@ADD
0;JMP
(ADD_R296)
//Pop
@POP_R297
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R297)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-17
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-17)
//Pop
@POP_R298
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R298)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n299
D=A
@GT
0;JMP
(n299)
//NOT
@SP
A=M-1
M=!M
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n300
D=A
@LT
0;JMP
(n300)
//NOT
@SP
A=M-1
M=!M
//AND
@AND_R301
D=A
@AND
0;JMP
(AND_R301)
//if
@IF302
D=A
@IF
0;JMP
(IF302)
@Math.sqrtIF_TRUE1
D;JNE
//goto
@Math.sqrtIF_FALSE1
0;JMP
(Math.sqrtIF_TRUE1)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R303
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R303)
(Math.sqrtIF_FALSE1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R304
D=A
@SUB
0;JMP
(SUB_R304)
//Pop
@POP_R305
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R305)
//goto
@Math.sqrtWHILE_EXP0
0;JMP
(Math.sqrtWHILE_END0)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Math.max)
@0
D=A
@R14
M=D
@F306
D;JEQ
D=A
@FUNCT
0;JMP
(F306)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n307
D=A
@GT
0;JMP
(n307)
//if
@IF308
D=A
@IF
0;JMP
(IF308)
@Math.maxIF_TRUE0
D;JNE
//goto
@Math.maxIF_FALSE0
0;JMP
(Math.maxIF_TRUE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R309
D=A
@R14
M=D
//A
@1
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R309)
(Math.maxIF_FALSE0)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Math.min)
@0
D=A
@R14
M=D
@F310
D;JEQ
D=A
@FUNCT
0;JMP
(F310)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n311
D=A
@LT
0;JMP
(n311)
//if
@IF312
D=A
@IF
0;JMP
(IF312)
@Math.minIF_TRUE0
D;JNE
//goto
@Math.minIF_FALSE0
0;JMP
(Math.minIF_TRUE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R313
D=A
@R14
M=D
//A
@1
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R313)
(Math.minIF_FALSE0)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Aliens.new)
@1
D=A
@R14
M=D
@F314
D;JEQ
D=A
@FUNCT
0;JMP
(F314)
//Push C
@13
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-18
D=A
@R13
M=D
@call_Memory.alloc
0;JMP
(RETURN-18)
//Pop point
@POP_R315
D=A
@THS
0;JMP
(POP_R315)
//Push C
@100
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R316
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R316)
(Aliens.newWHILE)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-19
D=A
@R13
M=D
@call_Memory.alloc
0;JMP
(RETURN-19)
//Pop point
@POP_R317
D=A
@THT
0;JMP
(POP_R317)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//call
@RETURN318
D=A
@R13
M=D
(call_Screen.setColor)
@Screen.setColor
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN318)
//Pop
@POP_R319
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R319)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R320
D=A
@ADD
0;JMP
(ADD_R320)
//Pop
@POP_R321
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R321)
//Push C
@20
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R322
D=A
@R14
M=D
//THS
@11
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R322)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@11
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN323
D=A
@R13
M=D
(call_Screen.drawRectangle)
@Screen.drawRectangle
D=A
@R14
M=D
@4
D=A
@CALL
0;JMP
(RETURN323)
//Pop
@POP_R324
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R324)
//Push Point2
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@20
D=A
@SP
M=M+1
A=M-1
M=D
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R325
D=A
@ADD
0;JMP
(ADD_R325)
//Pop
@POP_R326
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R326)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@400
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n327
D=A
@GT
0;JMP
(n327)
//NOT
@SP
A=M-1
M=!M
//if
@IF328
D=A
@IF
0;JMP
(IF328)
@Aliens.newWHILE
D;JNE
//Pop
@POP_R329
D=A
@R14
M=D
//THS
@10
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R329)
//Pop
@POP_R330
D=A
@R14
M=D
//THS
@9
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R330)
//Pop
@POP_R331
D=A
@R14
M=D
//THS
@8
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R331)
//Pop
@POP_R332
D=A
@R14
M=D
//THS
@7
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R332)
//Pop
@POP_R333
D=A
@R14
M=D
//THS
@6
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R333)
//Pop
@POP_R334
D=A
@R14
M=D
//THS
@5
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R334)
//Pop
@POP_R335
D=A
@R14
M=D
//THS
@4
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R335)
//Pop
@POP_R336
D=A
@R14
M=D
//THS
@3
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R336)
//Pop
@POP_R337
D=A
@R14
M=D
//THS
@2
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R337)
//Pop
@POP_R338
D=A
@R14
M=D
//THS
@1
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R338)
//Pop
@POP_R339
D=A
@R14
M=D
//THS
@0
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R339)
//Push THS
@10
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R340
D=A
@THT
0;JMP
(POP_R340)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R341
D=A
@R14
M=D
//THS
@12
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R341)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Aliens.draw)
@0
D=A
@R14
M=D
@F342
D;JEQ
D=A
@FUNCT
0;JMP
(F342)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R343
D=A
@THS
0;JMP
(POP_R343)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
@RETURN-20
D=A
@R13
M=D
@call_Screen.setColor
0;JMP
(RETURN-20)
//Pop
@POP_R344
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R344)
//Push THS
@10
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@9
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@8
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@7
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@6
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@5
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@4
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@3
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R345
D=A
@R14
M=D
//TMP
@1
D=A
@5
D=D+A
@POP
0;JMP
(POP_R345)
(Aliens.drawWHILE_1)
//Pop point
@POP_R346
D=A
@THT
0;JMP
(POP_R346)
//Push TMP
@1
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R347
D=A
@SUB
0;JMP
(SUB_R347)
//Pop
@POP_R348
D=A
@R14
M=D
//TMP
@1
D=A
@5
D=D+A
@POP
0;JMP
(POP_R348)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n349
D=A
@EQ
0;JMP
(n349)
//if
@IF350
D=A
@IF
0;JMP
(IF350)
@Aliens.drawSKIP
D;JNE
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R351
D=A
@SUB
0;JMP
(SUB_R351)
//Push THS
@11
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R352
D=A
@SUB
0;JMP
(SUB_R352)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@11
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-21
D=A
@R13
M=D
@call_Screen.drawRectangle
0;JMP
(RETURN-21)
//Pop
@POP_R353
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R353)
(Aliens.drawSKIP)
//Push TMP
@1
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n354
D=A
@GT
0;JMP
(n354)
//if
@IF355
D=A
@IF
0;JMP
(IF355)
@Aliens.drawWHILE_1
D;JNE
@RETURNS
0;JMP
//funct
(Aliens.move)
@0
D=A
@R14
M=D
@F356
D;JEQ
D=A
@FUNCT
0;JMP
(F356)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R357
D=A
@THS
0;JMP
(POP_R357)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-22
D=A
@R13
M=D
@call_Screen.setColor
0;JMP
(RETURN-22)
//Pop
@POP_R358
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R358)
//Push C
@100
D=A
@SP
M=M+1
A=M-1
M=D
//Push THS
@11
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R359
D=A
@SUB
0;JMP
(SUB_R359)
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
//Push THS
@11
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-23
D=A
@R13
M=D
@call_Screen.drawRectangle
0;JMP
(RETURN-23)
//Pop
@POP_R360
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R360)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
@RETURN-24
D=A
@R13
M=D
@call_Screen.setColor
0;JMP
(RETURN-24)
//Pop
@POP_R361
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R361)
//Push THS
@12
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R362
D=A
@ADD
0;JMP
(ADD_R362)
//Pop
@POP_R363
D=A
@R14
M=D
//THS
@12
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R363)
//Push THS
@12
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n364
D=A
@GT
0;JMP
(n364)
//if
@IF365
D=A
@IF
0;JMP
(IF365)
@Aliens.moveNEXT_LINE
D;JNE
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@3
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@4
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@5
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@6
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@7
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@8
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@9
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@10
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R366
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R366)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R367
D=A
@R14
M=D
//TMP
@1
D=A
@5
D=D+A
@POP
0;JMP
(POP_R367)
(Aliens.moveLOOP_0)
//Pop point
@POP_R368
D=A
@THT
0;JMP
(POP_R368)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R369
D=A
@SUB
0;JMP
(SUB_R369)
//Pop
@POP_R370
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R370)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n371
D=A
@GT
0;JMP
(n371)
//if
@IF372
D=A
@IF
0;JMP
(IF372)
@Aliens.moveADD
D;JNE
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push TMP
@1
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R373
D=A
@ADD
0;JMP
(ADD_R373)
//Pop
@POP_R374
D=A
@R14
M=D
//TMP
@1
D=A
@5
D=D+A
@POP
0;JMP
(POP_R374)
//Push TMP
@1
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n375
D=A
@LT
0;JMP
(n375)
//if
@IF376
D=A
@IF
0;JMP
(IF376)
@Aliens.moveCONTINUE_0
D;JNE
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//goto
@Aliens.moveEND
0;JMP
(Aliens.moveCONTINUE_0)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n377
D=A
@GT
0;JMP
(n377)
//if
@IF378
D=A
@IF
0;JMP
(IF378)
@Aliens.moveLOOP_0
D;JNE
//goto
@Aliens.moveLOOP_END0
0;JMP
(Aliens.moveADD)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R379
D=A
@ADD
0;JMP
(ADD_R379)
//Pop
@POP_R380
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R380)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n381
D=A
@GT
0;JMP
(n381)
//if
@IF382
D=A
@IF
0;JMP
(IF382)
@Aliens.moveLOOP_0
D;JNE
(Aliens.moveLOOP_END0)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN383
D=A
@R13
M=D
(call_Aliens.draw)
@Aliens.draw
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN383)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//goto
@Aliens.moveEND
0;JMP
(Aliens.moveNEXT_LINE)
//Push C
@410
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R384
D=A
@R14
M=D
//THS
@12
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R384)
//Push THS
@10
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@9
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@8
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@7
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@6
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@5
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@4
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@3
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@80
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R385
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R385)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R386
D=A
@R14
M=D
//TMP
@1
D=A
@5
D=D+A
@POP
0;JMP
(POP_R386)
(Aliens.moveLOOP_1)
//Pop point
@POP_R387
D=A
@THT
0;JMP
(POP_R387)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R388
D=A
@ADD
0;JMP
(ADD_R388)
//Pop
@POP_R389
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R389)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n390
D=A
@GT
0;JMP
(n390)
//if
@IF391
D=A
@IF
0;JMP
(IF391)
@Aliens.moveRESET
D;JNE
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push TMP
@1
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R392
D=A
@ADD
0;JMP
(ADD_R392)
//Pop
@POP_R393
D=A
@R14
M=D
//TMP
@1
D=A
@5
D=D+A
@POP
0;JMP
(POP_R393)
//Push TMP
@1
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n394
D=A
@LT
0;JMP
(n394)
//if
@IF395
D=A
@IF
0;JMP
(IF395)
@Aliens.moveCONTINUE_1
D;JNE
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//goto
@Aliens.moveEND
0;JMP
(Aliens.moveCONTINUE_1)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@410
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n396
D=A
@LT
0;JMP
(n396)
//if
@IF397
D=A
@IF
0;JMP
(IF397)
@Aliens.moveLOOP_1
D;JNE
//goto
@Aliens.moveLOOP_END1
0;JMP
(Aliens.moveRESET)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R398
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R398)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@410
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n399
D=A
@LT
0;JMP
(n399)
//if
@IF400
D=A
@IF
0;JMP
(IF400)
@Aliens.moveLOOP_1
D;JNE
(Aliens.moveLOOP_END1)
//Push THS
@11
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R401
D=A
@ADD
0;JMP
(ADD_R401)
//Pop
@POP_R402
D=A
@R14
M=D
//THS
@11
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R402)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-25
D=A
@R13
M=D
@call_Aliens.draw
0;JMP
(RETURN-25)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
(Aliens.moveEND)
@RETURNS
0;JMP
//funct
(Aliens.destroy)
@0
D=A
@R14
M=D
@F403
D;JEQ
D=A
@FUNCT
0;JMP
(F403)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-26
D=A
@R13
M=D
@call_Screen.setColor
0;JMP
(RETURN-26)
//Pop
@POP_R404
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R404)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R405
D=A
@SUB
0;JMP
(SUB_R405)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R406
D=A
@SUB
0;JMP
(SUB_R406)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-27
D=A
@R13
M=D
@call_Screen.drawRectangle
0;JMP
(RETURN-27)
//Pop
@POP_R407
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R407)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R408
D=A
@R14
M=D
//THS
@0
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R408)
@RETURNS
0;JMP
//funct
(Array.new)
@0
D=A
@R14
M=D
@F409
D;JEQ
D=A
@FUNCT
0;JMP
(F409)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n410
D=A
@GT
0;JMP
(n410)
//NOT
@SP
A=M-1
M=!M
//if
@IF411
D=A
@IF
0;JMP
(IF411)
@Array.newIF_TRUE0
D;JNE
//goto
@Array.newIF_FALSE0
0;JMP
(Array.newIF_TRUE0)
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-28
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-28)
//Pop
@POP_R412
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R412)
(Array.newIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-29
D=A
@R13
M=D
@call_Memory.alloc
0;JMP
(RETURN-29)
@RETURNS
0;JMP
//funct
(Array.dispose)
@0
D=A
@R14
M=D
@F413
D;JEQ
D=A
@FUNCT
0;JMP
(F413)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R414
D=A
@THS
0;JMP
(POP_R414)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-30
D=A
@R13
M=D
@call_Memory.deAlloc
0;JMP
(RETURN-30)
//Pop
@POP_R415
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R415)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Main.main)
@1
D=A
@R14
M=D
@F416
D;JEQ
D=A
@FUNCT
0;JMP
(F416)
//call
@RETURN417
D=A
@R13
M=D
(call_SpaceInvaders.newInstance)
@SpaceInvaders.newInstance
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN417)
//Pop
@POP_R418
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R418)
//call
@RETURN419
D=A
@R13
M=D
(call_SpaceInvaders.getInstance)
@SpaceInvaders.getInstance
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN419)
//Pop
@POP_R420
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R420)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN421
D=A
@R13
M=D
(call_SpaceInvaders.run)
@SpaceInvaders.run
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN421)
//Pop
@POP_R422
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R422)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN423
D=A
@R13
M=D
(call_SpaceInvaders.dispose)
@SpaceInvaders.dispose
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN423)
//Pop
@POP_R424
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R424)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//funct
(Keyboard.init)
@0
D=A
@R14
M=D
@F425
D;JEQ
D=A
@FUNCT
0;JMP
(F425)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Keyboard.keyPressed)
@0
D=A
@R14
M=D
@F426
D;JEQ
D=A
@FUNCT
0;JMP
(F426)
//Push C
@24576
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN427
D=A
@R13
M=D
(call_Memory.peek)
@Memory.peek
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN427)
@RETURNS
0;JMP
//funct
(Keyboard.readChar)
@2
D=A
@R14
M=D
@F428
D;JEQ
D=A
@FUNCT
0;JMP
(F428)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN429
D=A
@R13
M=D
(call_Output.printChar)
@Output.printChar
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN429)
//Pop
@POP_R430
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R430)
(Keyboard.readCharWHILE_EXP0)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n431
D=A
@EQ
0;JMP
(n431)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n432
D=A
@GT
0;JMP
(n432)
//OR
@OR_R433
D=A
@OR
0;JMP
(OR_R433)
//NOT
@SP
A=M-1
M=!M
//if
@IF434
D=A
@IF
0;JMP
(IF434)
@Keyboard.readCharWHILE_END0
D;JNE
//call
@RETURN435
D=A
@R13
M=D
(call_Keyboard.keyPressed)
@Keyboard.keyPressed
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN435)
//Pop
@POP_R436
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R436)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n437
D=A
@GT
0;JMP
(n437)
//if
@IF438
D=A
@IF
0;JMP
(IF438)
@Keyboard.readCharIF_TRUE0
D;JNE
//goto
@Keyboard.readCharIF_FALSE0
0;JMP
(Keyboard.readCharIF_TRUE0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R439
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R439)
(Keyboard.readCharIF_FALSE0)
//goto
@Keyboard.readCharWHILE_EXP0
0;JMP
(Keyboard.readCharWHILE_END0)
//call
@RETURN440
D=A
@R13
M=D
(call_String.backSpace)
@String.backSpace
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN440)
@RETURN-31
D=A
@R13
M=D
@call_Output.printChar
0;JMP
(RETURN-31)
//Pop
@POP_R441
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R441)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-32
D=A
@R13
M=D
@call_Output.printChar
0;JMP
(RETURN-32)
//Pop
@POP_R442
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R442)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Keyboard.readLine)
@5
D=A
@R14
M=D
@F443
D;JEQ
D=A
@FUNCT
0;JMP
(F443)
//Push C
@80
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN444
D=A
@R13
M=D
(call_String.new)
@String.new
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN444)
//Pop
@POP_R445
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R445)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN446
D=A
@R13
M=D
(call_Output.printString)
@Output.printString
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN446)
//Pop
@POP_R447
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R447)
//call
@RETURN448
D=A
@R13
M=D
(call_String.newLine)
@String.newLine
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN448)
//Pop
@POP_R449
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R449)
@RETURN-33
D=A
@R13
M=D
@call_String.backSpace
0;JMP
(RETURN-33)
//Pop
@POP_R450
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R450)
(Keyboard.readLineWHILE_EXP0)
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//NOT
@SP
A=M-1
M=!M
//if
@IF451
D=A
@IF
0;JMP
(IF451)
@Keyboard.readLineWHILE_END0
D;JNE
//call
@RETURN452
D=A
@R13
M=D
(call_Keyboard.readChar)
@Keyboard.readChar
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN452)
//Pop
@POP_R453
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R453)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//EQ
@n454
D=A
@EQ
0;JMP
(n454)
//Pop
@POP_R455
D=A
@R14
M=D
//L
@4
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R455)
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//if
@IF456
D=A
@IF
0;JMP
(IF456)
@Keyboard.readLineIF_TRUE0
D;JNE
//goto
@Keyboard.readLineIF_FALSE0
0;JMP
(Keyboard.readLineIF_TRUE0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//EQ
@n457
D=A
@EQ
0;JMP
(n457)
//if
@IF458
D=A
@IF
0;JMP
(IF458)
@Keyboard.readLineIF_TRUE1
D;JNE
//goto
@Keyboard.readLineIF_FALSE1
0;JMP
(Keyboard.readLineIF_TRUE1)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN459
D=A
@R13
M=D
(call_String.eraseLastChar)
@String.eraseLastChar
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN459)
//Pop
@POP_R460
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R460)
//goto
@Keyboard.readLineIF_END1
0;JMP
(Keyboard.readLineIF_FALSE1)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN461
D=A
@R13
M=D
(call_String.appendChar)
@String.appendChar
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN461)
//Pop
@POP_R462
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R462)
(Keyboard.readLineIF_END1)
(Keyboard.readLineIF_FALSE0)
//goto
@Keyboard.readLineWHILE_EXP0
0;JMP
(Keyboard.readLineWHILE_END0)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Keyboard.readInt)
@2
D=A
@R14
M=D
@F463
D;JEQ
D=A
@FUNCT
0;JMP
(F463)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN464
D=A
@R13
M=D
(call_Keyboard.readLine)
@Keyboard.readLine
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN464)
//Pop
@POP_R465
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R465)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN466
D=A
@R13
M=D
(call_String.intValue)
@String.intValue
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN466)
//Pop
@POP_R467
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R467)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN468
D=A
@R13
M=D
(call_String.dispose)
@String.dispose
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN468)
//Pop
@POP_R469
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R469)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Sys.init)
@0
D=A
@R14
M=D
@F470
D;JEQ
D=A
@FUNCT
0;JMP
(F470)
//call
@RETURN471
D=A
@R13
M=D
(call_Memory.init)
@Memory.init
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN471)
//Pop
@POP_R472
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R472)
//call
@RETURN473
D=A
@R13
M=D
(call_Math.init)
@Math.init
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN473)
//Pop
@POP_R474
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R474)
//call
@RETURN475
D=A
@R13
M=D
(call_Screen.init)
@Screen.init
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN475)
//Pop
@POP_R476
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R476)
//call
@RETURN477
D=A
@R13
M=D
(call_Output.init)
@Output.init
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN477)
//Pop
@POP_R478
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R478)
//call
@RETURN479
D=A
@R13
M=D
(call_Keyboard.init)
@Keyboard.init
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN479)
//Pop
@POP_R480
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R480)
//call
@RETURN481
D=A
@R13
M=D
(call_Main.main)
@Main.main
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN481)
//Pop
@POP_R482
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R482)
//call
@RETURN483
D=A
@R13
M=D
(call_Sys.halt)
@Sys.halt
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN483)
//Pop
@POP_R484
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R484)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Sys.halt)
@0
D=A
@R14
M=D
@F485
D;JEQ
D=A
@FUNCT
0;JMP
(F485)
(Sys.haltWHILE_EXP0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//NOT
@SP
A=M-1
M=!M
//if
@IF486
D=A
@IF
0;JMP
(IF486)
@Sys.haltWHILE_END0
D;JNE
//goto
@Sys.haltWHILE_EXP0
0;JMP
(Sys.haltWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Sys.wait)
@1
D=A
@R14
M=D
@F487
D;JEQ
D=A
@FUNCT
0;JMP
(F487)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n488
D=A
@LT
0;JMP
(n488)
//if
@IF489
D=A
@IF
0;JMP
(IF489)
@Sys.waitIF_TRUE0
D;JNE
//goto
@Sys.waitIF_FALSE0
0;JMP
(Sys.waitIF_TRUE0)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-34
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-34)
//Pop
@POP_R490
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R490)
(Sys.waitIF_FALSE0)
(Sys.waitWHILE_EXP0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n491
D=A
@GT
0;JMP
(n491)
//NOT
@SP
A=M-1
M=!M
//if
@IF492
D=A
@IF
0;JMP
(IF492)
@Sys.waitWHILE_END0
D;JNE
//Push C
@50
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R493
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R493)
(Sys.waitWHILE_EXP1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n494
D=A
@GT
0;JMP
(n494)
//NOT
@SP
A=M-1
M=!M
//if
@IF495
D=A
@IF
0;JMP
(IF495)
@Sys.waitWHILE_END1
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R496
D=A
@SUB
0;JMP
(SUB_R496)
//Pop
@POP_R497
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R497)
//goto
@Sys.waitWHILE_EXP1
0;JMP
(Sys.waitWHILE_END1)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R498
D=A
@SUB
0;JMP
(SUB_R498)
//Pop
@POP_R499
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R499)
//goto
@Sys.waitWHILE_EXP0
0;JMP
(Sys.waitWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Sys.error)
@0
D=A
@R14
M=D
@F500
D;JEQ
D=A
@FUNCT
0;JMP
(F500)
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-35
D=A
@R13
M=D
@call_String.new
0;JMP
(RETURN-35)
//Push C
@69
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-36
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-36)
//Push C
@82
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-37
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-37)
//Push C
@82
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-38
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-38)
@RETURN-39
D=A
@R13
M=D
@call_Output.printString
0;JMP
(RETURN-39)
//Pop
@POP_R501
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R501)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN502
D=A
@R13
M=D
(call_Output.printInt)
@Output.printInt
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN502)
//Pop
@POP_R503
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R503)
@RETURN-40
D=A
@R13
M=D
@call_Sys.halt
0;JMP
(RETURN-40)
//Pop
@POP_R504
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R504)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.init)
@0
D=A
@R14
M=D
@F505
D;JEQ
D=A
@FUNCT
0;JMP
(F505)
//Push C
@16384
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R506
D=A
@R14
M=D
//S
@Output.4
D=A
@POP
0;JMP
(POP_R506)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R507
D=A
@R14
M=D
//S
@Output.2
D=A
@POP
0;JMP
(POP_R507)
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R508
D=A
@R14
M=D
//S
@Output.1
D=A
@POP
0;JMP
(POP_R508)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R509
D=A
@R14
M=D
//S
@Output.0
D=A
@POP
0;JMP
(POP_R509)
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-41
D=A
@R13
M=D
@call_String.new
0;JMP
(RETURN-41)
//Pop
@POP_R510
D=A
@R14
M=D
//S
@Output.3
D=A
@POP
0;JMP
(POP_R510)
//call
@RETURN511
D=A
@R13
M=D
(call_Output.initMap)
@Output.initMap
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN511)
//Pop
@POP_R512
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R512)
//call
@RETURN513
D=A
@R13
M=D
(call_Output.createShiftedMap)
@Output.createShiftedMap
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN513)
//Pop
@POP_R514
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R514)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.initMap)
@0
D=A
@R14
M=D
@F515
D;JEQ
D=A
@FUNCT
0;JMP
(F515)
//Push C
@127
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-42
D=A
@R13
M=D
@call_Array.new
0;JMP
(RETURN-42)
//Pop
@POP_R516
D=A
@R14
M=D
//S
@Output.5
D=A
@POP
0;JMP
(POP_R516)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN517
D=A
@R13
M=D
(call_Output.create)
@Output.create
D=A
@R14
M=D
@12
D=A
@CALL
0;JMP
(RETURN517)
//Pop
@POP_R518
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R518)
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-43
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-43)
//Pop
@POP_R519
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R519)
//Push C
@33
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-44
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-44)
//Pop
@POP_R520
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R520)
//Push C
@34
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@20
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-45
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-45)
//Pop
@POP_R521
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R521)
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-46
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-46)
//Pop
@POP_R522
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R522)
//Push C
@36
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-47
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-47)
//Pop
@POP_R523
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R523)
//Push C
@37
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@49
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-48
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-48)
//Pop
@POP_R524
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R524)
//Push C
@38
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-49
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-49)
//Pop
@POP_R525
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R525)
//Push C
@39
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-50
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-50)
//Pop
@POP_R526
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R526)
//Push C
@40
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-51
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-51)
//Pop
@POP_R527
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R527)
//Push C
@41
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-52
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-52)
//Pop
@POP_R528
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R528)
//Push C
@42
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-53
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-53)
//Pop
@POP_R529
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R529)
//Push C
@43
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-54
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-54)
//Pop
@POP_R530
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R530)
//Push C
@44
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-55
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-55)
//Pop
@POP_R531
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R531)
//Push C
@45
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-56
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-56)
//Pop
@POP_R532
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R532)
//Push C
@46
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-57
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-57)
//Pop
@POP_R533
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R533)
//Push C
@47
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-58
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-58)
//Pop
@POP_R534
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R534)
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-59
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-59)
//Pop
@POP_R535
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R535)
//Push C
@49
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@14
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-60
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-60)
//Pop
@POP_R536
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R536)
//Push C
@50
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-61
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-61)
//Pop
@POP_R537
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R537)
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-62
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-62)
//Pop
@POP_R538
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R538)
//Push C
@52
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@26
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@25
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@60
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-63
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-63)
//Pop
@POP_R539
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R539)
//Push C
@53
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-64
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-64)
//Pop
@POP_R540
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R540)
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-65
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-65)
//Pop
@POP_R541
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R541)
//Push C
@55
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@49
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-66
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-66)
//Pop
@POP_R542
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R542)
//Push C
@56
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-67
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-67)
//Pop
@POP_R543
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R543)
//Push C
@57
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@62
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@14
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-68
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-68)
//Pop
@POP_R544
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R544)
//Push C
@58
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-69
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-69)
//Pop
@POP_R545
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R545)
//Push C
@59
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-70
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-70)
//Pop
@POP_R546
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R546)
//Push C
@60
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-71
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-71)
//Pop
@POP_R547
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R547)
//Push C
@61
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-72
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-72)
//Pop
@POP_R548
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R548)
//Push C
@62
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-73
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-73)
//Pop
@POP_R549
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R549)
//Push C
@64
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@59
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@59
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@59
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-74
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-74)
//Pop
@POP_R550
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R550)
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-75
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-75)
//Pop
@POP_R551
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R551)
//Push C
@65
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-76
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-76)
//Pop
@POP_R552
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R552)
//Push C
@66
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-77
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-77)
//Pop
@POP_R553
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R553)
//Push C
@67
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-78
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-78)
//Pop
@POP_R554
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R554)
//Push C
@68
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-79
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-79)
//Pop
@POP_R555
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R555)
//Push C
@69
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-80
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-80)
//Pop
@POP_R556
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R556)
//Push C
@70
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-81
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-81)
//Pop
@POP_R557
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R557)
//Push C
@71
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@59
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@44
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-82
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-82)
//Pop
@POP_R558
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R558)
//Push C
@72
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-83
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-83)
//Pop
@POP_R559
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R559)
//Push C
@73
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-84
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-84)
//Pop
@POP_R560
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R560)
//Push C
@74
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@60
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@14
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-85
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-85)
//Pop
@POP_R561
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R561)
//Push C
@75
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-86
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-86)
//Pop
@POP_R562
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R562)
//Push C
@76
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-87
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-87)
//Pop
@POP_R563
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R563)
//Push C
@77
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@33
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-88
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-88)
//Pop
@POP_R564
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R564)
//Push C
@78
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@55
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@55
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@59
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@59
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-89
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-89)
//Pop
@POP_R565
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R565)
//Push C
@79
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-90
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-90)
//Pop
@POP_R566
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R566)
//Push C
@80
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-91
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-91)
//Pop
@POP_R567
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R567)
//Push C
@81
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@59
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-92
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-92)
//Pop
@POP_R568
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R568)
//Push C
@82
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-93
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-93)
//Pop
@POP_R569
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R569)
//Push C
@83
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-94
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-94)
//Pop
@POP_R570
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R570)
//Push C
@84
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@45
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-95
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-95)
//Pop
@POP_R571
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R571)
//Push C
@85
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-96
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-96)
//Pop
@POP_R572
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R572)
//Push C
@86
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-97
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-97)
//Pop
@POP_R573
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R573)
//Push C
@87
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-98
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-98)
//Pop
@POP_R574
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R574)
//Push C
@88
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-99
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-99)
//Pop
@POP_R575
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R575)
//Push C
@89
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-100
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-100)
//Pop
@POP_R576
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R576)
//Push C
@90
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@49
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@35
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-101
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-101)
//Pop
@POP_R577
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R577)
//Push C
@91
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-102
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-102)
//Pop
@POP_R578
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R578)
//Push C
@92
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-103
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-103)
//Pop
@POP_R579
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R579)
//Push C
@93
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-104
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-104)
//Pop
@POP_R580
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R580)
//Push C
@94
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@8
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-105
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-105)
//Pop
@POP_R581
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R581)
//Push C
@95
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-106
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-106)
//Pop
@POP_R582
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R582)
//Push C
@96
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-107
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-107)
//Pop
@POP_R583
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R583)
//Push C
@97
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@14
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-108
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-108)
//Pop
@POP_R584
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R584)
//Push C
@98
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-109
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-109)
//Pop
@POP_R585
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R585)
//Push C
@99
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-110
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-110)
//Pop
@POP_R586
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R586)
//Push C
@100
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@60
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-111
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-111)
//Pop
@POP_R587
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R587)
//Push C
@101
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-112
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-112)
//Pop
@POP_R588
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R588)
//Push C
@102
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@38
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-113
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-113)
//Pop
@POP_R589
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R589)
//Push C
@103
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@62
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-114
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-114)
//Pop
@POP_R590
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R590)
//Push C
@104
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@55
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-115
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-115)
//Pop
@POP_R591
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R591)
//Push C
@105
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@14
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-116
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-116)
//Pop
@POP_R592
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R592)
//Push C
@106
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@56
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-117
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-117)
//Pop
@POP_R593
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R593)
//Push C
@107
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-118
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-118)
//Pop
@POP_R594
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R594)
//Push C
@108
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@14
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-119
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-119)
//Pop
@POP_R595
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R595)
//Push C
@109
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@29
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@43
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@43
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@43
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@43
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-120
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-120)
//Pop
@POP_R596
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R596)
//Push C
@110
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@29
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-121
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-121)
//Pop
@POP_R597
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R597)
//Push C
@111
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-122
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-122)
//Pop
@POP_R598
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R598)
//Push C
@112
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-123
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-123)
//Pop
@POP_R599
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R599)
//Push C
@113
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@62
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-124
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-124)
//Pop
@POP_R600
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R600)
//Push C
@114
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@29
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@55
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-125
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-125)
//Pop
@POP_R601
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R601)
//Push C
@115
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-126
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-126)
//Pop
@POP_R602
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R602)
//Push C
@116
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@4
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@28
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-127
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-127)
//Pop
@POP_R603
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R603)
//Push C
@117
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@54
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-128
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-128)
//Pop
@POP_R604
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R604)
//Push C
@118
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-129
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-129)
//Pop
@POP_R605
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R605)
//Push C
@119
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@18
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-130
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-130)
//Pop
@POP_R606
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R606)
//Push C
@120
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-131
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-131)
//Pop
@POP_R607
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R607)
//Push C
@121
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@62
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@24
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@15
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-132
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-132)
//Pop
@POP_R608
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R608)
//Push C
@122
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@27
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@51
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-133
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-133)
//Pop
@POP_R609
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R609)
//Push C
@123
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@56
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@56
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-134
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-134)
//Pop
@POP_R610
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R610)
//Push C
@124
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-135
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-135)
//Pop
@POP_R611
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R611)
//Push C
@125
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@56
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-136
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-136)
//Pop
@POP_R612
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R612)
//Push C
@126
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@38
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@45
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@25
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-137
D=A
@R13
M=D
@call_Output.create
0;JMP
(RETURN-137)
//Pop
@POP_R613
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R613)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.create)
@1
D=A
@R14
M=D
@F614
D;JEQ
D=A
@FUNCT
0;JMP
(F614)
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-138
D=A
@R13
M=D
@call_Array.new
0;JMP
(RETURN-138)
//Pop
@POP_R615
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R615)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.5
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R616
D=A
@ADD
0;JMP
(ADD_R616)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R617
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R617)
//Pop point
@POP_R618
D=A
@THT
0;JMP
(POP_R618)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R619
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R619)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R620
D=A
@ADD
0;JMP
(ADD_R620)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R621
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R621)
//Pop point
@POP_R622
D=A
@THT
0;JMP
(POP_R622)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R623
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R623)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R624
D=A
@ADD
0;JMP
(ADD_R624)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R625
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R625)
//Pop point
@POP_R626
D=A
@THT
0;JMP
(POP_R626)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R627
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R627)
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R628
D=A
@ADD
0;JMP
(ADD_R628)
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R629
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R629)
//Pop point
@POP_R630
D=A
@THT
0;JMP
(POP_R630)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R631
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R631)
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R632
D=A
@ADD
0;JMP
(ADD_R632)
//Push A
@4
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R633
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R633)
//Pop point
@POP_R634
D=A
@THT
0;JMP
(POP_R634)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R635
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R635)
//Push C
@4
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R636
D=A
@ADD
0;JMP
(ADD_R636)
//Push A
@5
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R637
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R637)
//Pop point
@POP_R638
D=A
@THT
0;JMP
(POP_R638)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R639
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R639)
//Push C
@5
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R640
D=A
@ADD
0;JMP
(ADD_R640)
//Push A
@6
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R641
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R641)
//Pop point
@POP_R642
D=A
@THT
0;JMP
(POP_R642)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R643
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R643)
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R644
D=A
@ADD
0;JMP
(ADD_R644)
//Push A
@7
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R645
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R645)
//Pop point
@POP_R646
D=A
@THT
0;JMP
(POP_R646)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R647
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R647)
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R648
D=A
@ADD
0;JMP
(ADD_R648)
//Push A
@8
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R649
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R649)
//Pop point
@POP_R650
D=A
@THT
0;JMP
(POP_R650)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R651
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R651)
//Push C
@8
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R652
D=A
@ADD
0;JMP
(ADD_R652)
//Push A
@9
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R653
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R653)
//Pop point
@POP_R654
D=A
@THT
0;JMP
(POP_R654)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R655
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R655)
//Push C
@9
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R656
D=A
@ADD
0;JMP
(ADD_R656)
//Push A
@10
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R657
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R657)
//Pop point
@POP_R658
D=A
@THT
0;JMP
(POP_R658)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R659
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R659)
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R660
D=A
@ADD
0;JMP
(ADD_R660)
//Push A
@11
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R661
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R661)
//Pop point
@POP_R662
D=A
@THT
0;JMP
(POP_R662)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R663
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R663)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.createShiftedMap)
@4
D=A
@R14
M=D
@F664
D;JEQ
D=A
@FUNCT
0;JMP
(F664)
//Push C
@127
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-139
D=A
@R13
M=D
@call_Array.new
0;JMP
(RETURN-139)
//Pop
@POP_R665
D=A
@R14
M=D
//S
@Output.6
D=A
@POP
0;JMP
(POP_R665)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R666
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R666)
(Output.createShiftedMapWHILE_EXP0)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@127
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n667
D=A
@LT
0;JMP
(n667)
//NOT
@SP
A=M-1
M=!M
//if
@IF668
D=A
@IF
0;JMP
(IF668)
@Output.createShiftedMapWHILE_END0
D;JNE
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.5
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R669
D=A
@ADD
0;JMP
(ADD_R669)
//Pop point
@POP_R670
D=A
@THT
0;JMP
(POP_R670)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R671
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R671)
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-140
D=A
@R13
M=D
@call_Array.new
0;JMP
(RETURN-140)
//Pop
@POP_R672
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R672)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.6
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R673
D=A
@ADD
0;JMP
(ADD_R673)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R674
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R674)
//Pop point
@POP_R675
D=A
@THT
0;JMP
(POP_R675)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R676
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R676)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R677
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R677)
(Output.createShiftedMapWHILE_EXP1)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n678
D=A
@LT
0;JMP
(n678)
//NOT
@SP
A=M-1
M=!M
//if
@IF679
D=A
@IF
0;JMP
(IF679)
@Output.createShiftedMapWHILE_END1
D;JNE
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R680
D=A
@ADD
0;JMP
(ADD_R680)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R681
D=A
@ADD
0;JMP
(ADD_R681)
//Pop point
@POP_R682
D=A
@THT
0;JMP
(POP_R682)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@256
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-141
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-141)
//Pop
@POP_R683
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R683)
//Pop point
@POP_R684
D=A
@THT
0;JMP
(POP_R684)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R685
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R685)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R686
D=A
@ADD
0;JMP
(ADD_R686)
//Pop
@POP_R687
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R687)
//goto
@Output.createShiftedMapWHILE_EXP1
0;JMP
(Output.createShiftedMapWHILE_END1)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n688
D=A
@EQ
0;JMP
(n688)
//if
@IF689
D=A
@IF
0;JMP
(IF689)
@Output.createShiftedMapIF_TRUE0
D;JNE
//goto
@Output.createShiftedMapIF_FALSE0
0;JMP
(Output.createShiftedMapIF_TRUE0)
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R690
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R690)
//goto
@Output.createShiftedMapIF_END0
0;JMP
(Output.createShiftedMapIF_FALSE0)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R691
D=A
@ADD
0;JMP
(ADD_R691)
//Pop
@POP_R692
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R692)
(Output.createShiftedMapIF_END0)
//goto
@Output.createShiftedMapWHILE_EXP0
0;JMP
(Output.createShiftedMapWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.getMap)
@1
D=A
@R14
M=D
@F693
D;JEQ
D=A
@FUNCT
0;JMP
(F693)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n694
D=A
@LT
0;JMP
(n694)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@126
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n695
D=A
@GT
0;JMP
(n695)
//OR
@OR_R696
D=A
@OR
0;JMP
(OR_R696)
//if
@IF697
D=A
@IF
0;JMP
(IF697)
@Output.getMapIF_TRUE0
D;JNE
//goto
@Output.getMapIF_FALSE0
0;JMP
(Output.getMapIF_TRUE0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R698
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R698)
(Output.getMapIF_FALSE0)
//Push S
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF699
D=A
@IF
0;JMP
(IF699)
@Output.getMapIF_TRUE1
D;JNE
//goto
@Output.getMapIF_FALSE1
0;JMP
(Output.getMapIF_TRUE1)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.5
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R700
D=A
@ADD
0;JMP
(ADD_R700)
//Pop point
@POP_R701
D=A
@THT
0;JMP
(POP_R701)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R702
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R702)
//goto
@Output.getMapIF_END1
0;JMP
(Output.getMapIF_FALSE1)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.6
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R703
D=A
@ADD
0;JMP
(ADD_R703)
//Pop point
@POP_R704
D=A
@THT
0;JMP
(POP_R704)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R705
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R705)
(Output.getMapIF_END1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.drawChar)
@4
D=A
@R14
M=D
@F706
D;JEQ
D=A
@FUNCT
0;JMP
(F706)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN707
D=A
@R13
M=D
(call_Output.getMap)
@Output.getMap
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN707)
//Pop
@POP_R708
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R708)
//Push S
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R709
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R709)
(Output.drawCharWHILE_EXP0)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n710
D=A
@LT
0;JMP
(n710)
//NOT
@SP
A=M-1
M=!M
//if
@IF711
D=A
@IF
0;JMP
(IF711)
@Output.drawCharWHILE_END0
D;JNE
//Push S
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF712
D=A
@IF
0;JMP
(IF712)
@Output.drawCharIF_TRUE0
D;JNE
//goto
@Output.drawCharIF_FALSE0
0;JMP
(Output.drawCharIF_TRUE0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.4
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R713
D=A
@ADD
0;JMP
(ADD_R713)
//Pop point
@POP_R714
D=A
@THT
0;JMP
(POP_R714)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@256
D=A
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//AND
@AND_R715
D=A
@AND
0;JMP
(AND_R715)
//Pop
@POP_R716
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R716)
//goto
@Output.drawCharIF_END0
0;JMP
(Output.drawCharIF_FALSE0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.4
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R717
D=A
@ADD
0;JMP
(ADD_R717)
//Pop point
@POP_R718
D=A
@THT
0;JMP
(POP_R718)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@255
D=A
@SP
M=M+1
A=M-1
M=D
//AND
@AND_R719
D=A
@AND
0;JMP
(AND_R719)
//Pop
@POP_R720
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R720)
(Output.drawCharIF_END0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.4
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R721
D=A
@ADD
0;JMP
(ADD_R721)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R722
D=A
@ADD
0;JMP
(ADD_R722)
//Pop point
@POP_R723
D=A
@THT
0;JMP
(POP_R723)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//OR
@OR_R724
D=A
@OR
0;JMP
(OR_R724)
//Pop
@POP_R725
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R725)
//Pop point
@POP_R726
D=A
@THT
0;JMP
(POP_R726)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R727
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R727)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R728
D=A
@ADD
0;JMP
(ADD_R728)
//Pop
@POP_R729
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R729)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R730
D=A
@ADD
0;JMP
(ADD_R730)
//Pop
@POP_R731
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R731)
//goto
@Output.drawCharWHILE_EXP0
0;JMP
(Output.drawCharWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.moveCursor)
@0
D=A
@R14
M=D
@F732
D;JEQ
D=A
@FUNCT
0;JMP
(F732)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n733
D=A
@LT
0;JMP
(n733)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@22
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n734
D=A
@GT
0;JMP
(n734)
//OR
@OR_R735
D=A
@OR
0;JMP
(OR_R735)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n736
D=A
@LT
0;JMP
(n736)
//OR
@OR_R737
D=A
@OR
0;JMP
(OR_R737)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@63
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n738
D=A
@GT
0;JMP
(n738)
//OR
@OR_R739
D=A
@OR
0;JMP
(OR_R739)
//if
@IF740
D=A
@IF
0;JMP
(IF740)
@Output.moveCursorIF_TRUE0
D;JNE
//goto
@Output.moveCursorIF_FALSE0
0;JMP
(Output.moveCursorIF_TRUE0)
//Push C
@20
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-142
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-142)
//Pop
@POP_R741
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R741)
(Output.moveCursorIF_FALSE0)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-143
D=A
@R13
M=D
@call_Math.divide
0;JMP
(RETURN-143)
//Pop
@POP_R742
D=A
@R14
M=D
//S
@Output.0
D=A
@POP
0;JMP
(POP_R742)
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@352
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-144
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-144)
//ADD
@ADD_R743
D=A
@ADD
0;JMP
(ADD_R743)
//Push S
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R744
D=A
@ADD
0;JMP
(ADD_R744)
//Pop
@POP_R745
D=A
@R14
M=D
//S
@Output.1
D=A
@POP
0;JMP
(POP_R745)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-145
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-145)
//EQ
@n746
D=A
@EQ
0;JMP
(n746)
//Pop
@POP_R747
D=A
@R14
M=D
//S
@Output.2
D=A
@POP
0;JMP
(POP_R747)
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN748
D=A
@R13
M=D
(call_Output.drawChar)
@Output.drawChar
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN748)
//Pop
@POP_R749
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R749)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.printChar)
@0
D=A
@R14
M=D
@F750
D;JEQ
D=A
@FUNCT
0;JMP
(F750)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-146
D=A
@R13
M=D
@call_String.newLine
0;JMP
(RETURN-146)
//EQ
@n751
D=A
@EQ
0;JMP
(n751)
//if
@IF752
D=A
@IF
0;JMP
(IF752)
@Output.printCharIF_TRUE0
D;JNE
//goto
@Output.printCharIF_FALSE0
0;JMP
(Output.printCharIF_TRUE0)
//call
@RETURN753
D=A
@R13
M=D
(call_Output.println)
@Output.println
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN753)
//Pop
@POP_R754
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R754)
//goto
@Output.printCharIF_END0
0;JMP
(Output.printCharIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-147
D=A
@R13
M=D
@call_String.backSpace
0;JMP
(RETURN-147)
//EQ
@n755
D=A
@EQ
0;JMP
(n755)
//if
@IF756
D=A
@IF
0;JMP
(IF756)
@Output.printCharIF_TRUE1
D;JNE
//goto
@Output.printCharIF_FALSE1
0;JMP
(Output.printCharIF_TRUE1)
//call
@RETURN757
D=A
@R13
M=D
(call_Output.backSpace)
@Output.backSpace
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN757)
//Pop
@POP_R758
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R758)
//goto
@Output.printCharIF_END1
0;JMP
(Output.printCharIF_FALSE1)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-148
D=A
@R13
M=D
@call_Output.drawChar
0;JMP
(RETURN-148)
//Pop
@POP_R759
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R759)
//Push S
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//if
@IF760
D=A
@IF
0;JMP
(IF760)
@Output.printCharIF_TRUE2
D;JNE
//goto
@Output.printCharIF_FALSE2
0;JMP
(Output.printCharIF_TRUE2)
//Push S
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R761
D=A
@ADD
0;JMP
(ADD_R761)
//Pop
@POP_R762
D=A
@R14
M=D
//S
@Output.0
D=A
@POP
0;JMP
(POP_R762)
//Push S
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R763
D=A
@ADD
0;JMP
(ADD_R763)
//Pop
@POP_R764
D=A
@R14
M=D
//S
@Output.1
D=A
@POP
0;JMP
(POP_R764)
(Output.printCharIF_FALSE2)
//Push S
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n765
D=A
@EQ
0;JMP
(n765)
//if
@IF766
D=A
@IF
0;JMP
(IF766)
@Output.printCharIF_TRUE3
D;JNE
//goto
@Output.printCharIF_FALSE3
0;JMP
(Output.printCharIF_TRUE3)
@RETURN-149
D=A
@R13
M=D
@call_Output.println
0;JMP
(RETURN-149)
//Pop
@POP_R767
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R767)
//goto
@Output.printCharIF_END3
0;JMP
(Output.printCharIF_FALSE3)
//Push S
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R768
D=A
@R14
M=D
//S
@Output.2
D=A
@POP
0;JMP
(POP_R768)
(Output.printCharIF_END3)
(Output.printCharIF_END1)
(Output.printCharIF_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.printString)
@2
D=A
@R14
M=D
@F769
D;JEQ
D=A
@FUNCT
0;JMP
(F769)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN770
D=A
@R13
M=D
(call_String.length)
@String.length
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN770)
//Pop
@POP_R771
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R771)
(Output.printStringWHILE_EXP0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n772
D=A
@LT
0;JMP
(n772)
//NOT
@SP
A=M-1
M=!M
//if
@IF773
D=A
@IF
0;JMP
(IF773)
@Output.printStringWHILE_END0
D;JNE
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN774
D=A
@R13
M=D
(call_String.charAt)
@String.charAt
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN774)
@RETURN-150
D=A
@R13
M=D
@call_Output.printChar
0;JMP
(RETURN-150)
//Pop
@POP_R775
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R775)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R776
D=A
@ADD
0;JMP
(ADD_R776)
//Pop
@POP_R777
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R777)
//goto
@Output.printStringWHILE_EXP0
0;JMP
(Output.printStringWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.printInt)
@0
D=A
@R14
M=D
@F778
D;JEQ
D=A
@FUNCT
0;JMP
(F778)
//Push S
@Output.3
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN779
D=A
@R13
M=D
(call_String.setInt)
@String.setInt
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN779)
//Pop
@POP_R780
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R780)
//Push S
@Output.3
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-151
D=A
@R13
M=D
@call_Output.printString
0;JMP
(RETURN-151)
//Pop
@POP_R781
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R781)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.println)
@0
D=A
@R14
M=D
@F782
D;JEQ
D=A
@FUNCT
0;JMP
(F782)
//Push S
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@352
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R783
D=A
@ADD
0;JMP
(ADD_R783)
//Push S
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R784
D=A
@SUB
0;JMP
(SUB_R784)
//Pop
@POP_R785
D=A
@R14
M=D
//S
@Output.1
D=A
@POP
0;JMP
(POP_R785)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R786
D=A
@R14
M=D
//S
@Output.0
D=A
@POP
0;JMP
(POP_R786)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R787
D=A
@R14
M=D
//S
@Output.2
D=A
@POP
0;JMP
(POP_R787)
//Push S
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@8128
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n788
D=A
@EQ
0;JMP
(n788)
//if
@IF789
D=A
@IF
0;JMP
(IF789)
@Output.printlnIF_TRUE0
D;JNE
//goto
@Output.printlnIF_FALSE0
0;JMP
(Output.printlnIF_TRUE0)
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R790
D=A
@R14
M=D
//S
@Output.1
D=A
@POP
0;JMP
(POP_R790)
(Output.printlnIF_FALSE0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Output.backSpace)
@0
D=A
@R14
M=D
@F791
D;JEQ
D=A
@FUNCT
0;JMP
(F791)
//Push S
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF792
D=A
@IF
0;JMP
(IF792)
@Output.backSpaceIF_TRUE0
D;JNE
//goto
@Output.backSpaceIF_FALSE0
0;JMP
(Output.backSpaceIF_TRUE0)
//Push S
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n793
D=A
@GT
0;JMP
(n793)
//if
@IF794
D=A
@IF
0;JMP
(IF794)
@Output.backSpaceIF_TRUE1
D;JNE
//goto
@Output.backSpaceIF_FALSE1
0;JMP
(Output.backSpaceIF_TRUE1)
//Push S
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R795
D=A
@SUB
0;JMP
(SUB_R795)
//Pop
@POP_R796
D=A
@R14
M=D
//S
@Output.0
D=A
@POP
0;JMP
(POP_R796)
//Push S
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R797
D=A
@SUB
0;JMP
(SUB_R797)
//Pop
@POP_R798
D=A
@R14
M=D
//S
@Output.1
D=A
@POP
0;JMP
(POP_R798)
//goto
@Output.backSpaceIF_END1
0;JMP
(Output.backSpaceIF_FALSE1)
//Push C
@31
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R799
D=A
@R14
M=D
//S
@Output.0
D=A
@POP
0;JMP
(POP_R799)
//Push S
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n800
D=A
@EQ
0;JMP
(n800)
//if
@IF801
D=A
@IF
0;JMP
(IF801)
@Output.backSpaceIF_TRUE2
D;JNE
//goto
@Output.backSpaceIF_FALSE2
0;JMP
(Output.backSpaceIF_TRUE2)
//Push C
@8128
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R802
D=A
@R14
M=D
//S
@Output.1
D=A
@POP
0;JMP
(POP_R802)
(Output.backSpaceIF_FALSE2)
//Push S
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@321
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R803
D=A
@SUB
0;JMP
(SUB_R803)
//Pop
@POP_R804
D=A
@R14
M=D
//S
@Output.1
D=A
@POP
0;JMP
(POP_R804)
(Output.backSpaceIF_END1)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R805
D=A
@R14
M=D
//S
@Output.2
D=A
@POP
0;JMP
(POP_R805)
//goto
@Output.backSpaceIF_END0
0;JMP
(Output.backSpaceIF_FALSE0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R806
D=A
@R14
M=D
//S
@Output.2
D=A
@POP
0;JMP
(POP_R806)
(Output.backSpaceIF_END0)
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-152
D=A
@R13
M=D
@call_Output.drawChar
0;JMP
(RETURN-152)
//Pop
@POP_R807
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R807)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.init)
@1
D=A
@R14
M=D
@F808
D;JEQ
D=A
@FUNCT
0;JMP
(F808)
//Push C
@16384
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R809
D=A
@R14
M=D
//S
@Screen.1
D=A
@POP
0;JMP
(POP_R809)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R810
D=A
@R14
M=D
//S
@Screen.2
D=A
@POP
0;JMP
(POP_R810)
//Push C
@17
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-153
D=A
@R13
M=D
@call_Array.new
0;JMP
(RETURN-153)
//Pop
@POP_R811
D=A
@R14
M=D
//S
@Screen.0
D=A
@POP
0;JMP
(POP_R811)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R812
D=A
@ADD
0;JMP
(ADD_R812)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R813
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R813)
//Pop point
@POP_R814
D=A
@THT
0;JMP
(POP_R814)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R815
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R815)
(Screen.initWHILE_EXP0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n816
D=A
@LT
0;JMP
(n816)
//NOT
@SP
A=M-1
M=!M
//if
@IF817
D=A
@IF
0;JMP
(IF817)
@Screen.initWHILE_END0
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R818
D=A
@ADD
0;JMP
(ADD_R818)
//Pop
@POP_R819
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R819)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R820
D=A
@ADD
0;JMP
(ADD_R820)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R821
D=A
@SUB
0;JMP
(SUB_R821)
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R822
D=A
@ADD
0;JMP
(ADD_R822)
//Pop point
@POP_R823
D=A
@THT
0;JMP
(POP_R823)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R824
D=A
@SUB
0;JMP
(SUB_R824)
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R825
D=A
@ADD
0;JMP
(ADD_R825)
//Pop point
@POP_R826
D=A
@THT
0;JMP
(POP_R826)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R827
D=A
@ADD
0;JMP
(ADD_R827)
//Pop
@POP_R828
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R828)
//Pop point
@POP_R829
D=A
@THT
0;JMP
(POP_R829)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R830
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R830)
//goto
@Screen.initWHILE_EXP0
0;JMP
(Screen.initWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.clearScreen)
@1
D=A
@R14
M=D
@F831
D;JEQ
D=A
@FUNCT
0;JMP
(F831)
(Screen.clearScreenWHILE_EXP0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@8192
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n832
D=A
@LT
0;JMP
(n832)
//NOT
@SP
A=M-1
M=!M
//if
@IF833
D=A
@IF
0;JMP
(IF833)
@Screen.clearScreenWHILE_END0
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R834
D=A
@ADD
0;JMP
(ADD_R834)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R835
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R835)
//Pop point
@POP_R836
D=A
@THT
0;JMP
(POP_R836)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R837
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R837)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R838
D=A
@ADD
0;JMP
(ADD_R838)
//Pop
@POP_R839
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R839)
//goto
@Screen.clearScreenWHILE_EXP0
0;JMP
(Screen.clearScreenWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.updateLocation)
@0
D=A
@R14
M=D
@F840
D;JEQ
D=A
@FUNCT
0;JMP
(F840)
//Push S
@Screen.2
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF841
D=A
@IF
0;JMP
(IF841)
@Screen.updateLocationIF_TRUE0
D;JNE
//goto
@Screen.updateLocationIF_FALSE0
0;JMP
(Screen.updateLocationIF_TRUE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R842
D=A
@ADD
0;JMP
(ADD_R842)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R843
D=A
@ADD
0;JMP
(ADD_R843)
//Pop point
@POP_R844
D=A
@THT
0;JMP
(POP_R844)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//OR
@OR_R845
D=A
@OR
0;JMP
(OR_R845)
//Pop
@POP_R846
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R846)
//Pop point
@POP_R847
D=A
@THT
0;JMP
(POP_R847)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R848
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R848)
//goto
@Screen.updateLocationIF_END0
0;JMP
(Screen.updateLocationIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R849
D=A
@ADD
0;JMP
(ADD_R849)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R850
D=A
@ADD
0;JMP
(ADD_R850)
//Pop point
@POP_R851
D=A
@THT
0;JMP
(POP_R851)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//AND
@AND_R852
D=A
@AND
0;JMP
(AND_R852)
//Pop
@POP_R853
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R853)
//Pop point
@POP_R854
D=A
@THT
0;JMP
(POP_R854)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R855
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R855)
(Screen.updateLocationIF_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.setColor)
@0
D=A
@R14
M=D
@F856
D;JEQ
D=A
@FUNCT
0;JMP
(F856)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R857
D=A
@R14
M=D
//S
@Screen.2
D=A
@POP
0;JMP
(POP_R857)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.drawPixel)
@3
D=A
@R14
M=D
@F858
D;JEQ
D=A
@FUNCT
0;JMP
(F858)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n859
D=A
@LT
0;JMP
(n859)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n860
D=A
@GT
0;JMP
(n860)
//OR
@OR_R861
D=A
@OR
0;JMP
(OR_R861)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n862
D=A
@LT
0;JMP
(n862)
//OR
@OR_R863
D=A
@OR
0;JMP
(OR_R863)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@255
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n864
D=A
@GT
0;JMP
(n864)
//OR
@OR_R865
D=A
@OR
0;JMP
(OR_R865)
//if
@IF866
D=A
@IF
0;JMP
(IF866)
@Screen.drawPixelIF_TRUE0
D;JNE
//goto
@Screen.drawPixelIF_FALSE0
0;JMP
(Screen.drawPixelIF_TRUE0)
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-154
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-154)
//Pop
@POP_R867
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R867)
(Screen.drawPixelIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-155
D=A
@R13
M=D
@call_Math.divide
0;JMP
(RETURN-155)
//Pop
@POP_R868
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R868)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-156
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-156)
//SUB
@SUB_R869
D=A
@SUB
0;JMP
(SUB_R869)
//Pop
@POP_R870
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R870)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-157
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-157)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R871
D=A
@ADD
0;JMP
(ADD_R871)
//Pop
@POP_R872
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R872)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R873
D=A
@ADD
0;JMP
(ADD_R873)
//Pop point
@POP_R874
D=A
@THT
0;JMP
(POP_R874)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN875
D=A
@R13
M=D
(call_Screen.updateLocation)
@Screen.updateLocation
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN875)
//Pop
@POP_R876
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R876)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.drawConditional)
@0
D=A
@R14
M=D
@F877
D;JEQ
D=A
@FUNCT
0;JMP
(F877)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF878
D=A
@IF
0;JMP
(IF878)
@Screen.drawConditionalIF_TRUE0
D;JNE
//goto
@Screen.drawConditionalIF_FALSE0
0;JMP
(Screen.drawConditionalIF_TRUE0)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN879
D=A
@R13
M=D
(call_Screen.drawPixel)
@Screen.drawPixel
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN879)
//Pop
@POP_R880
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R880)
//goto
@Screen.drawConditionalIF_END0
0;JMP
(Screen.drawConditionalIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-158
D=A
@R13
M=D
@call_Screen.drawPixel
0;JMP
(RETURN-158)
//Pop
@POP_R881
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R881)
(Screen.drawConditionalIF_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.drawLine)
@11
D=A
@R14
M=D
@F882
D;JEQ
D=A
@FUNCT
0;JMP
(F882)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n883
D=A
@LT
0;JMP
(n883)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n884
D=A
@GT
0;JMP
(n884)
//OR
@OR_R885
D=A
@OR
0;JMP
(OR_R885)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n886
D=A
@LT
0;JMP
(n886)
//OR
@OR_R887
D=A
@OR
0;JMP
(OR_R887)
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@255
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n888
D=A
@GT
0;JMP
(n888)
//OR
@OR_R889
D=A
@OR
0;JMP
(OR_R889)
//if
@IF890
D=A
@IF
0;JMP
(IF890)
@Screen.drawLineIF_TRUE0
D;JNE
//goto
@Screen.drawLineIF_FALSE0
0;JMP
(Screen.drawLineIF_TRUE0)
//Push C
@8
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-159
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-159)
//Pop
@POP_R891
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R891)
(Screen.drawLineIF_FALSE0)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R892
D=A
@SUB
0;JMP
(SUB_R892)
@RETURN-160
D=A
@R13
M=D
@call_Math.abs
0;JMP
(RETURN-160)
//Pop
@POP_R893
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R893)
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R894
D=A
@SUB
0;JMP
(SUB_R894)
@RETURN-161
D=A
@R13
M=D
@call_Math.abs
0;JMP
(RETURN-161)
//Pop
@POP_R895
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R895)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n896
D=A
@LT
0;JMP
(n896)
//Pop
@POP_R897
D=A
@R14
M=D
//L
@6
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R897)
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n898
D=A
@LT
0;JMP
(n898)
//AND
@AND_R899
D=A
@AND
0;JMP
(AND_R899)
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n900
D=A
@LT
0;JMP
(n900)
//AND
@AND_R901
D=A
@AND
0;JMP
(AND_R901)
//OR
@OR_R902
D=A
@OR
0;JMP
(OR_R902)
//if
@IF903
D=A
@IF
0;JMP
(IF903)
@Screen.drawLineIF_TRUE1
D;JNE
//goto
@Screen.drawLineIF_FALSE1
0;JMP
(Screen.drawLineIF_TRUE1)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R904
D=A
@R14
M=D
//L
@4
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R904)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R905
D=A
@R14
M=D
//A
@0
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R905)
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R906
D=A
@R14
M=D
//A
@2
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R906)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R907
D=A
@R14
M=D
//L
@4
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R907)
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R908
D=A
@R14
M=D
//A
@1
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R908)
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R909
D=A
@R14
M=D
//A
@3
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R909)
(Screen.drawLineIF_FALSE1)
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF910
D=A
@IF
0;JMP
(IF910)
@Screen.drawLineIF_TRUE2
D;JNE
//goto
@Screen.drawLineIF_FALSE2
0;JMP
(Screen.drawLineIF_TRUE2)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R911
D=A
@R14
M=D
//L
@4
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R911)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R912
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R912)
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R913
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R913)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R914
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R914)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R915
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R915)
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R916
D=A
@R14
M=D
//L
@8
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R916)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n917
D=A
@GT
0;JMP
(n917)
//Pop
@POP_R918
D=A
@R14
M=D
//L
@7
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R918)
//goto
@Screen.drawLineIF_END2
0;JMP
(Screen.drawLineIF_FALSE2)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R919
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R919)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R920
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R920)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R921
D=A
@R14
M=D
//L
@8
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R921)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n922
D=A
@GT
0;JMP
(n922)
//Pop
@POP_R923
D=A
@R14
M=D
//L
@7
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R923)
(Screen.drawLineIF_END2)
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-162
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-162)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R924
D=A
@SUB
0;JMP
(SUB_R924)
//Pop
@POP_R925
D=A
@R14
M=D
//L
@5
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R925)
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-163
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-163)
//Pop
@POP_R926
D=A
@R14
M=D
//L
@9
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R926)
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R927
D=A
@SUB
0;JMP
(SUB_R927)
@RETURN-164
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-164)
//Pop
@POP_R928
D=A
@R14
M=D
//L
@10
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R928)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN929
D=A
@R13
M=D
(call_Screen.drawConditional)
@Screen.drawConditional
D=A
@R14
M=D
@3
D=A
@CALL
0;JMP
(RETURN929)
//Pop
@POP_R930
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R930)
(Screen.drawLineWHILE_EXP0)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@8
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n931
D=A
@LT
0;JMP
(n931)
//NOT
@SP
A=M-1
M=!M
//if
@IF932
D=A
@IF
0;JMP
(IF932)
@Screen.drawLineWHILE_END0
D;JNE
//Push L
@5
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n933
D=A
@LT
0;JMP
(n933)
//if
@IF934
D=A
@IF
0;JMP
(IF934)
@Screen.drawLineIF_TRUE3
D;JNE
//goto
@Screen.drawLineIF_FALSE3
0;JMP
(Screen.drawLineIF_TRUE3)
//Push L
@5
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@9
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R935
D=A
@ADD
0;JMP
(ADD_R935)
//Pop
@POP_R936
D=A
@R14
M=D
//L
@5
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R936)
//goto
@Screen.drawLineIF_END3
0;JMP
(Screen.drawLineIF_FALSE3)
//Push L
@5
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@10
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R937
D=A
@ADD
0;JMP
(ADD_R937)
//Pop
@POP_R938
D=A
@R14
M=D
//L
@5
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R938)
//Push L
@7
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//if
@IF939
D=A
@IF
0;JMP
(IF939)
@Screen.drawLineIF_TRUE4
D;JNE
//goto
@Screen.drawLineIF_FALSE4
0;JMP
(Screen.drawLineIF_TRUE4)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R940
D=A
@SUB
0;JMP
(SUB_R940)
//Pop
@POP_R941
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R941)
//goto
@Screen.drawLineIF_END4
0;JMP
(Screen.drawLineIF_FALSE4)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R942
D=A
@ADD
0;JMP
(ADD_R942)
//Pop
@POP_R943
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R943)
(Screen.drawLineIF_END4)
(Screen.drawLineIF_END3)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R944
D=A
@ADD
0;JMP
(ADD_R944)
//Pop
@POP_R945
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R945)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-165
D=A
@R13
M=D
@call_Screen.drawConditional
0;JMP
(RETURN-165)
//Pop
@POP_R946
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R946)
//goto
@Screen.drawLineWHILE_EXP0
0;JMP
(Screen.drawLineWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.drawRectangle)
@9
D=A
@R14
M=D
@F947
D;JEQ
D=A
@FUNCT
0;JMP
(F947)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n948
D=A
@GT
0;JMP
(n948)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n949
D=A
@GT
0;JMP
(n949)
//OR
@OR_R950
D=A
@OR
0;JMP
(OR_R950)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n951
D=A
@LT
0;JMP
(n951)
//OR
@OR_R952
D=A
@OR
0;JMP
(OR_R952)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n953
D=A
@GT
0;JMP
(n953)
//OR
@OR_R954
D=A
@OR
0;JMP
(OR_R954)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n955
D=A
@LT
0;JMP
(n955)
//OR
@OR_R956
D=A
@OR
0;JMP
(OR_R956)
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@255
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n957
D=A
@GT
0;JMP
(n957)
//OR
@OR_R958
D=A
@OR
0;JMP
(OR_R958)
//if
@IF959
D=A
@IF
0;JMP
(IF959)
@Screen.drawRectangleIF_TRUE0
D;JNE
//goto
@Screen.drawRectangleIF_FALSE0
0;JMP
(Screen.drawRectangleIF_TRUE0)
//Push C
@9
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-166
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-166)
//Pop
@POP_R960
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R960)
(Screen.drawRectangleIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-167
D=A
@R13
M=D
@call_Math.divide
0;JMP
(RETURN-167)
//Pop
@POP_R961
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R961)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-168
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-168)
//SUB
@SUB_R962
D=A
@SUB
0;JMP
(SUB_R962)
//Pop
@POP_R963
D=A
@R14
M=D
//L
@7
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R963)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-169
D=A
@R13
M=D
@call_Math.divide
0;JMP
(RETURN-169)
//Pop
@POP_R964
D=A
@R14
M=D
//L
@4
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R964)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-170
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-170)
//SUB
@SUB_R965
D=A
@SUB
0;JMP
(SUB_R965)
//Pop
@POP_R966
D=A
@R14
M=D
//L
@8
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R966)
//Push L
@7
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R967
D=A
@ADD
0;JMP
(ADD_R967)
//Pop point
@POP_R968
D=A
@THT
0;JMP
(POP_R968)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R969
D=A
@SUB
0;JMP
(SUB_R969)
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R970
D=A
@R14
M=D
//L
@6
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R970)
//Push L
@8
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R971
D=A
@ADD
0;JMP
(ADD_R971)
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R972
D=A
@ADD
0;JMP
(ADD_R972)
//Pop point
@POP_R973
D=A
@THT
0;JMP
(POP_R973)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R974
D=A
@SUB
0;JMP
(SUB_R974)
//Pop
@POP_R975
D=A
@R14
M=D
//L
@5
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R975)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-171
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-171)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R976
D=A
@ADD
0;JMP
(ADD_R976)
//Pop
@POP_R977
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R977)
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R978
D=A
@SUB
0;JMP
(SUB_R978)
//Pop
@POP_R979
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R979)
(Screen.drawRectangleWHILE_EXP0)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n980
D=A
@GT
0;JMP
(n980)
//NOT
@SP
A=M-1
M=!M
//NOT
@SP
A=M-1
M=!M
//if
@IF981
D=A
@IF
0;JMP
(IF981)
@Screen.drawRectangleWHILE_END0
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R982
D=A
@ADD
0;JMP
(ADD_R982)
//Pop
@POP_R983
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R983)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n984
D=A
@EQ
0;JMP
(n984)
//if
@IF985
D=A
@IF
0;JMP
(IF985)
@Screen.drawRectangleIF_TRUE1
D;JNE
//goto
@Screen.drawRectangleIF_FALSE1
0;JMP
(Screen.drawRectangleIF_TRUE1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@5
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//AND
@AND_R986
D=A
@AND
0;JMP
(AND_R986)
@RETURN-172
D=A
@R13
M=D
@call_Screen.updateLocation
0;JMP
(RETURN-172)
//Pop
@POP_R987
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R987)
//goto
@Screen.drawRectangleIF_END1
0;JMP
(Screen.drawRectangleIF_FALSE1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-173
D=A
@R13
M=D
@call_Screen.updateLocation
0;JMP
(RETURN-173)
//Pop
@POP_R988
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R988)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R989
D=A
@ADD
0;JMP
(ADD_R989)
//Pop
@POP_R990
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R990)
(Screen.drawRectangleWHILE_EXP1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n991
D=A
@LT
0;JMP
(n991)
//NOT
@SP
A=M-1
M=!M
//if
@IF992
D=A
@IF
0;JMP
(IF992)
@Screen.drawRectangleWHILE_END1
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
@RETURN-174
D=A
@R13
M=D
@call_Screen.updateLocation
0;JMP
(RETURN-174)
//Pop
@POP_R993
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R993)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R994
D=A
@ADD
0;JMP
(ADD_R994)
//Pop
@POP_R995
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R995)
//goto
@Screen.drawRectangleWHILE_EXP1
0;JMP
(Screen.drawRectangleWHILE_END1)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@5
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-175
D=A
@R13
M=D
@call_Screen.updateLocation
0;JMP
(RETURN-175)
//Pop
@POP_R996
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R996)
(Screen.drawRectangleIF_END1)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R997
D=A
@ADD
0;JMP
(ADD_R997)
//Pop
@POP_R998
D=A
@R14
M=D
//A
@1
D=A
@ARG
D=D+M
@POP
0;JMP
(POP_R998)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R999
D=A
@ADD
0;JMP
(ADD_R999)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1000
D=A
@SUB
0;JMP
(SUB_R1000)
//Pop
@POP_R1001
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1001)
//goto
@Screen.drawRectangleWHILE_EXP0
0;JMP
(Screen.drawRectangleWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.drawHorizontal)
@11
D=A
@R14
M=D
@F1002
D;JEQ
D=A
@FUNCT
0;JMP
(F1002)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN1003
D=A
@R13
M=D
(call_Math.min)
@Math.min
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN1003)
//Pop
@POP_R1004
D=A
@R14
M=D
//L
@7
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1004)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN1005
D=A
@R13
M=D
(call_Math.max)
@Math.max
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN1005)
//Pop
@POP_R1006
D=A
@R14
M=D
//L
@8
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1006)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//GT
@n1007
D=A
@GT
0;JMP
(n1007)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@256
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n1008
D=A
@LT
0;JMP
(n1008)
//AND
@AND_R1009
D=A
@AND
0;JMP
(AND_R1009)
//Push L
@7
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@512
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n1010
D=A
@LT
0;JMP
(n1010)
//AND
@AND_R1011
D=A
@AND
0;JMP
(AND_R1011)
//Push L
@8
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
//GT
@n1012
D=A
@GT
0;JMP
(n1012)
//AND
@AND_R1013
D=A
@AND
0;JMP
(AND_R1013)
//if
@IF1014
D=A
@IF
0;JMP
(IF1014)
@Screen.drawHorizontalIF_TRUE0
D;JNE
//goto
@Screen.drawHorizontalIF_FALSE0
0;JMP
(Screen.drawHorizontalIF_TRUE0)
//Push L
@7
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-176
D=A
@R13
M=D
@call_Math.max
0;JMP
(RETURN-176)
//Pop
@POP_R1015
D=A
@R14
M=D
//L
@7
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1015)
//Push L
@8
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-177
D=A
@R13
M=D
@call_Math.min
0;JMP
(RETURN-177)
//Pop
@POP_R1016
D=A
@R14
M=D
//L
@8
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1016)
//Push L
@7
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-178
D=A
@R13
M=D
@call_Math.divide
0;JMP
(RETURN-178)
//Pop
@POP_R1017
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1017)
//Push L
@7
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-179
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-179)
//SUB
@SUB_R1018
D=A
@SUB
0;JMP
(SUB_R1018)
//Pop
@POP_R1019
D=A
@R14
M=D
//L
@9
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1019)
//Push L
@8
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-180
D=A
@R13
M=D
@call_Math.divide
0;JMP
(RETURN-180)
//Pop
@POP_R1020
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1020)
//Push L
@8
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@16
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-181
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-181)
//SUB
@SUB_R1021
D=A
@SUB
0;JMP
(SUB_R1021)
//Pop
@POP_R1022
D=A
@R14
M=D
//L
@10
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1022)
//Push L
@9
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1023
D=A
@ADD
0;JMP
(ADD_R1023)
//Pop point
@POP_R1024
D=A
@THT
0;JMP
(POP_R1024)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1025
D=A
@SUB
0;JMP
(SUB_R1025)
//NOT
@SP
A=M-1
M=!M
//Pop
@POP_R1026
D=A
@R14
M=D
//L
@5
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1026)
//Push L
@10
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1027
D=A
@ADD
0;JMP
(ADD_R1027)
//Push S
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1028
D=A
@ADD
0;JMP
(ADD_R1028)
//Pop point
@POP_R1029
D=A
@THT
0;JMP
(POP_R1029)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1030
D=A
@SUB
0;JMP
(SUB_R1030)
//Pop
@POP_R1031
D=A
@R14
M=D
//L
@4
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1031)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-182
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-182)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1032
D=A
@ADD
0;JMP
(ADD_R1032)
//Pop
@POP_R1033
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1033)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1034
D=A
@SUB
0;JMP
(SUB_R1034)
//Pop
@POP_R1035
D=A
@R14
M=D
//L
@6
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1035)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1036
D=A
@ADD
0;JMP
(ADD_R1036)
//Pop
@POP_R1037
D=A
@R14
M=D
//L
@3
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1037)
//Push L
@6
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1038
D=A
@EQ
0;JMP
(n1038)
//if
@IF1039
D=A
@IF
0;JMP
(IF1039)
@Screen.drawHorizontalIF_TRUE1
D;JNE
//goto
@Screen.drawHorizontalIF_FALSE1
0;JMP
(Screen.drawHorizontalIF_TRUE1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@5
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//AND
@AND_R1040
D=A
@AND
0;JMP
(AND_R1040)
@RETURN-183
D=A
@R13
M=D
@call_Screen.updateLocation
0;JMP
(RETURN-183)
//Pop
@POP_R1041
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1041)
//goto
@Screen.drawHorizontalIF_END1
0;JMP
(Screen.drawHorizontalIF_FALSE1)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@5
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-184
D=A
@R13
M=D
@call_Screen.updateLocation
0;JMP
(RETURN-184)
//Pop
@POP_R1042
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1042)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1043
D=A
@ADD
0;JMP
(ADD_R1043)
//Pop
@POP_R1044
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1044)
(Screen.drawHorizontalWHILE_EXP0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n1045
D=A
@LT
0;JMP
(n1045)
//NOT
@SP
A=M-1
M=!M
//if
@IF1046
D=A
@IF
0;JMP
(IF1046)
@Screen.drawHorizontalWHILE_END0
D;JNE
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//NEG
@SP
A=M-1
M=-M
@RETURN-185
D=A
@R13
M=D
@call_Screen.updateLocation
0;JMP
(RETURN-185)
//Pop
@POP_R1047
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1047)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1048
D=A
@ADD
0;JMP
(ADD_R1048)
//Pop
@POP_R1049
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1049)
//goto
@Screen.drawHorizontalWHILE_EXP0
0;JMP
(Screen.drawHorizontalWHILE_END0)
//Push L
@3
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@4
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-186
D=A
@R13
M=D
@call_Screen.updateLocation
0;JMP
(RETURN-186)
//Pop
@POP_R1050
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1050)
(Screen.drawHorizontalIF_END1)
(Screen.drawHorizontalIF_FALSE0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.drawSymetric)
@0
D=A
@R14
M=D
@F1051
D;JEQ
D=A
@FUNCT
0;JMP
(F1051)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1052
D=A
@SUB
0;JMP
(SUB_R1052)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1053
D=A
@ADD
0;JMP
(ADD_R1053)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1054
D=A
@SUB
0;JMP
(SUB_R1054)
//call
@RETURN1055
D=A
@R13
M=D
(call_Screen.drawHorizontal)
@Screen.drawHorizontal
D=A
@R14
M=D
@3
D=A
@CALL
0;JMP
(RETURN1055)
//Pop
@POP_R1056
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1056)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1057
D=A
@ADD
0;JMP
(ADD_R1057)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1058
D=A
@ADD
0;JMP
(ADD_R1058)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1059
D=A
@SUB
0;JMP
(SUB_R1059)
@RETURN-187
D=A
@R13
M=D
@call_Screen.drawHorizontal
0;JMP
(RETURN-187)
//Pop
@POP_R1060
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1060)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1061
D=A
@SUB
0;JMP
(SUB_R1061)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1062
D=A
@SUB
0;JMP
(SUB_R1062)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1063
D=A
@ADD
0;JMP
(ADD_R1063)
@RETURN-188
D=A
@R13
M=D
@call_Screen.drawHorizontal
0;JMP
(RETURN-188)
//Pop
@POP_R1064
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1064)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1065
D=A
@ADD
0;JMP
(ADD_R1065)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1066
D=A
@SUB
0;JMP
(SUB_R1066)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1067
D=A
@ADD
0;JMP
(ADD_R1067)
@RETURN-189
D=A
@R13
M=D
@call_Screen.drawHorizontal
0;JMP
(RETURN-189)
//Pop
@POP_R1068
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1068)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Screen.drawCircle)
@3
D=A
@R14
M=D
@F1069
D;JEQ
D=A
@FUNCT
0;JMP
(F1069)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n1070
D=A
@LT
0;JMP
(n1070)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n1071
D=A
@GT
0;JMP
(n1071)
//OR
@OR_R1072
D=A
@OR
0;JMP
(OR_R1072)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n1073
D=A
@LT
0;JMP
(n1073)
//OR
@OR_R1074
D=A
@OR
0;JMP
(OR_R1074)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@255
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n1075
D=A
@GT
0;JMP
(n1075)
//OR
@OR_R1076
D=A
@OR
0;JMP
(OR_R1076)
//if
@IF1077
D=A
@IF
0;JMP
(IF1077)
@Screen.drawCircleIF_TRUE0
D;JNE
//goto
@Screen.drawCircleIF_FALSE0
0;JMP
(Screen.drawCircleIF_TRUE0)
//Push C
@12
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-190
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-190)
//Pop
@POP_R1078
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1078)
(Screen.drawCircleIF_FALSE0)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1079
D=A
@SUB
0;JMP
(SUB_R1079)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n1080
D=A
@LT
0;JMP
(n1080)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1081
D=A
@ADD
0;JMP
(ADD_R1081)
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n1082
D=A
@GT
0;JMP
(n1082)
//OR
@OR_R1083
D=A
@OR
0;JMP
(OR_R1083)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1084
D=A
@SUB
0;JMP
(SUB_R1084)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n1085
D=A
@LT
0;JMP
(n1085)
//OR
@OR_R1086
D=A
@OR
0;JMP
(OR_R1086)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1087
D=A
@ADD
0;JMP
(ADD_R1087)
//Push C
@255
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n1088
D=A
@GT
0;JMP
(n1088)
//OR
@OR_R1089
D=A
@OR
0;JMP
(OR_R1089)
//if
@IF1090
D=A
@IF
0;JMP
(IF1090)
@Screen.drawCircleIF_TRUE1
D;JNE
//goto
@Screen.drawCircleIF_FALSE1
0;JMP
(Screen.drawCircleIF_TRUE1)
//Push C
@13
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-191
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-191)
//Pop
@POP_R1091
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1091)
(Screen.drawCircleIF_FALSE1)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1092
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1092)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1093
D=A
@SUB
0;JMP
(SUB_R1093)
//Pop
@POP_R1094
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1094)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN1095
D=A
@R13
M=D
(call_Screen.drawSymetric)
@Screen.drawSymetric
D=A
@R14
M=D
@4
D=A
@CALL
0;JMP
(RETURN1095)
//Pop
@POP_R1096
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1096)
(Screen.drawCircleWHILE_EXP0)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n1097
D=A
@GT
0;JMP
(n1097)
//NOT
@SP
A=M-1
M=!M
//if
@IF1098
D=A
@IF
0;JMP
(IF1098)
@Screen.drawCircleWHILE_END0
D;JNE
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n1099
D=A
@LT
0;JMP
(n1099)
//if
@IF1100
D=A
@IF
0;JMP
(IF1100)
@Screen.drawCircleIF_TRUE2
D;JNE
//goto
@Screen.drawCircleIF_FALSE2
0;JMP
(Screen.drawCircleIF_TRUE2)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-192
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-192)
//ADD
@ADD_R1101
D=A
@ADD
0;JMP
(ADD_R1101)
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1102
D=A
@ADD
0;JMP
(ADD_R1102)
//Pop
@POP_R1103
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1103)
//goto
@Screen.drawCircleIF_END2
0;JMP
(Screen.drawCircleIF_FALSE2)
//Push L
@2
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1104
D=A
@SUB
0;JMP
(SUB_R1104)
@RETURN-193
D=A
@R13
M=D
@call_Math.multiply
0;JMP
(RETURN-193)
//ADD
@ADD_R1105
D=A
@ADD
0;JMP
(ADD_R1105)
//Push C
@5
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1106
D=A
@ADD
0;JMP
(ADD_R1106)
//Pop
@POP_R1107
D=A
@R14
M=D
//L
@2
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1107)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1108
D=A
@SUB
0;JMP
(SUB_R1108)
//Pop
@POP_R1109
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1109)
(Screen.drawCircleIF_END2)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1110
D=A
@ADD
0;JMP
(ADD_R1110)
//Pop
@POP_R1111
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1111)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-194
D=A
@R13
M=D
@call_Screen.drawSymetric
0;JMP
(RETURN-194)
//Pop
@POP_R1112
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1112)
//goto
@Screen.drawCircleWHILE_EXP0
0;JMP
(Screen.drawCircleWHILE_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Cannon.new)
@0
D=A
@R14
M=D
@F1113
D;JEQ
D=A
@FUNCT
0;JMP
(F1113)
//Push C
@5
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-195
D=A
@R13
M=D
@call_Memory.alloc
0;JMP
(RETURN-195)
//Pop point
@POP_R1114
D=A
@THS
0;JMP
(POP_R1114)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1115
D=A
@R14
M=D
//THS
@0
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1115)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1116
D=A
@R14
M=D
//THS
@1
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1116)
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1117
D=A
@R14
M=D
//THS
@2
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1117)
//Push A
@3
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1118
D=A
@R14
M=D
//THS
@3
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1118)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-196
D=A
@R13
M=D
@call_Math.divide
0;JMP
(RETURN-196)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1119
D=A
@ADD
0;JMP
(ADD_R1119)
//Pop
@POP_R1120
D=A
@R14
M=D
//THS
@4
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1120)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN1121
D=A
@R13
M=D
(call_Cannon.show)
@Cannon.show
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN1121)
//Pop
@POP_R1122
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1122)
//Push THS
@4
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1123
D=A
@SUB
0;JMP
(SUB_R1123)
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1124
D=A
@SUB
0;JMP
(SUB_R1124)
//Push THS
@4
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1125
D=A
@ADD
0;JMP
(ADD_R1125)
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-197
D=A
@R13
M=D
@call_Screen.drawRectangle
0;JMP
(RETURN-197)
//Pop
@POP_R1126
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1126)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Cannon.dispose)
@0
D=A
@R14
M=D
@F1127
D;JEQ
D=A
@FUNCT
0;JMP
(F1127)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R1128
D=A
@THS
0;JMP
(POP_R1128)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-198
D=A
@R13
M=D
@call_Memory.deAlloc
0;JMP
(RETURN-198)
//Pop
@POP_R1129
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1129)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Cannon.show)
@0
D=A
@R14
M=D
@F1130
D;JEQ
D=A
@FUNCT
0;JMP
(F1130)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R1131
D=A
@THS
0;JMP
(POP_R1131)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
@RETURN-199
D=A
@R13
M=D
@call_Screen.setColor
0;JMP
(RETURN-199)
//Pop
@POP_R1132
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1132)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN1133
D=A
@R13
M=D
(call_Cannon.draw)
@Cannon.draw
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN1133)
//Pop
@POP_R1134
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1134)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Cannon.draw)
@0
D=A
@R14
M=D
@F1135
D;JEQ
D=A
@FUNCT
0;JMP
(F1135)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R1136
D=A
@THS
0;JMP
(POP_R1136)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1137
D=A
@ADD
0;JMP
(ADD_R1137)
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@3
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1138
D=A
@ADD
0;JMP
(ADD_R1138)
@RETURN-200
D=A
@R13
M=D
@call_Screen.drawRectangle
0;JMP
(RETURN-200)
//Pop
@POP_R1139
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1139)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Cannon.move)
@0
D=A
@R14
M=D
@F1140
D;JEQ
D=A
@FUNCT
0;JMP
(F1140)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R1141
D=A
@THS
0;JMP
(POP_R1141)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-201
D=A
@R13
M=D
@call_Screen.setColor
0;JMP
(RETURN-201)
//Pop
@POP_R1142
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1142)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1143
D=A
@SUB
0;JMP
(SUB_R1143)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1144
D=A
@ADD
0;JMP
(ADD_R1144)
//Push THS
@3
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1145
D=A
@ADD
0;JMP
(ADD_R1145)
@RETURN-202
D=A
@R13
M=D
@call_Screen.drawRectangle
0;JMP
(RETURN-202)
//Pop
@POP_R1146
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1146)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
@RETURN-203
D=A
@R13
M=D
@call_Screen.setColor
0;JMP
(RETURN-203)
//Pop
@POP_R1147
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1147)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@130
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1148
D=A
@EQ
0;JMP
(n1148)
//if
@IF1149
D=A
@IF
0;JMP
(IF1149)
@Cannon.moveLEFT
D;JNE
//Push THS
@4
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@4
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1150
D=A
@ADD
0;JMP
(ADD_R1150)
//Pop
@POP_R1151
D=A
@R14
M=D
//THS
@4
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1151)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@4
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1152
D=A
@ADD
0;JMP
(ADD_R1152)
//Pop
@POP_R1153
D=A
@R14
M=D
//THS
@0
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1153)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1154
D=A
@SUB
0;JMP
(SUB_R1154)
//LT
@n1155
D=A
@LT
0;JMP
(n1155)
//if
@IF1156
D=A
@IF
0;JMP
(IF1156)
@Cannon.moveTRUE_0
D;JNE
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1157
D=A
@SUB
0;JMP
(SUB_R1157)
//Pop
@POP_R1158
D=A
@R14
M=D
//THS
@0
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1158)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-204
D=A
@R13
M=D
@call_Math.divide
0;JMP
(RETURN-204)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1159
D=A
@ADD
0;JMP
(ADD_R1159)
//Pop
@POP_R1160
D=A
@R14
M=D
//THS
@4
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1160)
(Cannon.moveTRUE_0)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1161
D=A
@ADD
0;JMP
(ADD_R1161)
//Push THS
@3
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1162
D=A
@ADD
0;JMP
(ADD_R1162)
@RETURN-205
D=A
@R13
M=D
@call_Screen.drawRectangle
0;JMP
(RETURN-205)
//Pop
@POP_R1163
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1163)
//goto
@Cannon.moveEND0
0;JMP
(Cannon.moveLEFT)
//Push THS
@4
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@4
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1164
D=A
@SUB
0;JMP
(SUB_R1164)
//Pop
@POP_R1165
D=A
@R14
M=D
//THS
@4
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1165)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@4
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1166
D=A
@SUB
0;JMP
(SUB_R1166)
//Pop
@POP_R1167
D=A
@R14
M=D
//THS
@0
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1167)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n1168
D=A
@GT
0;JMP
(n1168)
//if
@IF1169
D=A
@IF
0;JMP
(IF1169)
@Cannon.moveTRUE_1
D;JNE
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1170
D=A
@R14
M=D
//THS
@0
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1170)
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-206
D=A
@R13
M=D
@call_Math.divide
0;JMP
(RETURN-206)
//Pop
@POP_R1171
D=A
@R14
M=D
//THS
@4
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1171)
(Cannon.moveTRUE_1)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@2
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1172
D=A
@ADD
0;JMP
(ADD_R1172)
//Push THS
@3
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1173
D=A
@ADD
0;JMP
(ADD_R1173)
@RETURN-207
D=A
@R13
M=D
@call_Screen.drawRectangle
0;JMP
(RETURN-207)
//Pop
@POP_R1174
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1174)
(Cannon.moveEND0)
//Push THS
@4
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1175
D=A
@SUB
0;JMP
(SUB_R1175)
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1176
D=A
@SUB
0;JMP
(SUB_R1176)
//Push THS
@4
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1177
D=A
@ADD
0;JMP
(ADD_R1177)
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-208
D=A
@R13
M=D
@call_Screen.drawRectangle
0;JMP
(RETURN-208)
//Pop
@POP_R1178
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1178)
@RETURNS
0;JMP
//funct
(Cannon.shoot)
@1
D=A
@R14
M=D
@F1179
D;JEQ
D=A
@FUNCT
0;JMP
(F1179)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R1180
D=A
@THS
0;JMP
(POP_R1180)
//Push THS
@4
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1181
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1181)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-209
D=A
@R13
M=D
@call_Memory.alloc
0;JMP
(RETURN-209)
//Pop point
@POP_R1182
D=A
@THT
0;JMP
(POP_R1182)
//Push THS
@1
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@13
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1183
D=A
@SUB
0;JMP
(SUB_R1183)
//Pop
@POP_R1184
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1184)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1185
D=A
@SUB
0;JMP
(SUB_R1185)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1186
D=A
@ADD
0;JMP
(ADD_R1186)
//call
@RETURN1187
D=A
@R13
M=D
(call_Screen.drawLine)
@Screen.drawLine
D=A
@R14
M=D
@4
D=A
@CALL
0;JMP
(RETURN1187)
//Pop
@POP_R1188
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1188)
//Push Point2
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Cannon.moveShot)
@1
D=A
@R14
M=D
@F1189
D;JEQ
D=A
@FUNCT
0;JMP
(F1189)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R1190
D=A
@THS
0;JMP
(POP_R1190)
//Push THS
@4
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1191
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1191)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R1192
D=A
@THT
0;JMP
(POP_R1192)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-210
D=A
@R13
M=D
@call_Screen.setColor
0;JMP
(RETURN-210)
//Pop
@POP_R1193
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1193)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1194
D=A
@ADD
0;JMP
(ADD_R1194)
@RETURN-211
D=A
@R13
M=D
@call_Screen.drawLine
0;JMP
(RETURN-211)
//Pop
@POP_R1195
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1195)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//NOT
@SP
A=M-1
M=!M
@RETURN-212
D=A
@R13
M=D
@call_Screen.setColor
0;JMP
(RETURN-212)
//Pop
@POP_R1196
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1196)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1197
D=A
@SUB
0;JMP
(SUB_R1197)
//Pop
@POP_R1198
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1198)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n1199
D=A
@GT
0;JMP
(n1199)
//if
@IF1200
D=A
@IF
0;JMP
(IF1200)
@Cannon.moveShotCONTINUE
D;JNE
//Push Point2
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-213
D=A
@R13
M=D
@call_Memory.deAlloc
0;JMP
(RETURN-213)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//goto
@Cannon.moveShotEND1
0;JMP
(Cannon.moveShotCONTINUE)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1201
D=A
@ADD
0;JMP
(ADD_R1201)
@RETURN-214
D=A
@R13
M=D
@call_Screen.drawLine
0;JMP
(RETURN-214)
//Pop
@POP_R1202
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1202)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
(Cannon.moveShotEND1)
@RETURNS
0;JMP
//funct
(Cannon.shotDispose)
@0
D=A
@R14
M=D
@F1203
D;JEQ
D=A
@FUNCT
0;JMP
(F1203)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-215
D=A
@R13
M=D
@call_Screen.setColor
0;JMP
(RETURN-215)
//Pop
@POP_R1204
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1204)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@2
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1205
D=A
@ADD
0;JMP
(ADD_R1205)
@RETURN-216
D=A
@R13
M=D
@call_Screen.drawLine
0;JMP
(RETURN-216)
//Pop
@POP_R1206
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1206)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-217
D=A
@R13
M=D
@call_Memory.deAlloc
0;JMP
(RETURN-217)
//Pop
@POP_R1207
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1207)
@RETURNS
0;JMP
//funct
(Memory.init)
@0
D=A
@R14
M=D
@F1208
D;JEQ
D=A
@FUNCT
0;JMP
(F1208)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1209
D=A
@R14
M=D
//S
@Memory.0
D=A
@POP
0;JMP
(POP_R1209)
//Push C
@2048
D=A
@SP
M=M+1
A=M-1
M=D
//Push S
@Memory.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1210
D=A
@ADD
0;JMP
(ADD_R1210)
//Push C
@14334
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1211
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1211)
//Pop point
@POP_R1212
D=A
@THT
0;JMP
(POP_R1212)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1213
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1213)
//Push C
@2049
D=A
@SP
M=M+1
A=M-1
M=D
//Push S
@Memory.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1214
D=A
@ADD
0;JMP
(ADD_R1214)
//Push C
@2050
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1215
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1215)
//Pop point
@POP_R1216
D=A
@THT
0;JMP
(POP_R1216)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1217
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1217)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Memory.peek)
@0
D=A
@R14
M=D
@F1218
D;JEQ
D=A
@FUNCT
0;JMP
(F1218)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Memory.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1219
D=A
@ADD
0;JMP
(ADD_R1219)
//Pop point
@POP_R1220
D=A
@THT
0;JMP
(POP_R1220)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Memory.poke)
@0
D=A
@R14
M=D
@F1221
D;JEQ
D=A
@FUNCT
0;JMP
(F1221)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@Memory.0
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1222
D=A
@ADD
0;JMP
(ADD_R1222)
//Push A
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1223
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1223)
//Pop point
@POP_R1224
D=A
@THT
0;JMP
(POP_R1224)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1225
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1225)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(Memory.alloc)
@1
D=A
@R14
M=D
@F1226
D;JEQ
D=A
@FUNCT
0;JMP
(F1226)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//LT
@n1227
D=A
@LT
0;JMP
(n1227)
//if
@IF1228
D=A
@IF
0;JMP
(IF1228)
@Memory.allocIF_TRUE0
D;JNE
//goto
@Memory.allocIF_FALSE0
0;JMP
(Memory.allocIF_TRUE0)
//Push C
@5
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-218
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-218)
//Pop
@POP_R1229
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1229)
(Memory.allocIF_FALSE0)
//Push C
@2048
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1230
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1230)
(Memory.allocWHILE_EXP0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1231
D=A
@ADD
0;JMP
(ADD_R1231)
//Pop point
@POP_R1232
D=A
@THT
0;JMP
(POP_R1232)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n1233
D=A
@LT
0;JMP
(n1233)
//NOT
@SP
A=M-1
M=!M
//if
@IF1234
D=A
@IF
0;JMP
(IF1234)
@Memory.allocWHILE_END0
D;JNE
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1235
D=A
@ADD
0;JMP
(ADD_R1235)
//Pop point
@POP_R1236
D=A
@THT
0;JMP
(POP_R1236)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1237
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1237)
//goto
@Memory.allocWHILE_EXP0
0;JMP
(Memory.allocWHILE_END0)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1238
D=A
@ADD
0;JMP
(ADD_R1238)
//Push C
@16379
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n1239
D=A
@GT
0;JMP
(n1239)
//if
@IF1240
D=A
@IF
0;JMP
(IF1240)
@Memory.allocIF_TRUE1
D;JNE
//goto
@Memory.allocIF_FALSE1
0;JMP
(Memory.allocIF_TRUE1)
//Push C
@6
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-219
D=A
@R13
M=D
@call_Sys.error
0;JMP
(RETURN-219)
//Pop
@POP_R1241
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1241)
(Memory.allocIF_FALSE1)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1242
D=A
@ADD
0;JMP
(ADD_R1242)
//Pop point
@POP_R1243
D=A
@THT
0;JMP
(POP_R1243)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1244
D=A
@ADD
0;JMP
(ADD_R1244)
//GT
@n1245
D=A
@GT
0;JMP
(n1245)
//if
@IF1246
D=A
@IF
0;JMP
(IF1246)
@Memory.allocIF_TRUE2
D;JNE
//goto
@Memory.allocIF_FALSE2
0;JMP
(Memory.allocIF_TRUE2)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1247
D=A
@ADD
0;JMP
(ADD_R1247)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1248
D=A
@ADD
0;JMP
(ADD_R1248)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1249
D=A
@ADD
0;JMP
(ADD_R1249)
//Pop point
@POP_R1250
D=A
@THT
0;JMP
(POP_R1250)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1251
D=A
@SUB
0;JMP
(SUB_R1251)
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1252
D=A
@SUB
0;JMP
(SUB_R1252)
//Pop
@POP_R1253
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1253)
//Pop point
@POP_R1254
D=A
@THT
0;JMP
(POP_R1254)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1255
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1255)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1256
D=A
@ADD
0;JMP
(ADD_R1256)
//Pop point
@POP_R1257
D=A
@THT
0;JMP
(POP_R1257)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1258
D=A
@ADD
0;JMP
(ADD_R1258)
//EQ
@n1259
D=A
@EQ
0;JMP
(n1259)
//if
@IF1260
D=A
@IF
0;JMP
(IF1260)
@Memory.allocIF_TRUE3
D;JNE
//goto
@Memory.allocIF_FALSE3
0;JMP
(Memory.allocIF_TRUE3)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1261
D=A
@ADD
0;JMP
(ADD_R1261)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1262
D=A
@ADD
0;JMP
(ADD_R1262)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1263
D=A
@ADD
0;JMP
(ADD_R1263)
//Push C
@4
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1264
D=A
@ADD
0;JMP
(ADD_R1264)
//Pop
@POP_R1265
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1265)
//Pop point
@POP_R1266
D=A
@THT
0;JMP
(POP_R1266)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1267
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1267)
//goto
@Memory.allocIF_END3
0;JMP
(Memory.allocIF_FALSE3)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@3
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1268
D=A
@ADD
0;JMP
(ADD_R1268)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1269
D=A
@ADD
0;JMP
(ADD_R1269)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1270
D=A
@ADD
0;JMP
(ADD_R1270)
//Pop point
@POP_R1271
D=A
@THT
0;JMP
(POP_R1271)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1272
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1272)
//Pop point
@POP_R1273
D=A
@THT
0;JMP
(POP_R1273)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1274
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1274)
(Memory.allocIF_END3)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1275
D=A
@ADD
0;JMP
(ADD_R1275)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1276
D=A
@ADD
0;JMP
(ADD_R1276)
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1277
D=A
@ADD
0;JMP
(ADD_R1277)
//Pop
@POP_R1278
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1278)
//Pop point
@POP_R1279
D=A
@THT
0;JMP
(POP_R1279)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1280
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1280)
(Memory.allocIF_FALSE2)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1281
D=A
@ADD
0;JMP
(ADD_R1281)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1282
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1282)
//Pop point
@POP_R1283
D=A
@THT
0;JMP
(POP_R1283)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1284
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1284)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1285
D=A
@ADD
0;JMP
(ADD_R1285)
@RETURNS
0;JMP
//funct
(Memory.deAlloc)
@2
D=A
@R14
M=D
@F1286
D;JEQ
D=A
@FUNCT
0;JMP
(F1286)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1287
D=A
@SUB
0;JMP
(SUB_R1287)
//Pop
@POP_R1288
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1288)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1289
D=A
@ADD
0;JMP
(ADD_R1289)
//Pop point
@POP_R1290
D=A
@THT
0;JMP
(POP_R1290)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1291
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1291)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1292
D=A
@ADD
0;JMP
(ADD_R1292)
//Pop point
@POP_R1293
D=A
@THT
0;JMP
(POP_R1293)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1294
D=A
@EQ
0;JMP
(n1294)
//if
@IF1295
D=A
@IF
0;JMP
(IF1295)
@Memory.deAllocIF_TRUE0
D;JNE
//goto
@Memory.deAllocIF_FALSE0
0;JMP
(Memory.deAllocIF_TRUE0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1296
D=A
@ADD
0;JMP
(ADD_R1296)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1297
D=A
@ADD
0;JMP
(ADD_R1297)
//Pop point
@POP_R1298
D=A
@THT
0;JMP
(POP_R1298)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1299
D=A
@SUB
0;JMP
(SUB_R1299)
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1300
D=A
@SUB
0;JMP
(SUB_R1300)
//Pop
@POP_R1301
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1301)
//Pop point
@POP_R1302
D=A
@THT
0;JMP
(POP_R1302)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1303
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1303)
//goto
@Memory.deAllocIF_END0
0;JMP
(Memory.deAllocIF_FALSE0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1304
D=A
@ADD
0;JMP
(ADD_R1304)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1305
D=A
@ADD
0;JMP
(ADD_R1305)
//Pop point
@POP_R1306
D=A
@THT
0;JMP
(POP_R1306)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1307
D=A
@SUB
0;JMP
(SUB_R1307)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1308
D=A
@ADD
0;JMP
(ADD_R1308)
//Pop point
@POP_R1309
D=A
@THT
0;JMP
(POP_R1309)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1310
D=A
@ADD
0;JMP
(ADD_R1310)
//Pop
@POP_R1311
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1311)
//Pop point
@POP_R1312
D=A
@THT
0;JMP
(POP_R1312)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1313
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1313)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1314
D=A
@ADD
0;JMP
(ADD_R1314)
//Pop point
@POP_R1315
D=A
@THT
0;JMP
(POP_R1315)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1316
D=A
@ADD
0;JMP
(ADD_R1316)
//EQ
@n1317
D=A
@EQ
0;JMP
(n1317)
//if
@IF1318
D=A
@IF
0;JMP
(IF1318)
@Memory.deAllocIF_TRUE1
D;JNE
//goto
@Memory.deAllocIF_FALSE1
0;JMP
(Memory.deAllocIF_TRUE1)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1319
D=A
@ADD
0;JMP
(ADD_R1319)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1320
D=A
@ADD
0;JMP
(ADD_R1320)
//Pop
@POP_R1321
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1321)
//Pop point
@POP_R1322
D=A
@THT
0;JMP
(POP_R1322)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1323
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1323)
//goto
@Memory.deAllocIF_END1
0;JMP
(Memory.deAllocIF_FALSE1)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1324
D=A
@ADD
0;JMP
(ADD_R1324)
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1325
D=A
@ADD
0;JMP
(ADD_R1325)
//Pop point
@POP_R1326
D=A
@THT
0;JMP
(POP_R1326)
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1327
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1327)
//Pop point
@POP_R1328
D=A
@THT
0;JMP
(POP_R1328)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1329
D=A
@R14
M=D
//THT
@0
D=A
@THAT
D=D+M
@POP
0;JMP
(POP_R1329)
(Memory.deAllocIF_END1)
(Memory.deAllocIF_END0)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(SpaceInvaders.new)
@0
D=A
@R14
M=D
@F1330
D;JEQ
D=A
@FUNCT
0;JMP
(F1330)
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-220
D=A
@R13
M=D
@call_Memory.alloc
0;JMP
(RETURN-220)
//Pop point
@POP_R1331
D=A
@THS
0;JMP
(POP_R1331)
//call
@RETURN1332
D=A
@R13
M=D
(call_Screen.clearScreen)
@Screen.clearScreen
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN1332)
//Pop
@POP_R1333
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1333)
//Push C
@30
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1334
D=A
@R14
M=D
//THS
@6
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1334)
//Push C
@230
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@229
D=A
@SP
M=M+1
A=M-1
M=D
//Push THS
@6
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN1335
D=A
@R13
M=D
(call_Cannon.new)
@Cannon.new
D=A
@R14
M=D
@4
D=A
@CALL
0;JMP
(RETURN1335)
//Pop
@POP_R1336
D=A
@R14
M=D
//THS
@0
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1336)
//Push C
@238
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@511
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@240
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-221
D=A
@R13
M=D
@call_Screen.drawRectangle
0;JMP
(RETURN-221)
//Pop
@POP_R1337
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1337)
//Push C
@22
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call
@RETURN1338
D=A
@R13
M=D
(call_Output.moveCursor)
@Output.moveCursor
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN1338)
//Pop
@POP_R1339
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1339)
//Push C
@8
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-222
D=A
@R13
M=D
@call_String.new
0;JMP
(RETURN-222)
//Push C
@83
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-223
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-223)
//Push C
@99
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-224
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-224)
//Push C
@111
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-225
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-225)
//Push C
@114
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-226
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-226)
//Push C
@101
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-227
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-227)
//Push C
@58
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-228
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-228)
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-229
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-229)
//Push C
@48
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-230
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-230)
@RETURN-231
D=A
@R13
M=D
@call_Output.printString
0;JMP
(RETURN-231)
//Pop
@POP_R1340
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1340)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1341
D=A
@R14
M=D
//THS
@3
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1341)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1342
D=A
@R14
M=D
//THS
@4
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1342)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1343
D=A
@R14
M=D
//THS
@2
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1343)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1344
D=A
@R14
M=D
//THS
@5
D=A
@THIS
D=D+M
@POP
0;JMP
(POP_R1344)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(SpaceInvaders.dispose)
@0
D=A
@R14
M=D
@F1345
D;JEQ
D=A
@FUNCT
0;JMP
(F1345)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R1346
D=A
@THS
0;JMP
(POP_R1346)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN1347
D=A
@R13
M=D
(call_Cannon.dispose)
@Cannon.dispose
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN1347)
//Pop
@POP_R1348
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1348)
//Push Point1
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-232
D=A
@R13
M=D
@call_Memory.deAlloc
0;JMP
(RETURN-232)
//Pop
@POP_R1349
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1349)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(SpaceInvaders.newInstance)
@0
D=A
@R14
M=D
@F1350
D;JEQ
D=A
@FUNCT
0;JMP
(F1350)
//call
@RETURN1351
D=A
@R13
M=D
(call_SpaceInvaders.new)
@SpaceInvaders.new
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN1351)
//Pop
@POP_R1352
D=A
@R14
M=D
//S
@SpaceInvaders.0
D=A
@POP
0;JMP
(POP_R1352)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(SpaceInvaders.getInstance)
@0
D=A
@R14
M=D
@F1353
D;JEQ
D=A
@FUNCT
0;JMP
(F1353)
//Push S
@SpaceInvaders.0
D=M
@SP
M=M+1
A=M-1
M=D
@RETURNS
0;JMP
//funct
(SpaceInvaders.run)
@2
D=A
@R14
M=D
@F1354
D;JEQ
D=A
@FUNCT
0;JMP
(F1354)
//Push A
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R1355
D=A
@THS
0;JMP
(POP_R1355)
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1356
D=A
@R14
M=D
//L
@0
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1356)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1357
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1357)
(SpaceInvaders.runNEW_LINE)
//Push S
@SpaceInvaders.1
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@SpaceInvaders.2
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@SpaceInvaders.3
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@SpaceInvaders.4
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@SpaceInvaders.5
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1358
D=A
@R14
M=D
//S
@SpaceInvaders.6
D=A
@POP
0;JMP
(POP_R1358)
//Pop
@POP_R1359
D=A
@R14
M=D
//S
@SpaceInvaders.5
D=A
@POP
0;JMP
(POP_R1359)
//Pop
@POP_R1360
D=A
@R14
M=D
//S
@SpaceInvaders.4
D=A
@POP
0;JMP
(POP_R1360)
//Pop
@POP_R1361
D=A
@R14
M=D
//S
@SpaceInvaders.3
D=A
@POP
0;JMP
(POP_R1361)
//Pop
@POP_R1362
D=A
@R14
M=D
//S
@SpaceInvaders.2
D=A
@POP
0;JMP
(POP_R1362)
//call
@RETURN1363
D=A
@R13
M=D
(call_Aliens.new)
@Aliens.new
D=A
@R14
M=D
@0
D=A
@CALL
0;JMP
(RETURN1363)
//Pop
@POP_R1364
D=A
@R14
M=D
//S
@SpaceInvaders.1
D=A
@POP
0;JMP
(POP_R1364)
(SpaceInvaders.runWHILE_0)
//Push C
@10000
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1365
D=A
@R14
M=D
//TMP
@1
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1365)
(SpaceInvaders.runWAIT)
@RETURN-233
D=A
@R13
M=D
@call_Keyboard.keyPressed
0;JMP
(RETURN-233)
//Pop
@POP_R1366
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1366)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@130
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1367
D=A
@EQ
0;JMP
(n1367)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@132
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1368
D=A
@EQ
0;JMP
(n1368)
//OR
@OR_R1369
D=A
@OR
0;JMP
(OR_R1369)
//if
@IF1370
D=A
@IF
0;JMP
(IF1370)
@SpaceInvaders.runMOVE
D;JNE
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@131
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1371
D=A
@EQ
0;JMP
(n1371)
//if
@IF1372
D=A
@IF
0;JMP
(IF1372)
@SpaceInvaders.runSHOOT
D;JNE
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@140
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1373
D=A
@EQ
0;JMP
(n1373)
//if
@IF1374
D=A
@IF
0;JMP
(IF1374)
@SpaceInvaders.runGAME_OVER
D;JNE
//goto
@SpaceInvaders.runCONTINUE
0;JMP
(SpaceInvaders.runSHOOT)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN1375
D=A
@R13
M=D
(call_Cannon.shoot)
@Cannon.shoot
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN1375)
//Pop
@POP_R1376
D=A
@R14
M=D
//TMP
@2
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1376)
(SpaceInvaders.runLOOP)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push TMP
@2
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN1377
D=A
@R13
M=D
(call_Cannon.moveShot)
@Cannon.moveShot
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN1377)
//Pop point
@POP_R1378
D=A
@THT
0;JMP
(POP_R1378)
//Push Point2
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1379
D=A
@EQ
0;JMP
(n1379)
//if
@IF1380
D=A
@IF
0;JMP
(IF1380)
@SpaceInvaders.runCONTINUE
D;JNE
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1381
D=A
@R14
M=D
//TMP
@4
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1381)
//Push S
@SpaceInvaders.1
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@SpaceInvaders.2
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@SpaceInvaders.3
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@SpaceInvaders.4
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@SpaceInvaders.5
D=M
@SP
M=M+1
A=M-1
M=D
//Push S
@SpaceInvaders.6
D=M
@SP
M=M+1
A=M-1
M=D
(SpaceInvaders.runCHECK_HEIGHT)
//Pop point
@POP_R1382
D=A
@THT
0;JMP
(POP_R1382)
//Push Point2
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1383
D=A
@EQ
0;JMP
(n1383)
//if
@IF1384
D=A
@IF
0;JMP
(IF1384)
@SpaceInvaders.runCHECK_HEIGHT
D;JNE
//Push TMP
@4
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@11
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//GT
@n1385
D=A
@GT
0;JMP
(n1385)
//if
@IF1386
D=A
@IF
0;JMP
(IF1386)
@SpaceInvaders.runLOOP
D;JNE
//Push TMP
@4
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1387
D=A
@ADD
0;JMP
(ADD_R1387)
//Push THT
@11
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1388
D=A
@SUB
0;JMP
(SUB_R1388)
//GT
@n1389
D=A
@GT
0;JMP
(n1389)
//if
@IF1390
D=A
@IF
0;JMP
(IF1390)
@SpaceInvaders.runCOLLISION
D;JNE
//Push TMP
@4
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n1391
D=A
@GT
0;JMP
(n1391)
//if
@IF1392
D=A
@IF
0;JMP
(IF1392)
@SpaceInvaders.runCHECK_HEIGHT
D;JNE
//goto
@SpaceInvaders.runLOOP
0;JMP
(SpaceInvaders.runCOLLISION)
//Push THT
@10
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@9
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@8
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@7
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@6
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@5
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@4
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@3
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@2
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@1
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@0
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@11
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1393
D=A
@R14
M=D
//TMP
@3
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1393)
//Push THT
@11
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1394
D=A
@R14
M=D
//TMP
@5
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1394)
(SpaceInvaders.runCHECK_COLLISION)
//Pop point
@POP_R1395
D=A
@THS
0;JMP
(POP_R1395)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Pop point
@POP_R1396
D=A
@THT
0;JMP
(POP_R1396)
//Push THT
@4
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1397
D=A
@SUB
0;JMP
(SUB_R1397)
//LT
@n1398
D=A
@LT
0;JMP
(n1398)
//if
@IF1399
D=A
@IF
0;JMP
(IF1399)
@SpaceInvaders.runLOOP
D;JNE
//Push THT
@4
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THS
@0
D=A
@THIS
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//LT
@n1400
D=A
@LT
0;JMP
(n1400)
//if
@IF1401
D=A
@IF
0;JMP
(IF1401)
@SpaceInvaders.runDESTROY
D;JNE
//Push TMP
@3
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1402
D=A
@SUB
0;JMP
(SUB_R1402)
//Pop
@POP_R1403
D=A
@R14
M=D
//TMP
@3
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1403)
//Push TMP
@3
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n1404
D=A
@GT
0;JMP
(n1404)
//if
@IF1405
D=A
@IF
0;JMP
(IF1405)
@SpaceInvaders.runCHECK_COLLISION
D;JNE
//goto
@SpaceInvaders.runLOOP
0;JMP
(SpaceInvaders.runDESTROY)
//Push TMP
@5
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN1406
D=A
@R13
M=D
(call_Aliens.destroy)
@Aliens.destroy
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN1406)
//Push TMP
@2
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push THT
@4
D=A
@THAT
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push TMP
@4
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN1407
D=A
@R13
M=D
(call_Cannon.shotDispose)
@Cannon.shotDispose
D=A
@R14
M=D
@3
D=A
@CALL
0;JMP
(RETURN1407)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//ADD
@ADD_R1408
D=A
@ADD
0;JMP
(ADD_R1408)
//Pop
@POP_R1409
D=A
@R14
M=D
//L
@1
D=A
@LCL
D=D+M
@POP
0;JMP
(POP_R1409)
//Push C
@22
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@7
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-234
D=A
@R13
M=D
@call_Output.moveCursor
0;JMP
(RETURN-234)
//Pop
@POP_R1410
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1410)
//Push L
@1
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-235
D=A
@R13
M=D
@call_Output.printInt
0;JMP
(RETURN-235)
//Pop
@POP_R1411
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1411)
//goto
@SpaceInvaders.runCONTINUE
0;JMP
(SpaceInvaders.runMOVE)
//Push L
@0
D=A
@LCL
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN1412
D=A
@R13
M=D
(call_Cannon.move)
@Cannon.move
D=A
@R14
M=D
@2
D=A
@CALL
0;JMP
(RETURN1412)
//Pop
@POP_R1413
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1413)
(SpaceInvaders.runCONTINUE)
//Push TMP
@1
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//SUB
@SUB_R1414
D=A
@SUB
0;JMP
(SUB_R1414)
//Pop
@POP_R1415
D=A
@R14
M=D
//TMP
@1
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1415)
//Push TMP
@1
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//GT
@n1416
D=A
@GT
0;JMP
(n1416)
//if
@IF1417
D=A
@IF
0;JMP
(IF1417)
@SpaceInvaders.runWAIT
D;JNE
//Push S
@SpaceInvaders.6
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1418
D=A
@EQ
0;JMP
(n1418)
//if
@IF1419
D=A
@IF
0;JMP
(IF1419)
@SpaceInvaders.runNEXT_1
D;JNE
//Push S
@SpaceInvaders.6
D=M
@SP
M=M+1
A=M-1
M=D
//call
@RETURN1420
D=A
@R13
M=D
(call_Aliens.move)
@Aliens.move
D=A
@R14
M=D
@1
D=A
@CALL
0;JMP
(RETURN1420)
//Pop
@POP_R1421
D=A
@R14
M=D
//TMP
@1
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1421)
//Push TMP
@1
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1422
D=A
@EQ
0;JMP
(n1422)
//if
@IF1423
D=A
@IF
0;JMP
(IF1423)
@SpaceInvaders.runGAME_OVER
D;JNE
//Push TMP
@1
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1424
D=A
@EQ
0;JMP
(n1424)
//if
@IF1425
D=A
@IF
0;JMP
(IF1425)
@SpaceInvaders.runNEXT_1
D;JNE
//Push S
@SpaceInvaders.6
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-236
D=A
@R13
M=D
@call_Memory.deAlloc
0;JMP
(RETURN-236)
//Pop
@POP_R1426
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1426)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1427
D=A
@R14
M=D
//S
@SpaceInvaders.6
D=A
@POP
0;JMP
(POP_R1427)
(SpaceInvaders.runNEXT_1)
//Push S
@SpaceInvaders.5
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1428
D=A
@EQ
0;JMP
(n1428)
//if
@IF1429
D=A
@IF
0;JMP
(IF1429)
@SpaceInvaders.runNEXT_2
D;JNE
//Push S
@SpaceInvaders.5
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-237
D=A
@R13
M=D
@call_Aliens.move
0;JMP
(RETURN-237)
//Pop
@POP_R1430
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1430)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1431
D=A
@EQ
0;JMP
(n1431)
//NOT
@SP
A=M-1
M=!M
//if
@IF1432
D=A
@IF
0;JMP
(IF1432)
@SpaceInvaders.runNEXT_2
D;JNE
//Push S
@SpaceInvaders.5
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-238
D=A
@R13
M=D
@call_Memory.deAlloc
0;JMP
(RETURN-238)
//Pop
@POP_R1433
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1433)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1434
D=A
@R14
M=D
//S
@SpaceInvaders.5
D=A
@POP
0;JMP
(POP_R1434)
(SpaceInvaders.runNEXT_2)
//Push S
@SpaceInvaders.4
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1435
D=A
@EQ
0;JMP
(n1435)
//if
@IF1436
D=A
@IF
0;JMP
(IF1436)
@SpaceInvaders.runNEXT_3
D;JNE
//Push S
@SpaceInvaders.4
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-239
D=A
@R13
M=D
@call_Aliens.move
0;JMP
(RETURN-239)
//Pop
@POP_R1437
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1437)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1438
D=A
@EQ
0;JMP
(n1438)
//NOT
@SP
A=M-1
M=!M
//if
@IF1439
D=A
@IF
0;JMP
(IF1439)
@SpaceInvaders.runNEXT_3
D;JNE
//Push S
@SpaceInvaders.4
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-240
D=A
@R13
M=D
@call_Memory.deAlloc
0;JMP
(RETURN-240)
//Pop
@POP_R1440
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1440)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1441
D=A
@R14
M=D
//S
@SpaceInvaders.4
D=A
@POP
0;JMP
(POP_R1441)
(SpaceInvaders.runNEXT_3)
//Push S
@SpaceInvaders.3
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1442
D=A
@EQ
0;JMP
(n1442)
//if
@IF1443
D=A
@IF
0;JMP
(IF1443)
@SpaceInvaders.runNEXT_4
D;JNE
//Push S
@SpaceInvaders.3
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-241
D=A
@R13
M=D
@call_Aliens.move
0;JMP
(RETURN-241)
//Pop
@POP_R1444
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1444)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1445
D=A
@EQ
0;JMP
(n1445)
//NOT
@SP
A=M-1
M=!M
//if
@IF1446
D=A
@IF
0;JMP
(IF1446)
@SpaceInvaders.runNEXT_4
D;JNE
//Push S
@SpaceInvaders.3
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-242
D=A
@R13
M=D
@call_Memory.deAlloc
0;JMP
(RETURN-242)
//Pop
@POP_R1447
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1447)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1448
D=A
@R14
M=D
//S
@SpaceInvaders.3
D=A
@POP
0;JMP
(POP_R1448)
(SpaceInvaders.runNEXT_4)
//Push S
@SpaceInvaders.2
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1449
D=A
@EQ
0;JMP
(n1449)
//if
@IF1450
D=A
@IF
0;JMP
(IF1450)
@SpaceInvaders.runNEXT_5
D;JNE
//Push S
@SpaceInvaders.2
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-243
D=A
@R13
M=D
@call_Aliens.move
0;JMP
(RETURN-243)
//Pop
@POP_R1451
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1451)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1452
D=A
@EQ
0;JMP
(n1452)
//NOT
@SP
A=M-1
M=!M
//if
@IF1453
D=A
@IF
0;JMP
(IF1453)
@SpaceInvaders.runNEXT_5
D;JNE
//Push S
@SpaceInvaders.2
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-244
D=A
@R13
M=D
@call_Memory.deAlloc
0;JMP
(RETURN-244)
//Pop
@POP_R1454
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1454)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1455
D=A
@R14
M=D
//S
@SpaceInvaders.2
D=A
@POP
0;JMP
(POP_R1455)
(SpaceInvaders.runNEXT_5)
//Push S
@SpaceInvaders.1
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1456
D=A
@EQ
0;JMP
(n1456)
//if
@IF1457
D=A
@IF
0;JMP
(IF1457)
@SpaceInvaders.runNEW_LINE
D;JNE
//Push S
@SpaceInvaders.1
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-245
D=A
@R13
M=D
@call_Aliens.move
0;JMP
(RETURN-245)
//Pop
@POP_R1458
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1458)
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@1
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1459
D=A
@EQ
0;JMP
(n1459)
//if
@IF1460
D=A
@IF
0;JMP
(IF1460)
@SpaceInvaders.runNEW_LINE
D;JNE
//Push TMP
@0
D=A
@5
A=A+D
D=M
@SP
M=M+1
A=M-1
M=D
//Push C
@2
D=A
@SP
M=M+1
A=M-1
M=D
//EQ
@n1461
D=A
@EQ
0;JMP
(n1461)
//NOT
@SP
A=M-1
M=!M
//if
@IF1462
D=A
@IF
0;JMP
(IF1462)
@SpaceInvaders.runWHILE_0
D;JNE
//Push S
@SpaceInvaders.1
D=M
@SP
M=M+1
A=M-1
M=D
@RETURN-246
D=A
@R13
M=D
@call_Memory.deAlloc
0;JMP
(RETURN-246)
//Pop
@POP_R1463
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1463)
//Push C
@0
D=A
@SP
M=M+1
A=M-1
M=D
//Pop
@POP_R1464
D=A
@R14
M=D
//S
@SpaceInvaders.1
D=A
@POP
0;JMP
(POP_R1464)
//goto
@SpaceInvaders.runNEW_LINE
0;JMP
(SpaceInvaders.runGAME_OVER)
//Push C
@10
D=A
@SP
M=M+1
A=M-1
M=D
//Push C
@26
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-247
D=A
@R13
M=D
@call_Output.moveCursor
0;JMP
(RETURN-247)
//Pop
@POP_R1465
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1465)
//Push C
@9
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-248
D=A
@R13
M=D
@call_String.new
0;JMP
(RETURN-248)
//Push C
@71
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-249
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-249)
//Push C
@97
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-250
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-250)
//Push C
@109
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-251
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-251)
//Push C
@101
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-252
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-252)
//Push C
@32
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-253
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-253)
//Push C
@79
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-254
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-254)
//Push C
@118
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-255
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-255)
//Push C
@101
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-256
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-256)
//Push C
@114
D=A
@SP
M=M+1
A=M-1
M=D
@RETURN-257
D=A
@R13
M=D
@call_String.appendChar
0;JMP
(RETURN-257)
@RETURN-258
D=A
@R13
M=D
@call_Output.printString
0;JMP
(RETURN-258)
//Pop
@POP_R1466
D=A
@R14
M=D
//TMP
@0
D=A
@5
D=D+A
@POP
0;JMP
(POP_R1466)
@RETURNS
0;JMP
